
_myprograms/ds18b20/out/ds18b20.elf:     file format elf32-littlearm
_myprograms/ds18b20/out/ds18b20.elf
architecture: armv7e-m, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x1a0004d1

Program Header:
0x70000001 off    0x00016b90 vaddr 0x1a006b90 paddr 0x1a006b90 align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00000000 vaddr 0x10000000 paddr 0x10000000 align 2**16
         filesz 0x000000b4 memsz 0x00000a78 flags rw-
    LOAD off    0x00010000 vaddr 0x1a000000 paddr 0x1a000000 align 2**16
         filesz 0x00006b98 memsz 0x00006b98 flags rwx
    LOAD off    0x00020000 vaddr 0x10000000 paddr 0x1a006b98 align 2**16
         filesz 0x000009f4 memsz 0x000009f4 flags rw-
private flags = 5000400: [Version5 EABI] [hard-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006b8c  1a000000  1a000000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000009f4  10000000  1a006b98  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .data_RAM2    00000000  10080000  10080000  000209f4  2**2
                  CONTENTS
  3 .data_RAM3    00000000  20000000  20000000  000209f4  2**2
                  CONTENTS
  4 .data_RAM4    00000000  20008000  20008000  000209f4  2**2
                  CONTENTS
  5 .data_RAM5    00000000  2000c000  2000c000  000209f4  2**2
                  CONTENTS
  6 .bss          00000080  100009f8  100009f8  000009f8  2**3
                  ALLOC
  7 .bss_RAM2     00000000  10080000  10080000  000209f4  2**2
                  CONTENTS
  8 .bss_RAM3     00000000  20000000  20000000  000209f4  2**2
                  CONTENTS
  9 .bss_RAM4     00000000  20008000  20008000  000209f4  2**2
                  CONTENTS
 10 .bss_RAM5     00000000  2000c000  2000c000  000209f4  2**2
                  CONTENTS
 11 .init_array   00000004  1a006b8c  1a006b8c  00016b8c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .ARM.exidx    00000008  1a006b90  1a006b90  00016b90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 13 .uninit_RESERVED 00000000  10000000  10000000  000209f4  2**2
                  CONTENTS
 14 .noinit_RAM2  00000000  10080000  10080000  000209f4  2**2
                  CONTENTS
 15 .noinit_RAM3  00000000  20000000  20000000  000209f4  2**2
                  CONTENTS
 16 .noinit_RAM4  00000000  20008000  20008000  000209f4  2**2
                  CONTENTS
 17 .noinit_RAM5  00000000  2000c000  2000c000  000209f4  2**2
                  CONTENTS
 18 .noinit       00000000  10000a78  10000a78  000209f4  2**2
                  CONTENTS
 19 .debug_info   0001eaf9  00000000  00000000  000209f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_abbrev 00004539  00000000  00000000  0003f4ed  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_loc    00007a8e  00000000  00000000  00043a26  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_aranges 00000988  00000000  00000000  0004b4b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_ranges 00000a48  00000000  00000000  0004be3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_macro  0000d260  00000000  00000000  0004c884  2**0
                  CONTENTS, READONLY, DEBUGGING
 25 .debug_line   00010ba4  00000000  00000000  00059ae4  2**0
                  CONTENTS, READONLY, DEBUGGING
 26 .debug_str    00029aaa  00000000  00000000  0006a688  2**0
                  CONTENTS, READONLY, DEBUGGING
 27 .comment      00000068  00000000  00000000  00094132  2**0
                  CONTENTS, READONLY
 28 .ARM.attributes 00000032  00000000  00000000  0009419a  2**0
                  CONTENTS, READONLY
 29 .debug_frame  00002194  00000000  00000000  000941cc  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
1a000000 l    d  .text	00000000 .text
10000000 l    d  .data	00000000 .data
10080000 l    d  .data_RAM2	00000000 .data_RAM2
20000000 l    d  .data_RAM3	00000000 .data_RAM3
20008000 l    d  .data_RAM4	00000000 .data_RAM4
2000c000 l    d  .data_RAM5	00000000 .data_RAM5
100009f8 l    d  .bss	00000000 .bss
10080000 l    d  .bss_RAM2	00000000 .bss_RAM2
20000000 l    d  .bss_RAM3	00000000 .bss_RAM3
20008000 l    d  .bss_RAM4	00000000 .bss_RAM4
2000c000 l    d  .bss_RAM5	00000000 .bss_RAM5
1a006b8c l    d  .init_array	00000000 .init_array
1a006b90 l    d  .ARM.exidx	00000000 .ARM.exidx
10000000 l    d  .uninit_RESERVED	00000000 .uninit_RESERVED
10080000 l    d  .noinit_RAM2	00000000 .noinit_RAM2
20000000 l    d  .noinit_RAM3	00000000 .noinit_RAM3
20008000 l    d  .noinit_RAM4	00000000 .noinit_RAM4
2000c000 l    d  .noinit_RAM5	00000000 .noinit_RAM5
10000a78 l    d  .noinit	00000000 .noinit
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 armv7m_startup.c
00000000 l    df *ABS*	00000000 vendor_interrupt.c
00000000 l    df *ABS*	00000000 crp.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 ds18b20.c
00000000 l    df *ABS*	00000000 system.c
100009f8 l     O .bss	00000004 heap_end.5864
00000000 l    df *ABS*	00000000 board_sysinit.c
1a006660 l     O .text	00000004 InitClkStates
1a006664 l     O .text	00000074 pinmuxing
00000000 l    df *ABS*	00000000 board.c
1a00062c l     F .text	00000044 Board_LED_Init
1a000670 l     F .text	00000040 Board_TEC_Init
1a0006b0 l     F .text	00000040 Board_GPIO_Init
1a0006f0 l     F .text	00000030 Board_ADC_Init
1a000720 l     F .text	00000038 Board_SPI_Init
1a000758 l     F .text	00000024 Board_I2C_Init
1a0066dc l     O .text	00000008 GpioButtons
1a0066e4 l     O .text	0000000c GpioLeds
1a0066f0 l     O .text	00000012 GpioPorts
00000000 l    df *ABS*	00000000 ssp_18xx_43xx.c
1a0007d8 l     F .text	00000014 Chip_SSP_GetClockIndex
1a0007ec l     F .text	00000018 Chip_SSP_GetPeriphClockIndex
00000000 l    df *ABS*	00000000 i2c_18xx_43xx.c
10000000 l     O .data	00000038 i2c
00000000 l    df *ABS*	00000000 gpio_18xx_43xx.c
00000000 l    df *ABS*	00000000 adc_18xx_43xx.c
1a00090c l     F .text	00000014 Chip_ADC_GetClockIndex
1a000920 l     F .text	00000032 getClkDiv
00000000 l    df *ABS*	00000000 sysinit_18xx_43xx.c
1a006708 l     O .text	00000048 InitClkStates
00000000 l    df *ABS*	00000000 chip_18xx_43xx.c
00000000 l    df *ABS*	00000000 clock_18xx_43xx.c
1a000b40 l     F .text	000000a0 pll_calc_divs
1a000be0 l     F .text	0000010c pll_get_frac
1a000cec l     F .text	0000004c Chip_Clock_FindBaseClock
1a000f60 l     F .text	00000022 Chip_Clock_GetDivRate
100009fc l     O .bss	00000008 audio_usb_pll_freq
1a00675c l     O .text	0000006c periph_to_base
00000000 l    df *ABS*	00000000 uart_18xx_43xx.c
1a0010cc l     F .text	0000002c Chip_UART_GetIndex
1a0067c8 l     O .text	00000008 UART_BClock
1a0067d0 l     O .text	00000008 UART_PClock
00000000 l    df *ABS*	00000000 sysinit.c
00000000 l    df *ABS*	00000000 sapi_cyclesCounter.c
10000038 l     O .data	00000004 ClockSpeed
00000000 l    df *ABS*	00000000 sapi_gpio.c
1a00127c l     F .text	00000034 gpioObtainPinInit
00000000 l    df *ABS*	00000000 sapi_tick.c
10000a04 l     O .bss	00000004 callBackFuncParams
10000a08 l     O .bss	00000008 tickCounter
10000a10 l     O .bss	00000004 tickHookFunction
00000000 l    df *ABS*	00000000 sapi_uart.c
1a0068c0 l     O .text	00000048 lpcUarts
00000000 l    df *ABS*	00000000 sapi_usb_device.c
10000a14 l     O .bss	00000004 g_hUsb
00000000 l    df *ABS*	00000000 sapi_board.c
00000000 l    df *ABS*	00000000 sapi_delay.c
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 lock.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 lib_a-memcpy.o
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 vfprintf.c
1a006a50 l     O .text	00000010 blanks.8678
1a006a60 l     O .text	00000010 zeroes.8679
00000000 l    df *ABS*	00000000 dtoa.c
1a00495c l     F .text	00000124 quorem
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 lib_a-memchr.o
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
1a006b70 l     O .text	0000000c p05.7442
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_frexp.c
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 vfprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 impure.c
10000050 l     O .data	00000428 impure_data
00000000 l    df *ABS*	00000000 
1a006b90 l       .init_array	00000000 __init_array_end
1a006b8c l       .bss_RAM5	00000000 __preinit_array_end
1a006b8c l       .init_array	00000000 __init_array_start
1a006b8c l       .bss_RAM5	00000000 __preinit_array_start
1a002028 g     F .text	0000002c .hidden __aeabi_dcmpun
1a000d84 g     F .text	0000001c Chip_Clock_GetDividerSource
1a001fec g     F .text	00000012 .hidden __aeabi_dcmple
1a0001ba  w    F .text	00000002 TIMER2_IRQHandler
1a001f28 g     F .text	0000007a .hidden __cmpdf2
1a000184  w    F .text	00000002 DebugMon_Handler
1a000374 g     F .text	0000000c GPIO_SetPinAsOutput
1a0001ba  w    F .text	00000002 RIT_IRQHandler
1a080000 g       *ABS*	00000000 __top_MFlashA512
1a001f28 g     F .text	0000007a .hidden __eqdf2
1a0001ba  w    F .text	00000002 ADCHS_IRQHandler
1a000114 g       .text	00000000 __section_table_start
1a0001ba  w    F .text	00000002 FLASH_EEPROM_IRQHandler
1a001a98 g     F .text	0000005a .hidden __floatdidf
1a0001ba  w    F .text	00000002 I2C0_IRQHandler
1a0007d0 g     F .text	00000008 __stdio_init
10000a54 g     O .bss	00000001 __lock___atexit_recursive_mutex
1a00017a  w    F .text	00000002 HardFault_Handler
1a000000 g       *ABS*	00000000 __vectors_start__
1a0009c6 g     F .text	0000000c Chip_ADC_SetResolution
1a002dd4 g     F .text	0000000c __malloc_unlock
1a0015d0 g     F .text	0000002c SysTick_Handler
10000a58 g     O .bss	00000001 __lock___arc4random_mutex
1a0004cc  w    F .text	00000002 initialise_monitor_handles
1a0001ba  w    F .text	00000002 SDIO_IRQHandler
1a0001ba  w    F .text	00000002 ATIMER_IRQHandler
1a005980 g     F .text	000000ce memmove
1a000186  w    F .text	00000002 PendSV_Handler
1a000178  w    F .text	00000002 NMI_Handler
1a005a50 g     F .text	0000004c _Balloc
1a006b98 g       .ARM.exidx	00000000 __exidx_end
1a000150 g       .text	00000000 __data_section_table_end
1a0001ba  w    F .text	00000002 I2C1_IRQHandler
1a00046c g     F .text	00000032 DS18B20_Start
1a0001ba  w    F .text	00000002 UART1_IRQHandler
1a001f18 g     F .text	0000008a .hidden __gtdf2
1a0001ba  w    F .text	00000002 GPIO5_IRQHandler
1a000368 g     F .text	0000000c GPIO_SetPinAsInput
1a0001ba  w    F .text	00000002 CAN1_IRQHandler
53ff73be g       *ABS*	00000000 __valid_user_code_checksum
1a006b98 g       .ARM.exidx	00000000 _etext
1a001fb4 g     F .text	00000010 .hidden __aeabi_cdcmple
1a0001ba  w    F .text	00000002 USB1_IRQHandler
1a0001ba  w    F .text	00000002 I2S0_IRQHandler
1a0001ba  w    F .text	00000002 TIMER3_IRQHandler
1a001002 g     F .text	0000000c Chip_Clock_GetBaseClocktHz
1a0001ba  w    F .text	00000002 UART0_IRQHandler
1a0001a8 g     F .text	00000012 bss_init
1a002bf4 g     F .text	00000134 memcpy
1a001fa4 g     F .text	00000020 .hidden __aeabi_cdrcmple
1a0001ba  w    F .text	00000002 SGPIO_IRQHandler
1a002f20 g     F .text	00001a3c _svfprintf_r
1a001a20 g     F .text	00000022 .hidden __floatsidf
1a001f20 g     F .text	00000082 .hidden __ltdf2
1a0020a4 g     F .text	00000000 .hidden __aeabi_uldivmod
10000a78 g       .noinit	00000000 _noinit
1a001642 g     F .text	00000016 uartWriteString
10000a4c g     O .bss	00000004 SystemCoreClock
1a0010f8 g     F .text	00000054 Chip_UART_Init
1a0001ba  w    F .text	00000002 ADC0_IRQHandler
1a006aa8 g     O .text	000000c8 __mprec_tens
1a000180  w    F .text	00000002 UsageFault_Handler
1a001080 g     F .text	0000004c Chip_Clock_GetRate
1a0001ba  w    F .text	00000002 GPIO6_IRQHandler
10000a48 g     O .bss	00000004 __malloc_top_pad
1a0005b4 g     F .text	0000006c Board_SetupClocking
20008000 g       *ABS*	00000000 __top_RamAHB32
1a001a00 g     F .text	0000001e .hidden __aeabi_ui2d
1a0058d4 g     F .text	00000008 _localeconv_r
1a005bdc g     F .text	00000012 __i2b
1a0020d4 g     F .text	000002d0 .hidden __udivmoddi4
1a00177c g     F .text	00000000 .hidden __aeabi_drsub
1a00055c g     F .text	00000020 _sbrk_r
1a0066d8 g     O .text	00000004 ExtRateIn
1a0001ba  w    F .text	00000002 IntDefaultHandler
1a000300 g       .text	00000000 __CRP_WORD_END__
1a001fd8 g     F .text	00000012 .hidden __aeabi_dcmplt
1a0001ba  w    F .text	00000002 GPIO1_IRQHandler
10000a40 g     O .bss	00000004 __malloc_max_sbrked_mem
1a0004a0 g     F .text	0000002c DS18B20_GetTemperature
1a001a44 g     F .text	00000042 .hidden __extendsfdf2
1a001d48 g     F .text	000001d0 .hidden __aeabi_ddiv
1a0001ba  w    F .text	00000002 SSP0_IRQHandler
1a001788 g     F .text	00000276 .hidden __adddf3
1a006b90 g       .ARM.exidx	00000000 __exidx_start
10000a5c g     O .bss	00000001 __lock___env_recursive_mutex
1a001af4 g     F .text	00000254 .hidden __aeabi_dmul
1a0002fc g     O .text	00000004 CRP_WORD
10000a60 g     O .bss	00000001 __lock___sinit_recursive_mutex
1a006064 g     F .text	0000036c _realloc_r
1a002634 g     F .text	00000048 __libc_init_array
1a006a80 g     O .text	00000028 __mprec_bigtens
1a001a00 g     F .text	0000001e .hidden __floatunsidf
1a0001ba  w    F .text	00000002 ADC1_IRQHandler
1a005e74 g     F .text	00000038 __mcmp
1a0007a0 g     F .text	00000030 Board_Init
1a00055a  w    F .text	00000002 _init
1a000114 g       .text	00000000 __data_section_table
1a0001ba  w    F .text	00000002 RTC_IRQHandler
10000a78 g       .bss	00000000 _ebss
1a0001ba  w    F .text	00000002 TIMER0_IRQHandler
1a0004d0 g     F .text	00000088 Reset_Handler
1a001554 g     F .text	0000007c tickInit
20010000 g       *ABS*	00000000 __top_RamAHB_ETB16
1a0001ba  w    F .text	00000002 SPI_IRQHandler
1a005b3c g     F .text	00000040 __hi0bits
1a0008d0 g     F .text	00000038 Chip_I2C_SetClockRate
1a002054 g     F .text	0000004e .hidden __fixdfsi
1a0001ba  w    F .text	00000002 LCD_IRQHandler
1a000d38 g     F .text	0000004c Chip_Clock_EnableCrystal
10000a64 g     O .bss	00000001 __lock___malloc_recursive_mutex
1a000380 g     F .text	00000042 DS18B20_Init
10008000 g       *ABS*	00000000 __top_RamLoc32
1a001788 g     F .text	00000276 .hidden __aeabi_dadd
1a00018a g     F .text	0000001e data_init
1a001f20 g     F .text	00000082 .hidden __ledf2
1a005d20 g     F .text	000000a0 __pow5mult
1a001a88 g     F .text	0000006a .hidden __aeabi_ul2d
1a0001ba  w    F .text	00000002 TIMER1_IRQHandler
1a0008ac g     F .text	00000024 Chip_I2C_Init
1a002680 g     F .text	00000002 __retarget_lock_release_recursive
1a0001ba  w    F .text	00000002 UART2_IRQHandler
1a000ef4 g     F .text	0000006c Chip_Clock_GetMainPLLHz
1a0067d8 g     O .text	000000e6 gpioPinsInit
1a001628 g     F .text	0000001a uartWriteByte
1a000804 g     F .text	00000012 Chip_SSP_SetClockRate
1a002014 g     F .text	00000012 .hidden __aeabi_dcmpgt
1a0001ba  w    F .text	00000002 GPIO2_IRQHandler
1a0058e0 g     F .text	00000000 memchr
1a002448 g     F .text	000001ec _free_r
1a000fdc g     F .text	00000026 Chip_Clock_GetBaseClock
1a002000 g     F .text	00000012 .hidden __aeabi_dcmpge
100009f8 g       .bss	00000000 _bss
1a000994 g     F .text	00000032 Chip_ADC_SetSampleRate
1a001784 g     F .text	0000027a .hidden __aeabi_dsub
10000880 g     O .data	00000004 __malloc_sbrk_base
1a001a88 g     F .text	0000006a .hidden __floatundidf
1a005dc0 g     F .text	000000b2 __lshift
1a0001ba  w    F .text	00000002 I2S1_IRQHandler
1a0064b0 g     F .text	000000f6 __ssprint_r
1a000816 g     F .text	0000003e Chip_SSP_SetBitRate
1a000908 g     F .text	00000002 Chip_GPIO_Init
1a006704 g     O .text	00000004 OscRateIn
1a005bf0 g     F .text	00000130 __multiply
10000a78 g       .noinit	00000000 _end_noinit
10008000 g       *ABS*	00000000 _vStackTop
1a00643c g     F .text	00000072 strncpy
10000a18 g     O .bss	00000028 __malloc_current_mallinfo
1a005fa4 g     F .text	000000be __d2b
1a0001ba  w    F .text	00000002 SSP1_IRQHandler
1a000178 g       .text	00000000 __bss_section_table_end
1a001a20 g     F .text	00000022 .hidden __aeabi_i2d
1a0012b0 g     F .text	000001ac gpioInit
1a0023a4  w    F .text	00000002 .hidden __aeabi_ldiv0
1a001d48 g     F .text	000001d0 .hidden __divdf3
10000478 g     O .data	00000408 __malloc_av_
1a001af4 g     F .text	00000254 .hidden __muldf3
1a001658 g     F .text	0000001c USB0_IRQHandler
1a0001ba  w    F .text	00000002 GPIO3_IRQHandler
1a002dc8 g     F .text	0000000c __malloc_lock
1a0001ba  w    F .text	00000002 SCT_IRQHandler
1a0065a8 g     F .text	0000005e _calloc_r
1a000da0 g     F .text	0000001c Chip_Clock_GetDividerDivisor
1a0002fc g       .text	00000000 __CRP_WORD_START__
1a00267c g     F .text	00000002 __retarget_lock_acquire_recursive
1a002d28 g     F .text	000000a0 memset
1a00017c  w    F .text	00000002 MemManage_Handler
1a000300 g     F .text	00000068 main
10000a44 g     O .bss	00000004 __malloc_max_total_mem
1a0001ba  w    F .text	00000002 WDT_IRQHandler
2000c000 g       *ABS*	00000000 __top_RamAHB16
1008a000 g       *ABS*	00000000 __top_RamLoc40
1a000182  w    F .text	00000002 SVC_Handler
1a004a80 g     F .text	00000e54 _dtoa_r
1a002684 g     F .text	00000570 _malloc_r
1a006634 g     F .text	0000001a __ascii_wctomb
1a001a98 g     F .text	0000005a .hidden __aeabi_l2d
1a0015fc g     F .text	00000018 uartTxReady
1a0001ba  w    F .text	00000002 GPIO7_IRQHandler
1a001010 g     F .text	0000003c Chip_Clock_EnableOpts
1a000412 g     F .text	0000005a DS18B20_WriteData
1a0023a8 g     F .text	000000a0 _malloc_trim_r
1a000dbc g     F .text	000000b8 Chip_Clock_GetClockInputHz
1a000e74 g     F .text	00000080 Chip_Clock_CalcMainPLLValue
1a001228 g     F .text	00000038 SystemInit
1a0001ba  w    F .text	00000002 SPIFI_IRQHandler
1a001744 g     F .text	00000038 delay
1a0001ba  w    F .text	00000002 QEI_IRQHandler
1a000150 g       .text	00000000 __bss_section_table
1a001f28 g     F .text	0000007a .hidden __nedf2
1a00145c g     F .text	0000006a gpioWrite
1a000558  w    F .text	00000002 _fini
1a002de0 g     F .text	00000044 sprintf
1a000954 g     F .text	00000040 Chip_ADC_Init
10000a50 g     O .bss	00000004 g_pUsbApi
1a00057c g     F .text	00000038 Board_SetupMuxing
1a00114c g     F .text	000000dc Chip_UART_SetBaudFDR
1a001530 g     F .text	0000000c tickRead
10000040 g     O .data	00000008 tickRateMS
1a0001ba  w    F .text	00000002 ETH_IRQHandler
10000048 g     O .data	00000004 _impure_ptr
10000000 g       .uninit_RESERVED	00000000 _end_uninit_RESERVED
1b000000 g       .text	00000000 __core_m0app_START__
1a001614 g     F .text	00000014 uartTxWrite
1a0001ba  w    F .text	00000002 CAN0_IRQHandler
1a006608 g     F .text	0000002a __ascii_mbtowc
10000000 g       .data	00000000 _data
10000a78 g       .bss	00000000 _pvHeapStart
1a000178 g       .text	00000000 __section_table_end
1a000854 g     F .text	00000038 Chip_SSP_Init
1a0001ba  w    F .text	00000002 GINT0_IRQHandler
1a0001ba  w    F .text	00000002 DAC_IRQHandler
1a00077c g     F .text	00000024 Board_Debug_Init
1a001fc4 g     F .text	00000012 .hidden __aeabi_dcmpeq
100009f4 g       .data	00000000 _edata
1a00088c g     F .text	00000020 Chip_I2C_EventHandler
1a0001ba  w    F .text	00000002 M0SUB_IRQHandler
10000a68 g     O .bss	00000001 __lock___at_quick_exit_mutex
1a0003c2 g     F .text	00000050 DS18B20_ReadData
1a0009d4 g     F .text	00000158 Chip_SetupCoreClock
1a0001ba  w    F .text	00000002 GPIO0_IRQHandler
10000884 g     O .data	00000004 __malloc_trim_threshold
1a000000 g     O .text	00000040 g_pfnVectors
1a000b2c g     F .text	00000014 SystemCoreClockUpdate
1a005eac g     F .text	000000f8 __mdiff
1a002054 g     F .text	0000004e .hidden __aeabi_d2iz
1a0001ba  w    F .text	00000002 DMA_IRQHandler
1a0001ba  w    F .text	00000002 EVRT_IRQHandler
1b080000 g       *ABS*	00000000 __top_MFlashB512
1a006908 g     O .text	00000101 _ctype_
1a0016e8 g     F .text	0000005c delayInaccurateUs
1a0023a4  w    F .text	00000002 .hidden __aeabi_idiv0
1a002028 g     F .text	0000002c .hidden __unorddf2
1a00017e  w    F .text	00000002 BusFault_Handler
10000a6c g     O .bss	00000001 __lock___dd_hash_mutex
10000a70 g     O .bss	00000001 __lock___tz_mutex
1a002e40 g     F .text	000000dc strlen
1a00104c g     F .text	00000034 Chip_Clock_Enable
1a001fb4 g     F .text	00000010 .hidden __aeabi_cdcmpeq
1a001f18 g     F .text	0000008a .hidden __gedf2
1a0001ba  w    F .text	00000002 UART3_IRQHandler
1a0001ba  w    F .text	00000002 MCPWM_IRQHandler
1a0001ba  w    F .text	00000002 M0APP_IRQHandler
1a0014c6 g     F .text	00000068 gpioRead
1a001a44 g     F .text	00000042 .hidden __aeabi_f2d
1a001674 g     F .text	00000074 boardInit
1a000040 g     O .text	000000d4 g_pfnVendorVectors
1a001784 g     F .text	0000027a .hidden __subdf3
1a0001ba  w    F .text	00000002 GINT1_IRQHandler
1a005b7c g     F .text	00000060 __lo0bits
1a00153c g     F .text	00000018 tickPowerSet
1a0063d0 g     F .text	0000006c frexp
10000888 g     O .data	0000016c __global_locale
1a000f84 g     F .text	00000058 Chip_Clock_SetBaseClock
1a001260 g     F .text	0000001c cyclesCounterInit
1a0001ba  w    F .text	00000002 GPIO4_IRQHandler
10000a74 g     O .bss	00000001 __lock___sfp_recursive_mutex
1a000620 g     F .text	0000000c Board_SystemInit
1a005ab0 g     F .text	0000008a __multadd
1a005a9c g     F .text	00000012 _Bfree



Disassembly of section .text:

1a000000 <g_pfnVectors>:
1a000000:	00 80 00 10 d1 04 00 1a 79 01 00 1a 7b 01 00 1a     ........y...{...
1a000010:	7d 01 00 1a 7f 01 00 1a 81 01 00 1a be 73 ff 53     }............s.S
	...
1a00002c:	83 01 00 1a 85 01 00 1a 00 00 00 00 87 01 00 1a     ................
1a00003c:	d1 15 00 1a                                         ....

1a000040 <g_pfnVendorVectors>:
1a000040:	bb 01 00 1a bb 01 00 1a bb 01 00 1a 00 00 00 00     ................
1a000050:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a000060:	59 16 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     Y...............
1a000070:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a000080:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a000090:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000a0:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000b0:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000c0:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000d0:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000e0:	bb 01 00 1a bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a0000f0:	00 00 00 00 bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a000100:	00 00 00 00 bb 01 00 1a bb 01 00 1a bb 01 00 1a     ................
1a000110:	bb 01 00 1a                                         ....

1a000114 <__data_section_table>:
1a000114:	1a006b98 	.word	0x1a006b98
1a000118:	10000000 	.word	0x10000000
1a00011c:	000009f4 	.word	0x000009f4
1a000120:	1a006b98 	.word	0x1a006b98
1a000124:	10080000 	.word	0x10080000
1a000128:	00000000 	.word	0x00000000
1a00012c:	1a006b98 	.word	0x1a006b98
1a000130:	20000000 	.word	0x20000000
1a000134:	00000000 	.word	0x00000000
1a000138:	1a006b98 	.word	0x1a006b98
1a00013c:	20008000 	.word	0x20008000
1a000140:	00000000 	.word	0x00000000
1a000144:	1a006b98 	.word	0x1a006b98
1a000148:	2000c000 	.word	0x2000c000
1a00014c:	00000000 	.word	0x00000000

1a000150 <__bss_section_table>:
1a000150:	100009f8 	.word	0x100009f8
1a000154:	00000080 	.word	0x00000080
1a000158:	10080000 	.word	0x10080000
1a00015c:	00000000 	.word	0x00000000
1a000160:	20000000 	.word	0x20000000
1a000164:	00000000 	.word	0x00000000
1a000168:	20008000 	.word	0x20008000
1a00016c:	00000000 	.word	0x00000000
1a000170:	2000c000 	.word	0x2000c000
1a000174:	00000000 	.word	0x00000000

1a000178 <NMI_Handler>:
}

__attribute__ ((section(".after_vectors")))
void NMI_Handler(void) {
    while (1) {
    }
1a000178:	e7fe      	b.n	1a000178 <NMI_Handler>

1a00017a <HardFault_Handler>:
}
__attribute__ ((section(".after_vectors")))
void HardFault_Handler(void) {
    while (1) {
    }
1a00017a:	e7fe      	b.n	1a00017a <HardFault_Handler>

1a00017c <MemManage_Handler>:
}
__attribute__ ((section(".after_vectors")))
void MemManage_Handler(void) {
    while (1) {
    }
1a00017c:	e7fe      	b.n	1a00017c <MemManage_Handler>

1a00017e <BusFault_Handler>:
}
__attribute__ ((section(".after_vectors")))
void BusFault_Handler(void) {
    while (1) {
    }
1a00017e:	e7fe      	b.n	1a00017e <BusFault_Handler>

1a000180 <UsageFault_Handler>:
}
__attribute__ ((section(".after_vectors")))
void UsageFault_Handler(void) {
    while (1) {
    }
1a000180:	e7fe      	b.n	1a000180 <UsageFault_Handler>

1a000182 <SVC_Handler>:
}
__attribute__ ((section(".after_vectors")))
void SVC_Handler(void) {
    while (1) {
    }
1a000182:	e7fe      	b.n	1a000182 <SVC_Handler>

1a000184 <DebugMon_Handler>:
}
__attribute__ ((section(".after_vectors")))
void DebugMon_Handler(void) {
    while (1) {
    }
1a000184:	e7fe      	b.n	1a000184 <DebugMon_Handler>

1a000186 <PendSV_Handler>:
}
__attribute__ ((section(".after_vectors")))
void PendSV_Handler(void) {
    while (1) {
    }
1a000186:	e7fe      	b.n	1a000186 <PendSV_Handler>
}
__attribute__ ((section(".after_vectors")))
void SysTick_Handler(void) {
    while (1) {
    }
1a000188:	e7fe      	b.n	1a000188 <PendSV_Handler+0x2>

1a00018a <data_init>:
    for (loop = 0; loop < len; loop = loop + 4)
1a00018a:	2300      	movs	r3, #0
1a00018c:	4293      	cmp	r3, r2
1a00018e:	d20a      	bcs.n	1a0001a6 <data_init+0x1c>
void data_init(unsigned int romstart, unsigned int start, unsigned int len) {
1a000190:	b410      	push	{r4}
        *pulDest++ = *pulSrc++;
1a000192:	f850 4b04 	ldr.w	r4, [r0], #4
1a000196:	f841 4b04 	str.w	r4, [r1], #4
    for (loop = 0; loop < len; loop = loop + 4)
1a00019a:	3304      	adds	r3, #4
1a00019c:	4293      	cmp	r3, r2
1a00019e:	d3f8      	bcc.n	1a000192 <data_init+0x8>
}
1a0001a0:	f85d 4b04 	ldr.w	r4, [sp], #4
1a0001a4:	4770      	bx	lr
1a0001a6:	4770      	bx	lr

1a0001a8 <bss_init>:
    for (loop = 0; loop < len; loop = loop + 4)
1a0001a8:	2300      	movs	r3, #0
1a0001aa:	428b      	cmp	r3, r1
1a0001ac:	d204      	bcs.n	1a0001b8 <bss_init+0x10>
        *pulDest++ = 0;
1a0001ae:	2200      	movs	r2, #0
1a0001b0:	f840 2b04 	str.w	r2, [r0], #4
    for (loop = 0; loop < len; loop = loop + 4)
1a0001b4:	3304      	adds	r3, #4
1a0001b6:	e7f8      	b.n	1a0001aa <bss_init+0x2>
}
1a0001b8:	4770      	bx	lr

1a0001ba <ADC0_IRQHandler>:
#endif

__attribute__ ((section(".after_vectors")))
void IntDefaultHandler(void) {
    while (1) {
    }
1a0001ba:	e7fe      	b.n	1a0001ba <ADC0_IRQHandler>
1a0001bc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001c0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001c4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001c8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001cc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001d0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001d4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001d8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001dc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001e0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001e4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001e8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001ec:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001f0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001f4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001f8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0001fc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000200:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000204:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000208:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00020c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000210:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000214:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000218:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00021c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000220:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000224:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000228:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00022c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000230:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000234:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000238:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00023c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000240:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000244:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000248:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00024c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000250:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000254:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000258:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00025c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000260:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000264:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000268:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00026c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000270:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000274:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000278:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00027c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000280:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000284:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000288:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00028c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000290:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000294:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a000298:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a00029c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002a0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002a4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002a8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002ac:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002b0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002b4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002b8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002bc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002c0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002c4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002c8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002cc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002d0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002d4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002d8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002dc:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002e0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002e4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002e8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002ec:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002f0:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002f4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
1a0002f8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff

1a0002fc <CRP_WORD>:
1a0002fc:	ffff ffff                                   ....

1a000300 <main>:
/*==================[internal functions definition]==========================*/

/*==================[external functions definition]==========================*/

/* FUNCION PRINCIPAL, PUNTO DE ENTRADA AL PROGRAMA LUEGO DE RESET. */
int main(void){
1a000300:	b500      	push	{lr}
1a000302:	b087      	sub	sp, #28

   /* ------------- INICIALIZACIONES ------------- */
   float temp = 0;
   char msg[20] = {0};
1a000304:	2300      	movs	r3, #0
1a000306:	9301      	str	r3, [sp, #4]
1a000308:	9302      	str	r3, [sp, #8]
1a00030a:	9303      	str	r3, [sp, #12]
1a00030c:	9304      	str	r3, [sp, #16]
1a00030e:	9305      	str	r3, [sp, #20]
   
   /* Inicializar la placa */
   boardConfig();
1a000310:	f001 f9b0 	bl	1a001674 <boardInit>

   /* ------------- REPETIR POR SIEMPRE ------------- */
   while(1) {

      /* Prendo el led azul */
      gpioWrite( LEDB, ON );
1a000314:	2101      	movs	r1, #1
1a000316:	202a      	movs	r0, #42	; 0x2a
1a000318:	f001 f8a0 	bl	1a00145c <gpioWrite>
      delay(500);
1a00031c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
1a000320:	2100      	movs	r1, #0
1a000322:	f001 fa0f 	bl	1a001744 <delay>
      /* Apago el led azul */
      gpioWrite( LEDB, OFF );
1a000326:	2100      	movs	r1, #0
1a000328:	202a      	movs	r0, #42	; 0x2a
1a00032a:	f001 f897 	bl	1a00145c <gpioWrite>
      delay(500);
1a00032e:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
1a000332:	2100      	movs	r1, #0
1a000334:	f001 fa06 	bl	1a001744 <delay>
      
      temp = DS18B20_GetTemperature();
1a000338:	f000 f8b2 	bl	1a0004a0 <DS18B20_GetTemperature>
      sprintf(msg, "Temp : %5.2f", temp);
1a00033c:	ee07 0a90 	vmov	s15, r0
1a000340:	eef8 7ae7 	vcvt.f32.s32	s15, s15
1a000344:	ee17 0a90 	vmov	r0, s15
1a000348:	f001 fb7c 	bl	1a001a44 <__aeabi_f2d>
1a00034c:	4602      	mov	r2, r0
1a00034e:	460b      	mov	r3, r1
1a000350:	4904      	ldr	r1, [pc, #16]	; (1a000364 <main+0x64>)
1a000352:	a801      	add	r0, sp, #4
1a000354:	f002 fd44 	bl	1a002de0 <sprintf>
      uartWriteString( UART_USB, msg );
1a000358:	a901      	add	r1, sp, #4
1a00035a:	2003      	movs	r0, #3
1a00035c:	f001 f971 	bl	1a001642 <uartWriteString>
1a000360:	e7d8      	b.n	1a000314 <main+0x14>
1a000362:	bf00      	nop
1a000364:	1a006650 	.word	0x1a006650

1a000368 <GPIO_SetPinAsInput>:
/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Variables ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
/* ::::::::::::::: Pin Configuration ::::::::::::::: */

void	GPIO_SetPinAsInput(void){
1a000368:	b508      	push	{r3, lr}
      gpioConfig( GPIO0, GPIO_INPUT );
1a00036a:	2100      	movs	r1, #0
1a00036c:	2020      	movs	r0, #32
1a00036e:	f000 ff9f 	bl	1a0012b0 <gpioInit>
   }
1a000372:	bd08      	pop	{r3, pc}

1a000374 <GPIO_SetPinAsOutput>:
   
void	GPIO_SetPinAsOutput(void){
1a000374:	b508      	push	{r3, lr}
      gpioConfig( GPIO0, GPIO_OUTPUT );
1a000376:	2101      	movs	r1, #1
1a000378:	2020      	movs	r0, #32
1a00037a:	f000 ff99 	bl	1a0012b0 <gpioInit>
   }
1a00037e:	bd08      	pop	{r3, pc}

1a000380 <DS18B20_Init>:
   
/* :::::::::::::::::: Initialize ::::::::::::::::::: */
uint8_t DS18B20_Init(void)
{
1a000380:	b510      	push	{r4, lr}
	
	uint8_t pinState = 0;
	
	/* ~~~~~~~~~~ Change Pin Direction ~~~~~~~~~~ */
	GPIO_SetPinAsOutput();
1a000382:	f7ff fff7 	bl	1a000374 <GPIO_SetPinAsOutput>
	
	/* .................... */
	GPIO_ResetOutputPin(_DS18B20_GPIO, _DS18B20_PIN);
1a000386:	2100      	movs	r1, #0
1a000388:	2020      	movs	r0, #32
1a00038a:	f001 f867 	bl	1a00145c <gpioWrite>
	Delay_US(_DS18B20_480US_WAIT);
1a00038e:	f44f 70f0 	mov.w	r0, #480	; 0x1e0
1a000392:	2100      	movs	r1, #0
1a000394:	f001 f9a8 	bl	1a0016e8 <delayInaccurateUs>
	
	/* ~~~~~~~~~~ Change Pin Direction ~~~~~~~~~~ */
	GPIO_SetPinAsInput();
1a000398:	f7ff ffe6 	bl	1a000368 <GPIO_SetPinAsInput>
	
	Delay_US(_DS18B20_80US_WAIT);
1a00039c:	2050      	movs	r0, #80	; 0x50
1a00039e:	2100      	movs	r1, #0
1a0003a0:	f001 f9a2 	bl	1a0016e8 <delayInaccurateUs>
	
	if (GPIO_ReadInputPin(_DS18B20_GPIO, _DS18B20_PIN) == _GPIO_PIN_HIGH)
1a0003a4:	2020      	movs	r0, #32
1a0003a6:	f001 f88e 	bl	1a0014c6 <gpioRead>
1a0003aa:	2801      	cmp	r0, #1
1a0003ac:	d007      	beq.n	1a0003be <DS18B20_Init+0x3e>
	uint8_t pinState = 0;
1a0003ae:	2400      	movs	r4, #0
	{
		pinState = 1;
	}
	
	Delay_US(_DS18B20_400US_WAIT);
1a0003b0:	f44f 70c8 	mov.w	r0, #400	; 0x190
1a0003b4:	2100      	movs	r1, #0
1a0003b6:	f001 f997 	bl	1a0016e8 <delayInaccurateUs>
	
	/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
	return pinState;
	
}
1a0003ba:	4620      	mov	r0, r4
1a0003bc:	bd10      	pop	{r4, pc}
		pinState = 1;
1a0003be:	2401      	movs	r4, #1
1a0003c0:	e7f6      	b.n	1a0003b0 <DS18B20_Init+0x30>

1a0003c2 <DS18B20_ReadData>:
	
}

/* :::::::::::::: Rom Data Management :::::::::::::: */
uint8_t DS18B20_ReadData(void)
{
1a0003c2:	b538      	push	{r3, r4, r5, lr}
	uint8_t dsData   = 0;
	uint8_t pinCount = 0;
1a0003c4:	2400      	movs	r4, #0
	uint8_t dsData   = 0;
1a0003c6:	4625      	mov	r5, r4
	
	/* ~~~~~~~~~~ Change Pin Direction ~~~~~~~~~~ */
	//GPIO_SetPinAsInput();
	
	/* .................... */
	for (; pinCount < _DS18B20_BYTE_LENGTH; pinCount++)
1a0003c8:	e005      	b.n	1a0003d6 <DS18B20_ReadData+0x14>
		if (GPIO_ReadInputPin(_DS18B20_GPIO, _DS18B20_PIN) == _GPIO_PIN_HIGH)
		{
			dsData |= (1 << pinCount);
		}
		
		Delay_US(43U); //_DS18B20_60US_WAIT
1a0003ca:	202b      	movs	r0, #43	; 0x2b
1a0003cc:	2100      	movs	r1, #0
1a0003ce:	f001 f98b 	bl	1a0016e8 <delayInaccurateUs>
	for (; pinCount < _DS18B20_BYTE_LENGTH; pinCount++)
1a0003d2:	3401      	adds	r4, #1
1a0003d4:	b2e4      	uxtb	r4, r4
1a0003d6:	2c07      	cmp	r4, #7
1a0003d8:	d819      	bhi.n	1a00040e <DS18B20_ReadData+0x4c>
		GPIO_SetPinAsOutput();
1a0003da:	f7ff ffcb 	bl	1a000374 <GPIO_SetPinAsOutput>
		GPIO_ResetOutputPin(_DS18B20_GPIO, _DS18B20_PIN);
1a0003de:	2100      	movs	r1, #0
1a0003e0:	2020      	movs	r0, #32
1a0003e2:	f001 f83b 	bl	1a00145c <gpioWrite>
		Delay_US(_DS18B20_2US_WAIT);
1a0003e6:	2002      	movs	r0, #2
1a0003e8:	2100      	movs	r1, #0
1a0003ea:	f001 f97d 	bl	1a0016e8 <delayInaccurateUs>
		GPIO_SetPinAsInput();
1a0003ee:	f7ff ffbb 	bl	1a000368 <GPIO_SetPinAsInput>
		Delay_US(15U);		
1a0003f2:	200f      	movs	r0, #15
1a0003f4:	2100      	movs	r1, #0
1a0003f6:	f001 f977 	bl	1a0016e8 <delayInaccurateUs>
		if (GPIO_ReadInputPin(_DS18B20_GPIO, _DS18B20_PIN) == _GPIO_PIN_HIGH)
1a0003fa:	2020      	movs	r0, #32
1a0003fc:	f001 f863 	bl	1a0014c6 <gpioRead>
1a000400:	2801      	cmp	r0, #1
1a000402:	d1e2      	bne.n	1a0003ca <DS18B20_ReadData+0x8>
			dsData |= (1 << pinCount);
1a000404:	2301      	movs	r3, #1
1a000406:	40a3      	lsls	r3, r4
1a000408:	431d      	orrs	r5, r3
1a00040a:	b2ed      	uxtb	r5, r5
1a00040c:	e7dd      	b.n	1a0003ca <DS18B20_ReadData+0x8>
	}
	
	/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
	return dsData;
	
}
1a00040e:	4628      	mov	r0, r5
1a000410:	bd38      	pop	{r3, r4, r5, pc}

1a000412 <DS18B20_WriteData>:
void    DS18B20_WriteData(uint8_t Data)
{
1a000412:	b538      	push	{r3, r4, r5, lr}
1a000414:	4605      	mov	r5, r0
	
	uint8_t pinCount = 0;
	
	/* ~~~~~~~~~~ Change Pin Direction ~~~~~~~~~~ */
	GPIO_SetPinAsOutput();
1a000416:	f7ff ffad 	bl	1a000374 <GPIO_SetPinAsOutput>
	uint8_t pinCount = 0;
1a00041a:	2400      	movs	r4, #0
	
	/* .................... */
	for (; pinCount < _DS18B20_BYTE_LENGTH; pinCount++)
1a00041c:	e00d      	b.n	1a00043a <DS18B20_WriteData+0x28>
			Delay_US(_DS18B20_60US_WAIT);
		}
		else
		{
			/* ::::: Change Pin Direction ::::: */
			GPIO_SetPinAsOutput();
1a00041e:	f7ff ffa9 	bl	1a000374 <GPIO_SetPinAsOutput>
			/* .................... */
			GPIO_ResetOutputPin(_DS18B20_GPIO, _DS18B20_PIN);
1a000422:	2100      	movs	r1, #0
1a000424:	2020      	movs	r0, #32
1a000426:	f001 f819 	bl	1a00145c <gpioWrite>
			Delay_US(_DS18B20_60US_WAIT);
1a00042a:	203c      	movs	r0, #60	; 0x3c
1a00042c:	2100      	movs	r1, #0
1a00042e:	f001 f95b 	bl	1a0016e8 <delayInaccurateUs>
			/* ::::: Change Pin Direction ::::: */
			GPIO_SetPinAsInput();
1a000432:	f7ff ff99 	bl	1a000368 <GPIO_SetPinAsInput>
	for (; pinCount < _DS18B20_BYTE_LENGTH; pinCount++)
1a000436:	3401      	adds	r4, #1
1a000438:	b2e4      	uxtb	r4, r4
1a00043a:	2c07      	cmp	r4, #7
1a00043c:	d815      	bhi.n	1a00046a <DS18B20_WriteData+0x58>
		if ((Data & (1 << pinCount)) != 0)
1a00043e:	fa45 f304 	asr.w	r3, r5, r4
1a000442:	f013 0f01 	tst.w	r3, #1
1a000446:	d0ea      	beq.n	1a00041e <DS18B20_WriteData+0xc>
			GPIO_SetPinAsOutput();
1a000448:	f7ff ff94 	bl	1a000374 <GPIO_SetPinAsOutput>
			GPIO_ResetOutputPin(_DS18B20_GPIO, _DS18B20_PIN);
1a00044c:	2100      	movs	r1, #0
1a00044e:	2020      	movs	r0, #32
1a000450:	f001 f804 	bl	1a00145c <gpioWrite>
			Delay_US(_DS18B20_1US_WAIT);
1a000454:	2001      	movs	r0, #1
1a000456:	2100      	movs	r1, #0
1a000458:	f001 f946 	bl	1a0016e8 <delayInaccurateUs>
			GPIO_SetPinAsInput();
1a00045c:	f7ff ff84 	bl	1a000368 <GPIO_SetPinAsInput>
			Delay_US(_DS18B20_60US_WAIT);
1a000460:	203c      	movs	r0, #60	; 0x3c
1a000462:	2100      	movs	r1, #0
1a000464:	f001 f940 	bl	1a0016e8 <delayInaccurateUs>
1a000468:	e7e5      	b.n	1a000436 <DS18B20_WriteData+0x24>
		}
		
	}
	
}
1a00046a:	bd38      	pop	{r3, r4, r5, pc}

1a00046c <DS18B20_Start>:
{
1a00046c:	b510      	push	{r4, lr}
	cnStatus = DS18B20_Init();
1a00046e:	f7ff ff87 	bl	1a000380 <DS18B20_Init>
	DS18B20_WriteData(_DS18B20_CMD_SKIP_ROM);
1a000472:	20cc      	movs	r0, #204	; 0xcc
1a000474:	f7ff ffcd 	bl	1a000412 <DS18B20_WriteData>
	DS18B20_WriteData(_DS18B20_CMD_CONVERT_T);
1a000478:	2044      	movs	r0, #68	; 0x44
1a00047a:	f7ff ffca 	bl	1a000412 <DS18B20_WriteData>
	Delay_MS(_DS18B20_REINIT_DELAY);
1a00047e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
1a000482:	2100      	movs	r1, #0
1a000484:	f001 f95e 	bl	1a001744 <delay>
	cnStatus = DS18B20_Init();
1a000488:	f7ff ff7a 	bl	1a000380 <DS18B20_Init>
1a00048c:	4604      	mov	r4, r0
	DS18B20_WriteData(_DS18B20_CMD_SKIP_ROM);
1a00048e:	20cc      	movs	r0, #204	; 0xcc
1a000490:	f7ff ffbf 	bl	1a000412 <DS18B20_WriteData>
	DS18B20_WriteData(_DS18B20_CMD_READ_SCRATCHPAD);
1a000494:	20be      	movs	r0, #190	; 0xbe
1a000496:	f7ff ffbc 	bl	1a000412 <DS18B20_WriteData>
}
1a00049a:	4620      	mov	r0, r4
1a00049c:	bd10      	pop	{r4, pc}
1a00049e:	Address 0x1a00049e is out of bounds.


1a0004a0 <DS18B20_GetTemperature>:

/* :::::::::::::::: Get Temperature :::::::::::::::: */
float DS18B20_GetTemperature(void)
{
1a0004a0:	b510      	push	{r4, lr}
	uint8_t lByte = 0;
	uint8_t hByte = 0;
	float temp = 0;
	
	/* ~~~~~~~~~~ Start DS18 ~~~~~~~~~~ */
	DS18B20_Start();
1a0004a2:	f7ff ffe3 	bl	1a00046c <DS18B20_Start>
	
	/* ~~~~~~~~~~~ Read Dara ~~~~~~~~~~ */
	lByte = DS18B20_ReadData();
1a0004a6:	f7ff ff8c 	bl	1a0003c2 <DS18B20_ReadData>
1a0004aa:	4604      	mov	r4, r0
	hByte = DS18B20_ReadData();
1a0004ac:	f7ff ff89 	bl	1a0003c2 <DS18B20_ReadData>
	temp = (float)(((uint16_t)hByte << 8) | (uint16_t)lByte) / _DS18B20_T_DIVIDER;
1a0004b0:	ea44 2000 	orr.w	r0, r4, r0, lsl #8
1a0004b4:	ee07 0a90 	vmov	s15, r0
1a0004b8:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
	
	/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
	return temp;
	
}
1a0004bc:	eddf 7a02 	vldr	s15, [pc, #8]	; 1a0004c8 <DS18B20_GetTemperature+0x28>
1a0004c0:	ee20 0a27 	vmul.f32	s0, s0, s15
1a0004c4:	bd10      	pop	{r4, pc}
1a0004c6:	bf00      	nop
1a0004c8:	3d800000 	.word	0x3d800000

1a0004cc <initialise_monitor_handles>:
}
1a0004cc:	4770      	bx	lr
1a0004ce:	Address 0x1a0004ce is out of bounds.


1a0004d0 <Reset_Handler>:
void Reset_Handler(void) {
1a0004d0:	b510      	push	{r4, lr}
    __asm__ volatile("cpsid i");
1a0004d2:	b672      	cpsid	i
    *(RESET_CONTROL + 0) = 0x10DF1000;
1a0004d4:	4b19      	ldr	r3, [pc, #100]	; (1a00053c <Reset_Handler+0x6c>)
1a0004d6:	4a1a      	ldr	r2, [pc, #104]	; (1a000540 <Reset_Handler+0x70>)
1a0004d8:	601a      	str	r2, [r3, #0]
    *(RESET_CONTROL + 1) = 0x01DFF7FF;
1a0004da:	3304      	adds	r3, #4
1a0004dc:	4a19      	ldr	r2, [pc, #100]	; (1a000544 <Reset_Handler+0x74>)
1a0004de:	601a      	str	r2, [r3, #0]
    for (irqpendloop = 0; irqpendloop < 8; irqpendloop++) {
1a0004e0:	2300      	movs	r3, #0
1a0004e2:	e005      	b.n	1a0004f0 <Reset_Handler+0x20>
        *(NVIC_ICPR + irqpendloop) = 0xFFFFFFFF;
1a0004e4:	4a18      	ldr	r2, [pc, #96]	; (1a000548 <Reset_Handler+0x78>)
1a0004e6:	f04f 31ff 	mov.w	r1, #4294967295
1a0004ea:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
    for (irqpendloop = 0; irqpendloop < 8; irqpendloop++) {
1a0004ee:	3301      	adds	r3, #1
1a0004f0:	2b07      	cmp	r3, #7
1a0004f2:	d9f7      	bls.n	1a0004e4 <Reset_Handler+0x14>
    __asm__ volatile("cpsie i");
1a0004f4:	b662      	cpsie	i
    SectionTableAddr = &__data_section_table;
1a0004f6:	4b15      	ldr	r3, [pc, #84]	; (1a00054c <Reset_Handler+0x7c>)
    while (SectionTableAddr < &__data_section_table_end) {
1a0004f8:	e007      	b.n	1a00050a <Reset_Handler+0x3a>
        SectionLen = *SectionTableAddr++;
1a0004fa:	f103 040c 	add.w	r4, r3, #12
        data_init(LoadAddr, ExeAddr, SectionLen);
1a0004fe:	689a      	ldr	r2, [r3, #8]
1a000500:	6859      	ldr	r1, [r3, #4]
1a000502:	6818      	ldr	r0, [r3, #0]
1a000504:	f7ff fe41 	bl	1a00018a <data_init>
        SectionLen = *SectionTableAddr++;
1a000508:	4623      	mov	r3, r4
    while (SectionTableAddr < &__data_section_table_end) {
1a00050a:	4a11      	ldr	r2, [pc, #68]	; (1a000550 <Reset_Handler+0x80>)
1a00050c:	4293      	cmp	r3, r2
1a00050e:	d3f4      	bcc.n	1a0004fa <Reset_Handler+0x2a>
1a000510:	e006      	b.n	1a000520 <Reset_Handler+0x50>
        ExeAddr = *SectionTableAddr++;
1a000512:	461c      	mov	r4, r3
        bss_init(ExeAddr, SectionLen);
1a000514:	6859      	ldr	r1, [r3, #4]
1a000516:	f854 0b08 	ldr.w	r0, [r4], #8
1a00051a:	f7ff fe45 	bl	1a0001a8 <bss_init>
        SectionLen = *SectionTableAddr++;
1a00051e:	4623      	mov	r3, r4
    while (SectionTableAddr < &__bss_section_table_end) {
1a000520:	4a0c      	ldr	r2, [pc, #48]	; (1a000554 <Reset_Handler+0x84>)
1a000522:	4293      	cmp	r3, r2
1a000524:	d3f5      	bcc.n	1a000512 <Reset_Handler+0x42>
    SystemInit();
1a000526:	f000 fe7f 	bl	1a001228 <SystemInit>
    __libc_init_array();
1a00052a:	f002 f883 	bl	1a002634 <__libc_init_array>
    initialise_monitor_handles();
1a00052e:	f7ff ffcd 	bl	1a0004cc <initialise_monitor_handles>
    main();
1a000532:	f7ff fee5 	bl	1a000300 <main>
        __asm__ volatile("wfi");
1a000536:	bf30      	wfi
1a000538:	e7fd      	b.n	1a000536 <Reset_Handler+0x66>
1a00053a:	bf00      	nop
1a00053c:	40053100 	.word	0x40053100
1a000540:	10df1000 	.word	0x10df1000
1a000544:	01dff7ff 	.word	0x01dff7ff
1a000548:	e000e280 	.word	0xe000e280
1a00054c:	1a000114 	.word	0x1a000114
1a000550:	1a000150 	.word	0x1a000150
1a000554:	1a000178 	.word	0x1a000178

1a000558 <_fini>:
void _fini(void) {}
1a000558:	4770      	bx	lr

1a00055a <_init>:
void _init(void) {}
1a00055a:	4770      	bx	lr

1a00055c <_sbrk_r>:

USED void *_sbrk_r(struct _reent *r, ptrdiff_t incr) {
   extern int _pvHeapStart;
   static void *heap_end;
   void *prev_heap_end;
   if (heap_end == 0) {
1a00055c:	4b05      	ldr	r3, [pc, #20]	; (1a000574 <_sbrk_r+0x18>)
1a00055e:	681b      	ldr	r3, [r3, #0]
1a000560:	b123      	cbz	r3, 1a00056c <_sbrk_r+0x10>
       heap_end = &_pvHeapStart;
   }
   prev_heap_end = heap_end;
1a000562:	4b04      	ldr	r3, [pc, #16]	; (1a000574 <_sbrk_r+0x18>)
1a000564:	6818      	ldr	r0, [r3, #0]
   heap_end += incr;
1a000566:	4401      	add	r1, r0
1a000568:	6019      	str	r1, [r3, #0]
   return prev_heap_end;
}
1a00056a:	4770      	bx	lr
       heap_end = &_pvHeapStart;
1a00056c:	4b01      	ldr	r3, [pc, #4]	; (1a000574 <_sbrk_r+0x18>)
1a00056e:	4a02      	ldr	r2, [pc, #8]	; (1a000578 <_sbrk_r+0x1c>)
1a000570:	601a      	str	r2, [r3, #0]
1a000572:	e7f6      	b.n	1a000562 <_sbrk_r+0x6>
1a000574:	100009f8 	.word	0x100009f8
1a000578:	10000a78 	.word	0x10000a78

1a00057c <Board_SetupMuxing>:
 * @return	Nothing
 */
STATIC INLINE void Chip_SCU_SetPinMuxing(const PINMUX_GRP_T *pinArray, uint32_t arrayLength)
{
	uint32_t ix;
	for (ix = 0; ix < arrayLength; ix++ ) {
1a00057c:	2300      	movs	r3, #0
1a00057e:	2b1c      	cmp	r3, #28
1a000580:	d812      	bhi.n	1a0005a8 <Board_SetupMuxing+0x2c>
    #endif
};


void Board_SetupMuxing(void)
{
1a000582:	b410      	push	{r4}
		Chip_SCU_PinMuxSet(pinArray[ix].pingrp, pinArray[ix].pinnum, pinArray[ix].modefunc);
1a000584:	4a09      	ldr	r2, [pc, #36]	; (1a0005ac <Board_SetupMuxing+0x30>)
1a000586:	eb02 0183 	add.w	r1, r2, r3, lsl #2
1a00058a:	f812 4023 	ldrb.w	r4, [r2, r3, lsl #2]
1a00058e:	784a      	ldrb	r2, [r1, #1]
1a000590:	8848      	ldrh	r0, [r1, #2]
	LPC_SCU->SFSP[port][pin] = modefunc;
1a000592:	eb02 1244 	add.w	r2, r2, r4, lsl #5
1a000596:	4906      	ldr	r1, [pc, #24]	; (1a0005b0 <Board_SetupMuxing+0x34>)
1a000598:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
	for (ix = 0; ix < arrayLength; ix++ ) {
1a00059c:	3301      	adds	r3, #1
1a00059e:	2b1c      	cmp	r3, #28
1a0005a0:	d9f0      	bls.n	1a000584 <Board_SetupMuxing+0x8>
    Chip_SCU_SetPinMuxing(pinmuxing, sizeof(pinmuxing) / sizeof(PINMUX_GRP_T));
}
1a0005a2:	f85d 4b04 	ldr.w	r4, [sp], #4
1a0005a6:	4770      	bx	lr
1a0005a8:	4770      	bx	lr
1a0005aa:	bf00      	nop
1a0005ac:	1a006664 	.word	0x1a006664
1a0005b0:	40086000 	.word	0x40086000

1a0005b4 <Board_SetupClocking>:


void Board_SetupClocking(void)
{
1a0005b4:	b510      	push	{r4, lr}
 */
STATIC INLINE void Chip_CREG_SetFlashAcceleration(uint32_t Hz)
{
	uint32_t FAValue = Hz / 21510000;

	LPC_CREG->FLASHCFGA = (LPC_CREG->FLASHCFGA & (~(0xF << 12))) | (FAValue << 12);
1a0005b6:	4a17      	ldr	r2, [pc, #92]	; (1a000614 <Board_SetupClocking+0x60>)
1a0005b8:	f8d2 3120 	ldr.w	r3, [r2, #288]	; 0x120
1a0005bc:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
1a0005c0:	f443 4310 	orr.w	r3, r3, #36864	; 0x9000
1a0005c4:	f8c2 3120 	str.w	r3, [r2, #288]	; 0x120
	LPC_CREG->FLASHCFGB = (LPC_CREG->FLASHCFGB & (~(0xF << 12))) | (FAValue << 12);
1a0005c8:	f8d2 3124 	ldr.w	r3, [r2, #292]	; 0x124
1a0005cc:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
1a0005d0:	f443 4310 	orr.w	r3, r3, #36864	; 0x9000
1a0005d4:	f8c2 3124 	str.w	r3, [r2, #292]	; 0x124
    Chip_CREG_SetFlashAcceleration(MAX_CLOCK_FREQ);
    Chip_SetupCoreClock(CLKIN_CRYSTAL, MAX_CLOCK_FREQ, true);
1a0005d8:	2201      	movs	r2, #1
1a0005da:	490f      	ldr	r1, [pc, #60]	; (1a000618 <Board_SetupClocking+0x64>)
1a0005dc:	2006      	movs	r0, #6
1a0005de:	f000 f9f9 	bl	1a0009d4 <Chip_SetupCoreClock>

    /* Setup system base clocks and initial states. This won't enable and
       disable individual clocks, but sets up the base clock sources for
       each individual peripheral clock. */
    for (uint32_t i = 0; i < (sizeof(InitClkStates) / sizeof(InitClkStates[0])); ++i)
1a0005e2:	2400      	movs	r4, #0
1a0005e4:	b14c      	cbz	r4, 1a0005fa <Board_SetupClocking+0x46>
        Chip_Clock_SetBaseClock (c->clk, c->clkin, c->autoblock_enab,
                                c->powerdn);
    }

    /* Reset and enable 32Khz oscillator */
    LPC_CREG->CREG0 &= ~((1 << 3) | (1 << 2));
1a0005e6:	4b0b      	ldr	r3, [pc, #44]	; (1a000614 <Board_SetupClocking+0x60>)
1a0005e8:	685a      	ldr	r2, [r3, #4]
1a0005ea:	f022 020c 	bic.w	r2, r2, #12
1a0005ee:	605a      	str	r2, [r3, #4]
    LPC_CREG->CREG0 |= (1 << 1) | (1 << 0);
1a0005f0:	685a      	ldr	r2, [r3, #4]
1a0005f2:	f042 0203 	orr.w	r2, r2, #3
1a0005f6:	605a      	str	r2, [r3, #4]
}
1a0005f8:	bd10      	pop	{r4, pc}
        Chip_Clock_SetBaseClock (c->clk, c->clkin, c->autoblock_enab,
1a0005fa:	4808      	ldr	r0, [pc, #32]	; (1a00061c <Board_SetupClocking+0x68>)
1a0005fc:	eb00 0184 	add.w	r1, r0, r4, lsl #2
1a000600:	2301      	movs	r3, #1
1a000602:	788a      	ldrb	r2, [r1, #2]
1a000604:	7849      	ldrb	r1, [r1, #1]
1a000606:	f810 0024 	ldrb.w	r0, [r0, r4, lsl #2]
1a00060a:	f000 fcbb 	bl	1a000f84 <Chip_Clock_SetBaseClock>
    for (uint32_t i = 0; i < (sizeof(InitClkStates) / sizeof(InitClkStates[0])); ++i)
1a00060e:	3401      	adds	r4, #1
1a000610:	e7e8      	b.n	1a0005e4 <Board_SetupClocking+0x30>
1a000612:	bf00      	nop
1a000614:	40043000 	.word	0x40043000
1a000618:	0c28cb00 	.word	0x0c28cb00
1a00061c:	1a006660 	.word	0x1a006660

1a000620 <Board_SystemInit>:


/* Set up and initialize hardware prior to call to main */
void Board_SystemInit(void)
{
1a000620:	b508      	push	{r3, lr}
    /* Setup system clocking and memory. This is done early to allow the
       application and tools to clear memory and use scatter loading to
       external memory. */
    Board_SetupMuxing();
1a000622:	f7ff ffab 	bl	1a00057c <Board_SetupMuxing>
    Board_SetupClocking();
1a000626:	f7ff ffc5 	bl	1a0005b4 <Board_SetupClocking>
}
1a00062a:	bd08      	pop	{r3, pc}

1a00062c <Board_LED_Init>:
#define GPIO_PORTS_SIZE     (sizeof(GpioPorts) / sizeof(struct gpio_t))


static void Board_LED_Init()
{
   for (uint32_t i = 0; i < GPIO_LEDS_SIZE; ++i) {
1a00062c:	2200      	movs	r2, #0
1a00062e:	2a05      	cmp	r2, #5
1a000630:	d819      	bhi.n	1a000666 <Board_LED_Init+0x3a>
{
1a000632:	b470      	push	{r4, r5, r6}
      const struct gpio_t *io = &GpioLeds[i];
      Chip_GPIO_SetPinDIROutput(LPC_GPIO_PORT, io->port, io->pin);
1a000634:	490c      	ldr	r1, [pc, #48]	; (1a000668 <Board_LED_Init+0x3c>)
1a000636:	f811 5012 	ldrb.w	r5, [r1, r2, lsl #1]
1a00063a:	eb01 0142 	add.w	r1, r1, r2, lsl #1
1a00063e:	784c      	ldrb	r4, [r1, #1]
 * @param	pin		: GPIO pin to set direction on as output
 * @return	Nothing
 */
STATIC INLINE void Chip_GPIO_SetPinDIROutput(LPC_GPIO_T *pGPIO, uint8_t port, uint8_t pin)
{
	pGPIO->DIR[port] |= 1UL << pin;
1a000640:	4b0a      	ldr	r3, [pc, #40]	; (1a00066c <Board_LED_Init+0x40>)
1a000642:	f505 6600 	add.w	r6, r5, #2048	; 0x800
1a000646:	f853 1026 	ldr.w	r1, [r3, r6, lsl #2]
1a00064a:	2001      	movs	r0, #1
1a00064c:	40a0      	lsls	r0, r4
1a00064e:	4301      	orrs	r1, r0
1a000650:	f843 1026 	str.w	r1, [r3, r6, lsl #2]
	pGPIO->B[port][pin] = setting;
1a000654:	eb03 1345 	add.w	r3, r3, r5, lsl #5
1a000658:	2100      	movs	r1, #0
1a00065a:	5519      	strb	r1, [r3, r4]
   for (uint32_t i = 0; i < GPIO_LEDS_SIZE; ++i) {
1a00065c:	3201      	adds	r2, #1
1a00065e:	2a05      	cmp	r2, #5
1a000660:	d9e8      	bls.n	1a000634 <Board_LED_Init+0x8>
      Chip_GPIO_SetPinState(LPC_GPIO_PORT, io->port, io->pin, false);
   }
}
1a000662:	bc70      	pop	{r4, r5, r6}
1a000664:	4770      	bx	lr
1a000666:	4770      	bx	lr
1a000668:	1a0066e4 	.word	0x1a0066e4
1a00066c:	400f4000 	.word	0x400f4000

1a000670 <Board_TEC_Init>:


static void Board_TEC_Init()
{
   for (uint32_t i = 0; i < GPIO_BUTTONS_SIZE; ++i) {
1a000670:	2300      	movs	r3, #0
1a000672:	2b03      	cmp	r3, #3
1a000674:	d816      	bhi.n	1a0006a4 <Board_TEC_Init+0x34>
{
1a000676:	b430      	push	{r4, r5}
      const struct gpio_t *io = &GpioButtons[i];
      Chip_GPIO_SetPinDIRInput(LPC_GPIO_PORT, io->port, io->pin);
1a000678:	490b      	ldr	r1, [pc, #44]	; (1a0006a8 <Board_TEC_Init+0x38>)
1a00067a:	f811 2013 	ldrb.w	r2, [r1, r3, lsl #1]
1a00067e:	eb01 0143 	add.w	r1, r1, r3, lsl #1
1a000682:	784d      	ldrb	r5, [r1, #1]
 * @param	pin		: GPIO pin to set direction on as input
 * @return	Nothing
 */
STATIC INLINE void Chip_GPIO_SetPinDIRInput(LPC_GPIO_T *pGPIO, uint8_t port, uint8_t pin)
{
	pGPIO->DIR[port] &= ~(1UL << pin);
1a000684:	4c09      	ldr	r4, [pc, #36]	; (1a0006ac <Board_TEC_Init+0x3c>)
1a000686:	f502 6200 	add.w	r2, r2, #2048	; 0x800
1a00068a:	f854 1022 	ldr.w	r1, [r4, r2, lsl #2]
1a00068e:	2001      	movs	r0, #1
1a000690:	40a8      	lsls	r0, r5
1a000692:	ea21 0100 	bic.w	r1, r1, r0
1a000696:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
   for (uint32_t i = 0; i < GPIO_BUTTONS_SIZE; ++i) {
1a00069a:	3301      	adds	r3, #1
1a00069c:	2b03      	cmp	r3, #3
1a00069e:	d9eb      	bls.n	1a000678 <Board_TEC_Init+0x8>
   }
}
1a0006a0:	bc30      	pop	{r4, r5}
1a0006a2:	4770      	bx	lr
1a0006a4:	4770      	bx	lr
1a0006a6:	bf00      	nop
1a0006a8:	1a0066dc 	.word	0x1a0066dc
1a0006ac:	400f4000 	.word	0x400f4000

1a0006b0 <Board_GPIO_Init>:


static void Board_GPIO_Init()
{
   for (uint32_t i = 0; i < GPIO_PORTS_SIZE; ++i) {
1a0006b0:	2300      	movs	r3, #0
1a0006b2:	2b08      	cmp	r3, #8
1a0006b4:	d816      	bhi.n	1a0006e4 <Board_GPIO_Init+0x34>
{
1a0006b6:	b430      	push	{r4, r5}
      const struct gpio_t *io = &GpioPorts[i];
      Chip_GPIO_SetPinDIRInput(LPC_GPIO_PORT, io->port, io->pin);
1a0006b8:	490b      	ldr	r1, [pc, #44]	; (1a0006e8 <Board_GPIO_Init+0x38>)
1a0006ba:	f811 2013 	ldrb.w	r2, [r1, r3, lsl #1]
1a0006be:	eb01 0143 	add.w	r1, r1, r3, lsl #1
1a0006c2:	784d      	ldrb	r5, [r1, #1]
1a0006c4:	4c09      	ldr	r4, [pc, #36]	; (1a0006ec <Board_GPIO_Init+0x3c>)
1a0006c6:	f502 6200 	add.w	r2, r2, #2048	; 0x800
1a0006ca:	f854 1022 	ldr.w	r1, [r4, r2, lsl #2]
1a0006ce:	2001      	movs	r0, #1
1a0006d0:	40a8      	lsls	r0, r5
1a0006d2:	ea21 0100 	bic.w	r1, r1, r0
1a0006d6:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
   for (uint32_t i = 0; i < GPIO_PORTS_SIZE; ++i) {
1a0006da:	3301      	adds	r3, #1
1a0006dc:	2b08      	cmp	r3, #8
1a0006de:	d9eb      	bls.n	1a0006b8 <Board_GPIO_Init+0x8>
   }
}
1a0006e0:	bc30      	pop	{r4, r5}
1a0006e2:	4770      	bx	lr
1a0006e4:	4770      	bx	lr
1a0006e6:	bf00      	nop
1a0006e8:	1a0066f0 	.word	0x1a0066f0
1a0006ec:	400f4000 	.word	0x400f4000

1a0006f0 <Board_ADC_Init>:
   Chip_SSP_Enable(LPC_SSP1);
}


static void Board_ADC_Init()
{
1a0006f0:	b510      	push	{r4, lr}
1a0006f2:	b082      	sub	sp, #8
   ADC_CLOCK_SETUP_T cs;

   Chip_ADC_Init(LPC_ADC0, &cs);
1a0006f4:	4c08      	ldr	r4, [pc, #32]	; (1a000718 <Board_ADC_Init+0x28>)
1a0006f6:	4669      	mov	r1, sp
1a0006f8:	4620      	mov	r0, r4
1a0006fa:	f000 f92b 	bl	1a000954 <Chip_ADC_Init>
   Chip_ADC_SetSampleRate(LPC_ADC0, &cs, BOARD_ADC_SAMPLE_RATE);
1a0006fe:	4a07      	ldr	r2, [pc, #28]	; (1a00071c <Board_ADC_Init+0x2c>)
1a000700:	4669      	mov	r1, sp
1a000702:	4620      	mov	r0, r4
1a000704:	f000 f946 	bl	1a000994 <Chip_ADC_SetSampleRate>
   Chip_ADC_SetResolution(LPC_ADC0, &cs, BOARD_ADC_RESOLUTION);
1a000708:	2200      	movs	r2, #0
1a00070a:	4669      	mov	r1, sp
1a00070c:	4620      	mov	r0, r4
1a00070e:	f000 f95a 	bl	1a0009c6 <Chip_ADC_SetResolution>
}
1a000712:	b002      	add	sp, #8
1a000714:	bd10      	pop	{r4, pc}
1a000716:	bf00      	nop
1a000718:	400e3000 	.word	0x400e3000
1a00071c:	00061a80 	.word	0x00061a80

1a000720 <Board_SPI_Init>:
{
1a000720:	b510      	push	{r4, lr}
   Chip_SSP_Init(LPC_SSP1);
1a000722:	4c0b      	ldr	r4, [pc, #44]	; (1a000750 <Board_SPI_Init+0x30>)
1a000724:	4620      	mov	r0, r4
1a000726:	f000 f895 	bl	1a000854 <Chip_SSP_Init>
 *						- SSP_MODE_SLAVE
 * @return	 Nothing
 */
STATIC INLINE void Chip_SSP_Set_Mode(LPC_SSP_T *pSSP, uint32_t mode)
{
	pSSP->CR1 = (pSSP->CR1 & ~(1 << 2)) | mode;
1a00072a:	6863      	ldr	r3, [r4, #4]
1a00072c:	f023 0304 	bic.w	r3, r3, #4
1a000730:	6063      	str	r3, [r4, #4]
	pSSP->CR0 = (pSSP->CR0 & ~0xFF) | bits | frameFormat | clockMode;
1a000732:	6823      	ldr	r3, [r4, #0]
1a000734:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
1a000738:	f043 0307 	orr.w	r3, r3, #7
1a00073c:	6023      	str	r3, [r4, #0]
   Chip_SSP_SetBitRate(LPC_SSP1, BOARD_SPI_SPEED);
1a00073e:	4905      	ldr	r1, [pc, #20]	; (1a000754 <Board_SPI_Init+0x34>)
1a000740:	4620      	mov	r0, r4
1a000742:	f000 f868 	bl	1a000816 <Chip_SSP_SetBitRate>
	pSSP->CR1 |= SSP_CR1_SSP_EN;
1a000746:	6863      	ldr	r3, [r4, #4]
1a000748:	f043 0302 	orr.w	r3, r3, #2
1a00074c:	6063      	str	r3, [r4, #4]
}
1a00074e:	bd10      	pop	{r4, pc}
1a000750:	400c5000 	.word	0x400c5000
1a000754:	000186a0 	.word	0x000186a0

1a000758 <Board_I2C_Init>:
{
1a000758:	b508      	push	{r3, lr}
   Chip_I2C_Init(I2C0);
1a00075a:	2000      	movs	r0, #0
1a00075c:	f000 f8a6 	bl	1a0008ac <Chip_I2C_Init>
	LPC_SCU->SFSI2C0 = I2C0Mode;
1a000760:	4b04      	ldr	r3, [pc, #16]	; (1a000774 <Board_I2C_Init+0x1c>)
1a000762:	f640 0208 	movw	r2, #2056	; 0x808
1a000766:	f8c3 2c84 	str.w	r2, [r3, #3204]	; 0xc84
   Chip_I2C_SetClockRate(I2C0, BOARD_I2C_SPEED);
1a00076a:	4903      	ldr	r1, [pc, #12]	; (1a000778 <Board_I2C_Init+0x20>)
1a00076c:	2000      	movs	r0, #0
1a00076e:	f000 f8af 	bl	1a0008d0 <Chip_I2C_SetClockRate>
}
1a000772:	bd08      	pop	{r3, pc}
1a000774:	40086000 	.word	0x40086000
1a000778:	000f4240 	.word	0x000f4240

1a00077c <Board_Debug_Init>:


void Board_Debug_Init(void)
{
1a00077c:	b510      	push	{r4, lr}
   Chip_UART_Init(DEBUG_UART);
1a00077e:	4c07      	ldr	r4, [pc, #28]	; (1a00079c <Board_Debug_Init+0x20>)
1a000780:	4620      	mov	r0, r4
1a000782:	f000 fcb9 	bl	1a0010f8 <Chip_UART_Init>
   Chip_UART_SetBaudFDR(DEBUG_UART, DEBUG_UART_BAUD_RATE);
1a000786:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
1a00078a:	4620      	mov	r0, r4
1a00078c:	f000 fcde 	bl	1a00114c <Chip_UART_SetBaudFDR>
 *			stop bit, and even (enabled) parity would be
 *			(UART_LCR_WLEN8 | UART_LCR_SBS_1BIT | UART_LCR_PARITY_EN | UART_LCR_PARITY_EVEN)
 */
STATIC INLINE void Chip_UART_ConfigData(LPC_USART_T *pUART, uint32_t config)
{
	pUART->LCR = config;
1a000790:	2303      	movs	r3, #3
1a000792:	60e3      	str	r3, [r4, #12]
    pUART->TER2 = UART_TER2_TXEN;
1a000794:	2301      	movs	r3, #1
1a000796:	65e3      	str	r3, [r4, #92]	; 0x5c
   Chip_UART_ConfigData(DEBUG_UART, DEBUG_UART_CONFIG);
   Chip_UART_TXEnable(DEBUG_UART);
}
1a000798:	bd10      	pop	{r4, pc}
1a00079a:	bf00      	nop
1a00079c:	400c1000 	.word	0x400c1000

1a0007a0 <Board_Init>:
   Board_LED_Set(LEDNumber, !Board_LED_Test(LEDNumber));
}


void Board_Init(void)
{
1a0007a0:	b508      	push	{r3, lr}
   DEBUGINIT();
1a0007a2:	f7ff ffeb 	bl	1a00077c <Board_Debug_Init>
   Chip_GPIO_Init (LPC_GPIO_PORT);
1a0007a6:	4809      	ldr	r0, [pc, #36]	; (1a0007cc <Board_Init+0x2c>)
1a0007a8:	f000 f8ae 	bl	1a000908 <Chip_GPIO_Init>

   Board_GPIO_Init();
1a0007ac:	f7ff ff80 	bl	1a0006b0 <Board_GPIO_Init>
   Board_ADC_Init();
1a0007b0:	f7ff ff9e 	bl	1a0006f0 <Board_ADC_Init>
   Board_SPI_Init();
1a0007b4:	f7ff ffb4 	bl	1a000720 <Board_SPI_Init>
   Board_I2C_Init();
1a0007b8:	f7ff ffce 	bl	1a000758 <Board_I2C_Init>

   Board_LED_Init();
1a0007bc:	f7ff ff36 	bl	1a00062c <Board_LED_Init>
   Board_TEC_Init();
1a0007c0:	f7ff ff56 	bl	1a000670 <Board_TEC_Init>
#ifdef USE_RMII
   Chip_ENET_RMIIEnable(LPC_ETHERNET);
#endif

   // Read clock settings and update SystemCoreClock variable
   SystemCoreClockUpdate(); // @Eric
1a0007c4:	f000 f9b2 	bl	1a000b2c <SystemCoreClockUpdate>
}
1a0007c8:	bd08      	pop	{r3, pc}
1a0007ca:	bf00      	nop
1a0007cc:	400f4000 	.word	0x400f4000

1a0007d0 <__stdio_init>:
{
   return Board_UARTGetChar();;
}

void __stdio_init()
{
1a0007d0:	b508      	push	{r3, lr}
   Board_Debug_Init();
1a0007d2:	f7ff ffd3 	bl	1a00077c <Board_Debug_Init>
1a0007d6:	bd08      	pop	{r3, pc}

1a0007d8 <Chip_SSP_GetClockIndex>:
/* Returns clock index for the register interface */
STATIC CHIP_CCU_CLK_T Chip_SSP_GetClockIndex(LPC_SSP_T *pSSP)
{
	CHIP_CCU_CLK_T clkSSP;

	if (pSSP == LPC_SSP1) {
1a0007d8:	4b03      	ldr	r3, [pc, #12]	; (1a0007e8 <Chip_SSP_GetClockIndex+0x10>)
1a0007da:	4298      	cmp	r0, r3
1a0007dc:	d001      	beq.n	1a0007e2 <Chip_SSP_GetClockIndex+0xa>
		clkSSP = CLK_MX_SSP1;
	}
	else {
		clkSSP = CLK_MX_SSP0;
1a0007de:	2083      	movs	r0, #131	; 0x83
	}

	return clkSSP;
}
1a0007e0:	4770      	bx	lr
		clkSSP = CLK_MX_SSP1;
1a0007e2:	20a5      	movs	r0, #165	; 0xa5
1a0007e4:	4770      	bx	lr
1a0007e6:	bf00      	nop
1a0007e8:	400c5000 	.word	0x400c5000

1a0007ec <Chip_SSP_GetPeriphClockIndex>:
/* Returns clock index for the peripheral block */
STATIC CHIP_CCU_CLK_T Chip_SSP_GetPeriphClockIndex(LPC_SSP_T *pSSP)
{
	CHIP_CCU_CLK_T clkSSP;

	if (pSSP == LPC_SSP1) {
1a0007ec:	4b04      	ldr	r3, [pc, #16]	; (1a000800 <Chip_SSP_GetPeriphClockIndex+0x14>)
1a0007ee:	4298      	cmp	r0, r3
1a0007f0:	d002      	beq.n	1a0007f8 <Chip_SSP_GetPeriphClockIndex+0xc>
		clkSSP = CLK_APB2_SSP1;
	}
	else {
		clkSSP = CLK_APB0_SSP0;
1a0007f2:	f240 2002 	movw	r0, #514	; 0x202
	}

	return clkSSP;
}
1a0007f6:	4770      	bx	lr
		clkSSP = CLK_APB2_SSP1;
1a0007f8:	f44f 70f1 	mov.w	r0, #482	; 0x1e2
1a0007fc:	4770      	bx	lr
1a0007fe:	bf00      	nop
1a000800:	400c5000 	.word	0x400c5000

1a000804 <Chip_SSP_SetClockRate>:

/*Set up output clocks per bit for SSP bus*/
void Chip_SSP_SetClockRate(LPC_SSP_T *pSSP, uint32_t clk_rate, uint32_t prescale)
{
	uint32_t temp;
	temp = pSSP->CR0 & (~(SSP_CR0_SCR(0xFF)));
1a000804:	6803      	ldr	r3, [r0, #0]
1a000806:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
	pSSP->CR0 = temp | (SSP_CR0_SCR(clk_rate));
1a00080a:	0209      	lsls	r1, r1, #8
1a00080c:	b289      	uxth	r1, r1
1a00080e:	4319      	orrs	r1, r3
1a000810:	6001      	str	r1, [r0, #0]
	pSSP->CPSR = prescale;
1a000812:	6102      	str	r2, [r0, #16]
}
1a000814:	4770      	bx	lr

1a000816 <Chip_SSP_SetBitRate>:
	}
}

/* Set the clock frequency for SSP interface */
void Chip_SSP_SetBitRate(LPC_SSP_T *pSSP, uint32_t bitRate)
{
1a000816:	b570      	push	{r4, r5, r6, lr}
1a000818:	4606      	mov	r6, r0
1a00081a:	460d      	mov	r5, r1
	uint32_t ssp_clk, cr0_div, cmp_clk, prescale;

	ssp_clk = Chip_Clock_GetRate(Chip_SSP_GetPeriphClockIndex(pSSP));
1a00081c:	f7ff ffe6 	bl	1a0007ec <Chip_SSP_GetPeriphClockIndex>
1a000820:	f000 fc2e 	bl	1a001080 <Chip_Clock_GetRate>

	cr0_div = 0;
	cmp_clk = 0xFFFFFFFF;
	prescale = 2;
1a000824:	2202      	movs	r2, #2
	cmp_clk = 0xFFFFFFFF;
1a000826:	f04f 33ff 	mov.w	r3, #4294967295
	cr0_div = 0;
1a00082a:	2100      	movs	r1, #0

	while (cmp_clk > bitRate) {
1a00082c:	e000      	b.n	1a000830 <Chip_SSP_SetBitRate+0x1a>
		cmp_clk = ssp_clk / ((cr0_div + 1) * prescale);
		if (cmp_clk > bitRate) {
			cr0_div++;
1a00082e:	4621      	mov	r1, r4
	while (cmp_clk > bitRate) {
1a000830:	42ab      	cmp	r3, r5
1a000832:	d90b      	bls.n	1a00084c <Chip_SSP_SetBitRate+0x36>
		cmp_clk = ssp_clk / ((cr0_div + 1) * prescale);
1a000834:	1c4c      	adds	r4, r1, #1
1a000836:	fb02 f304 	mul.w	r3, r2, r4
1a00083a:	fbb0 f3f3 	udiv	r3, r0, r3
		if (cmp_clk > bitRate) {
1a00083e:	429d      	cmp	r5, r3
1a000840:	d2f6      	bcs.n	1a000830 <Chip_SSP_SetBitRate+0x1a>
			if (cr0_div > 0xFF) {
1a000842:	2cff      	cmp	r4, #255	; 0xff
1a000844:	d9f3      	bls.n	1a00082e <Chip_SSP_SetBitRate+0x18>
				cr0_div = 0;
				prescale += 2;
1a000846:	3202      	adds	r2, #2
				cr0_div = 0;
1a000848:	2100      	movs	r1, #0
1a00084a:	e7f1      	b.n	1a000830 <Chip_SSP_SetBitRate+0x1a>
			}
		}
	}

	Chip_SSP_SetClockRate(pSSP, cr0_div, prescale);
1a00084c:	4630      	mov	r0, r6
1a00084e:	f7ff ffd9 	bl	1a000804 <Chip_SSP_SetClockRate>
}
1a000852:	bd70      	pop	{r4, r5, r6, pc}

1a000854 <Chip_SSP_Init>:

/* Initialize the SSP */
void Chip_SSP_Init(LPC_SSP_T *pSSP)
{
1a000854:	b510      	push	{r4, lr}
1a000856:	4604      	mov	r4, r0
	Chip_Clock_Enable(Chip_SSP_GetClockIndex(pSSP));
1a000858:	f7ff ffbe 	bl	1a0007d8 <Chip_SSP_GetClockIndex>
1a00085c:	f000 fbf6 	bl	1a00104c <Chip_Clock_Enable>
	Chip_Clock_Enable(Chip_SSP_GetPeriphClockIndex(pSSP));
1a000860:	4620      	mov	r0, r4
1a000862:	f7ff ffc3 	bl	1a0007ec <Chip_SSP_GetPeriphClockIndex>
1a000866:	f000 fbf1 	bl	1a00104c <Chip_Clock_Enable>
	pSSP->CR1 = (pSSP->CR1 & ~(1 << 2)) | mode;
1a00086a:	6863      	ldr	r3, [r4, #4]
1a00086c:	f023 0304 	bic.w	r3, r3, #4
1a000870:	6063      	str	r3, [r4, #4]
	pSSP->CR0 = (pSSP->CR0 & ~0xFF) | bits | frameFormat | clockMode;
1a000872:	6823      	ldr	r3, [r4, #0]
1a000874:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
1a000878:	f043 0307 	orr.w	r3, r3, #7
1a00087c:	6023      	str	r3, [r4, #0]

	Chip_SSP_Set_Mode(pSSP, SSP_MODE_MASTER);
	Chip_SSP_SetFormat(pSSP, SSP_BITS_8, SSP_FRAMEFORMAT_SPI, SSP_CLOCK_CPHA0_CPOL0);
	Chip_SSP_SetBitRate(pSSP, 100000);
1a00087e:	4902      	ldr	r1, [pc, #8]	; (1a000888 <Chip_SSP_Init+0x34>)
1a000880:	4620      	mov	r0, r4
1a000882:	f7ff ffc8 	bl	1a000816 <Chip_SSP_SetBitRate>
}
1a000886:	bd10      	pop	{r4, pc}
1a000888:	000186a0 	.word	0x000186a0

1a00088c <Chip_I2C_EventHandler>:
{
	struct i2c_interface *iic = &i2c[id];
	volatile I2C_STATUS_T *stat;

	/* Only WAIT event needs to be handled */
	if (event != I2C_EVENT_WAIT) {
1a00088c:	2901      	cmp	r1, #1
1a00088e:	d109      	bne.n	1a0008a4 <Chip_I2C_EventHandler+0x18>
		return;
	}

	stat = &iic->mXfer->status;
1a000890:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
1a000894:	0082      	lsls	r2, r0, #2
1a000896:	4b04      	ldr	r3, [pc, #16]	; (1a0008a8 <Chip_I2C_EventHandler+0x1c>)
1a000898:	4413      	add	r3, r2
1a00089a:	691a      	ldr	r2, [r3, #16]
	/* Wait for the status to change */
	while (*stat == I2C_STATUS_BUSY) {}
1a00089c:	7d13      	ldrb	r3, [r2, #20]
1a00089e:	b2db      	uxtb	r3, r3
1a0008a0:	2b04      	cmp	r3, #4
1a0008a2:	d0fb      	beq.n	1a00089c <Chip_I2C_EventHandler+0x10>
}
1a0008a4:	4770      	bx	lr
1a0008a6:	bf00      	nop
1a0008a8:	10000000 	.word	0x10000000

1a0008ac <Chip_I2C_Init>:
	}
}

/* Initializes the LPC_I2C peripheral with specified parameter */
void Chip_I2C_Init(I2C_ID_T id)
{
1a0008ac:	b570      	push	{r4, r5, r6, lr}
1a0008ae:	4605      	mov	r5, r0
	Chip_Clock_Enable(i2c[id].clk);
1a0008b0:	4e06      	ldr	r6, [pc, #24]	; (1a0008cc <Chip_I2C_Init+0x20>)
1a0008b2:	00c4      	lsls	r4, r0, #3
1a0008b4:	1a22      	subs	r2, r4, r0
1a0008b6:	0093      	lsls	r3, r2, #2
1a0008b8:	4433      	add	r3, r6
1a0008ba:	8898      	ldrh	r0, [r3, #4]
1a0008bc:	f000 fbc6 	bl	1a00104c <Chip_Clock_Enable>
	enableClk(id);

	/* Set I2C operation to default */
	LPC_I2Cx(id)->CONCLR = (I2C_CON_AA | I2C_CON_SI | I2C_CON_STA | I2C_CON_I2EN);
1a0008c0:	1b64      	subs	r4, r4, r5
1a0008c2:	00a3      	lsls	r3, r4, #2
1a0008c4:	58f3      	ldr	r3, [r6, r3]
1a0008c6:	226c      	movs	r2, #108	; 0x6c
1a0008c8:	619a      	str	r2, [r3, #24]
}
1a0008ca:	bd70      	pop	{r4, r5, r6, pc}
1a0008cc:	10000000 	.word	0x10000000

1a0008d0 <Chip_I2C_SetClockRate>:
	disableClk(id);
}

/* Set up clock rate for LPC_I2C peripheral */
void Chip_I2C_SetClockRate(I2C_ID_T id, uint32_t clockrate)
{
1a0008d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a0008d4:	460c      	mov	r4, r1
	return Chip_Clock_GetRate(i2c[id].clk);
1a0008d6:	4e0b      	ldr	r6, [pc, #44]	; (1a000904 <Chip_I2C_SetClockRate+0x34>)
1a0008d8:	00c5      	lsls	r5, r0, #3
1a0008da:	1a2b      	subs	r3, r5, r0
1a0008dc:	ea4f 0883 	mov.w	r8, r3, lsl #2
1a0008e0:	eb06 0308 	add.w	r3, r6, r8
1a0008e4:	8898      	ldrh	r0, [r3, #4]
1a0008e6:	f000 fbcb 	bl	1a001080 <Chip_Clock_GetRate>
	uint32_t SCLValue;

	SCLValue = (getClkRate(id) / clockrate);
1a0008ea:	fbb0 f0f4 	udiv	r0, r0, r4
	LPC_I2Cx(id)->SCLH = (uint32_t) (SCLValue >> 1);
1a0008ee:	f856 3008 	ldr.w	r3, [r6, r8]
1a0008f2:	0842      	lsrs	r2, r0, #1
1a0008f4:	611a      	str	r2, [r3, #16]
	LPC_I2Cx(id)->SCLL = (uint32_t) (SCLValue - LPC_I2Cx(id)->SCLH);
1a0008f6:	f856 3008 	ldr.w	r3, [r6, r8]
1a0008fa:	691a      	ldr	r2, [r3, #16]
1a0008fc:	1a80      	subs	r0, r0, r2
1a0008fe:	6158      	str	r0, [r3, #20]
}
1a000900:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a000904:	10000000 	.word	0x10000000

1a000908 <Chip_GPIO_Init>:
 ****************************************************************************/

/* Initialize GPIO block */
void Chip_GPIO_Init(LPC_GPIO_T *pGPIO)
{
}
1a000908:	4770      	bx	lr
1a00090a:	Address 0x1a00090a is out of bounds.


1a00090c <Chip_ADC_GetClockIndex>:
/* Returns clock index for the peripheral block */
STATIC CHIP_CCU_CLK_T Chip_ADC_GetClockIndex(LPC_ADC_T *pADC)
{
	CHIP_CCU_CLK_T clkADC;

	if (pADC == LPC_ADC1) {
1a00090c:	4b03      	ldr	r3, [pc, #12]	; (1a00091c <Chip_ADC_GetClockIndex+0x10>)
1a00090e:	4298      	cmp	r0, r3
1a000910:	d001      	beq.n	1a000916 <Chip_ADC_GetClockIndex+0xa>
		clkADC = CLK_APB3_ADC1;
	}
	else {
		clkADC = CLK_APB3_ADC0;
1a000912:	2003      	movs	r0, #3
	}

	return clkADC;
}
1a000914:	4770      	bx	lr
		clkADC = CLK_APB3_ADC1;
1a000916:	2004      	movs	r0, #4
1a000918:	4770      	bx	lr
1a00091a:	bf00      	nop
1a00091c:	400e4000 	.word	0x400e4000

1a000920 <getClkDiv>:

/* Get divider value */
STATIC uint8_t getClkDiv(LPC_ADC_T *pADC, bool burstMode, uint32_t adcRate, uint8_t clks)
{
1a000920:	b570      	push	{r4, r5, r6, lr}
1a000922:	460d      	mov	r5, r1
1a000924:	4614      	mov	r4, r2
1a000926:	461e      	mov	r6, r3
	   A/D converter, which should be less than or equal to 4.5MHz.
	   A fully conversion requires (bits_accuracy+1) of these clocks.
	   ADC Clock = PCLK_ADC0 / (CLKDIV + 1);
	   ADC rate = ADC clock / (the number of clocks required for each conversion);
	 */
	adcBlockFreq = Chip_Clock_GetRate(Chip_ADC_GetClockIndex(pADC));
1a000928:	f7ff fff0 	bl	1a00090c <Chip_ADC_GetClockIndex>
1a00092c:	f000 fba8 	bl	1a001080 <Chip_Clock_GetRate>
	if (burstMode) {
1a000930:	b155      	cbz	r5, 1a000948 <getClkDiv+0x28>
		fullAdcRate = adcRate * clks;
1a000932:	fb04 f406 	mul.w	r4, r4, r6
	else {
		fullAdcRate = adcRate * getFullConvClk();
	}

	/* Get the round value by fomular: (2*A + B)/(2*B) */
	div = ((adcBlockFreq * 2 + fullAdcRate) / (fullAdcRate * 2)) - 1;
1a000936:	eb04 0040 	add.w	r0, r4, r0, lsl #1
1a00093a:	0064      	lsls	r4, r4, #1
1a00093c:	fbb0 f0f4 	udiv	r0, r0, r4
1a000940:	b2c0      	uxtb	r0, r0
1a000942:	3801      	subs	r0, #1
	return div;
}
1a000944:	b2c0      	uxtb	r0, r0
1a000946:	bd70      	pop	{r4, r5, r6, pc}
		fullAdcRate = adcRate * getFullConvClk();
1a000948:	eb04 0384 	add.w	r3, r4, r4, lsl #2
1a00094c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
1a000950:	e7f1      	b.n	1a000936 <getClkDiv+0x16>
1a000952:	Address 0x1a000952 is out of bounds.


1a000954 <Chip_ADC_Init>:
 * Public functions
 ****************************************************************************/

/* Initialize the ADC peripheral and the ADC setup structure to default value */
void Chip_ADC_Init(LPC_ADC_T *pADC, ADC_CLOCK_SETUP_T *ADCSetup)
{
1a000954:	b538      	push	{r3, r4, r5, lr}
1a000956:	4605      	mov	r5, r0
1a000958:	460c      	mov	r4, r1
	uint8_t div;
	uint32_t cr = 0;
	uint32_t clk;

	Chip_Clock_EnableOpts(Chip_ADC_GetClockIndex(pADC), true, true, 1);
1a00095a:	f7ff ffd7 	bl	1a00090c <Chip_ADC_GetClockIndex>
1a00095e:	2301      	movs	r3, #1
1a000960:	461a      	mov	r2, r3
1a000962:	4619      	mov	r1, r3
1a000964:	f000 fb54 	bl	1a001010 <Chip_Clock_EnableOpts>

	pADC->INTEN = 0;		/* Disable all interrupts */
1a000968:	2100      	movs	r1, #0
1a00096a:	60e9      	str	r1, [r5, #12]

	cr |= ADC_CR_PDN;
	ADCSetup->adcRate = ADC_MAX_SAMPLE_RATE;
1a00096c:	4a08      	ldr	r2, [pc, #32]	; (1a000990 <Chip_ADC_Init+0x3c>)
1a00096e:	6022      	str	r2, [r4, #0]
	ADCSetup->bitsAccuracy = ADC_10BITS;
1a000970:	7121      	strb	r1, [r4, #4]
	clk = 11;
	ADCSetup->burstMode = false;
1a000972:	7161      	strb	r1, [r4, #5]
	div = getClkDiv(pADC, false, ADCSetup->adcRate, clk);
1a000974:	230b      	movs	r3, #11
1a000976:	4628      	mov	r0, r5
1a000978:	f7ff ffd2 	bl	1a000920 <getClkDiv>
	cr |= ADC_CR_CLKDIV(div);
1a00097c:	0200      	lsls	r0, r0, #8
1a00097e:	f440 1300 	orr.w	r3, r0, #2097152	; 0x200000
	cr |= ADC_CR_BITACC(ADCSetup->bitsAccuracy);
1a000982:	7920      	ldrb	r0, [r4, #4]
1a000984:	0440      	lsls	r0, r0, #17
1a000986:	f400 2060 	and.w	r0, r0, #917504	; 0xe0000
1a00098a:	4318      	orrs	r0, r3
	pADC->CR = cr;
1a00098c:	6028      	str	r0, [r5, #0]
}
1a00098e:	bd38      	pop	{r3, r4, r5, pc}
1a000990:	00061a80 	.word	0x00061a80

1a000994 <Chip_ADC_SetSampleRate>:
	setStartMode(pADC, (uint8_t) mode);
}

/* Set the ADC Sample rate */
void Chip_ADC_SetSampleRate(LPC_ADC_T *pADC, ADC_CLOCK_SETUP_T *ADCSetup, uint32_t rate)
{
1a000994:	b570      	push	{r4, r5, r6, lr}
1a000996:	4605      	mov	r5, r0
1a000998:	460e      	mov	r6, r1
	uint8_t div;
	uint32_t cr;

	cr = pADC->CR & (~ADC_SAMPLE_RATE_CONFIG_MASK);
1a00099a:	6804      	ldr	r4, [r0, #0]
1a00099c:	f424 246f 	bic.w	r4, r4, #978944	; 0xef000
1a0009a0:	f424 6470 	bic.w	r4, r4, #3840	; 0xf00
	ADCSetup->adcRate = rate;
1a0009a4:	600a      	str	r2, [r1, #0]
	div = getClkDiv(pADC, ADCSetup->burstMode, rate, (11 - ADCSetup->bitsAccuracy));
1a0009a6:	790b      	ldrb	r3, [r1, #4]
1a0009a8:	f1c3 030b 	rsb	r3, r3, #11
1a0009ac:	b2db      	uxtb	r3, r3
1a0009ae:	7949      	ldrb	r1, [r1, #5]
1a0009b0:	f7ff ffb6 	bl	1a000920 <getClkDiv>
	cr |= ADC_CR_CLKDIV(div);
1a0009b4:	ea44 2000 	orr.w	r0, r4, r0, lsl #8
	cr |= ADC_CR_BITACC(ADCSetup->bitsAccuracy);
1a0009b8:	7933      	ldrb	r3, [r6, #4]
1a0009ba:	045b      	lsls	r3, r3, #17
1a0009bc:	f403 2360 	and.w	r3, r3, #917504	; 0xe0000
1a0009c0:	4303      	orrs	r3, r0
	pADC->CR = cr;
1a0009c2:	602b      	str	r3, [r5, #0]
}
1a0009c4:	bd70      	pop	{r4, r5, r6, pc}

1a0009c6 <Chip_ADC_SetResolution>:

/* Set the ADC accuracy bits */
void Chip_ADC_SetResolution(LPC_ADC_T *pADC, ADC_CLOCK_SETUP_T *ADCSetup, ADC_RESOLUTION_T resolution)
{
1a0009c6:	b508      	push	{r3, lr}
	ADCSetup->bitsAccuracy = resolution;
1a0009c8:	710a      	strb	r2, [r1, #4]
	Chip_ADC_SetSampleRate(pADC, ADCSetup, ADCSetup->adcRate);
1a0009ca:	680a      	ldr	r2, [r1, #0]
1a0009cc:	f7ff ffe2 	bl	1a000994 <Chip_ADC_SetSampleRate>
}
1a0009d0:	bd08      	pop	{r3, pc}
1a0009d2:	Address 0x1a0009d2 is out of bounds.


1a0009d4 <Chip_SetupCoreClock>:
/*****************************************************************************
 * Public functions
 ****************************************************************************/
/* Setup Chip Core clock */
void Chip_SetupCoreClock(CHIP_CGU_CLKIN_T clkin, uint32_t core_freq, bool setbase)
{
1a0009d4:	b570      	push	{r4, r5, r6, lr}
1a0009d6:	b08a      	sub	sp, #40	; 0x28
1a0009d8:	4605      	mov	r5, r0
1a0009da:	460e      	mov	r6, r1
1a0009dc:	4614      	mov	r4, r2
	int i;
	volatile uint32_t delay = 50000; // FIXME: original was 500, fix for horrible crystals. @Eric
1a0009de:	f24c 3350 	movw	r3, #50000	; 0xc350
1a0009e2:	9309      	str	r3, [sp, #36]	; 0x24
	uint32_t direct = 0, pdivide = 0;
	PLL_PARAM_T ppll;

	if (clkin == CLKIN_CRYSTAL) {
1a0009e4:	2806      	cmp	r0, #6
1a0009e6:	d018      	beq.n	1a000a1a <Chip_SetupCoreClock+0x46>
		/* Switch main system clocking to crystal */
		Chip_Clock_EnableCrystal();
	}
	Chip_Clock_SetBaseClock(CLK_BASE_MX, clkin, true, false);
1a0009e8:	2300      	movs	r3, #0
1a0009ea:	2201      	movs	r2, #1
1a0009ec:	4629      	mov	r1, r5
1a0009ee:	2004      	movs	r0, #4
1a0009f0:	f000 fac8 	bl	1a000f84 <Chip_Clock_SetBaseClock>
 * Saves power if the main PLL is not needed.
 */
__STATIC_INLINE void Chip_Clock_DisableMainPLL(void)
{
	/* power down main PLL */
	LPC_CGU->PLL1_CTRL |= 1;
1a0009f4:	4a4a      	ldr	r2, [pc, #296]	; (1a000b20 <Chip_SetupCoreClock+0x14c>)
1a0009f6:	6c53      	ldr	r3, [r2, #68]	; 0x44
1a0009f8:	f043 0301 	orr.w	r3, r3, #1
1a0009fc:	6453      	str	r3, [r2, #68]	; 0x44
	Chip_Clock_DisableMainPLL(); /* Disable PLL */

	/* Calculate the PLL Parameters */
	ppll.srcin = clkin;
1a0009fe:	f88d 5008 	strb.w	r5, [sp, #8]
	Chip_Clock_CalcMainPLLValue(core_freq, &ppll);
1a000a02:	a901      	add	r1, sp, #4
1a000a04:	4630      	mov	r0, r6
1a000a06:	f000 fa35 	bl	1a000e74 <Chip_Clock_CalcMainPLLValue>

	if (core_freq > 110000000UL) {
1a000a0a:	4b46      	ldr	r3, [pc, #280]	; (1a000b24 <Chip_SetupCoreClock+0x150>)
1a000a0c:	429e      	cmp	r6, r3
1a000a0e:	d916      	bls.n	1a000a3e <Chip_SetupCoreClock+0x6a>
		if (ppll.ctrl & (1 << 6)) {
1a000a10:	9b01      	ldr	r3, [sp, #4]
1a000a12:	f013 0f40 	tst.w	r3, #64	; 0x40
1a000a16:	d003      	beq.n	1a000a20 <Chip_SetupCoreClock+0x4c>
			while(1);		// to run in integer mode above 110 MHz, you need to use IDIV clock to boot strap CPU to that freq
1a000a18:	e7fe      	b.n	1a000a18 <Chip_SetupCoreClock+0x44>
		Chip_Clock_EnableCrystal();
1a000a1a:	f000 f98d 	bl	1a000d38 <Chip_Clock_EnableCrystal>
1a000a1e:	e7e3      	b.n	1a0009e8 <Chip_SetupCoreClock+0x14>
		} else if (ppll.ctrl & (1 << 7)){
1a000a20:	f013 0f80 	tst.w	r3, #128	; 0x80
1a000a24:	d005      	beq.n	1a000a32 <Chip_SetupCoreClock+0x5e>
			direct = 1;
			ppll.ctrl &= ~(1 << 7);
1a000a26:	f023 0380 	bic.w	r3, r3, #128	; 0x80
1a000a2a:	9301      	str	r3, [sp, #4]
	uint32_t direct = 0, pdivide = 0;
1a000a2c:	2500      	movs	r5, #0
			direct = 1;
1a000a2e:	2601      	movs	r6, #1
1a000a30:	e007      	b.n	1a000a42 <Chip_SetupCoreClock+0x6e>
		} else {
			pdivide = 1;
			ppll.psel++;
1a000a32:	9b04      	ldr	r3, [sp, #16]
1a000a34:	3301      	adds	r3, #1
1a000a36:	9304      	str	r3, [sp, #16]
			pdivide = 1;
1a000a38:	2501      	movs	r5, #1
	uint32_t direct = 0, pdivide = 0;
1a000a3a:	2600      	movs	r6, #0
1a000a3c:	e001      	b.n	1a000a42 <Chip_SetupCoreClock+0x6e>
1a000a3e:	2500      	movs	r5, #0
1a000a40:	462e      	mov	r6, r5
 * Make sure the main PLL is enabled.
 */
__STATIC_INLINE void Chip_Clock_SetupMainPLL(const PLL_PARAM_T *ppll)
{
	/* power up main PLL */
    LPC_CGU->PLL1_CTRL = ppll->ctrl | ((uint32_t) ppll->srcin << 24) | (ppll->msel << 16) | (ppll->nsel << 12) | (ppll->psel << 8) | ( 1 << 11);	
1a000a42:	f89d 2008 	ldrb.w	r2, [sp, #8]
1a000a46:	9b01      	ldr	r3, [sp, #4]
1a000a48:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
1a000a4c:	9a05      	ldr	r2, [sp, #20]
1a000a4e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a000a52:	9a03      	ldr	r2, [sp, #12]
1a000a54:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
1a000a58:	9a04      	ldr	r2, [sp, #16]
1a000a5a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
1a000a5e:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a000a62:	4a2f      	ldr	r2, [pc, #188]	; (1a000b20 <Chip_SetupCoreClock+0x14c>)
1a000a64:	6453      	str	r3, [r2, #68]	; 0x44
 * @note	The main PLL should be locked prior to using it as a clock input for a base clock.
 */
__STATIC_INLINE int Chip_Clock_MainPLLLocked(void)
{
	/* Return true if locked */
	return (LPC_CGU->PLL1_STAT & 1) != 0;
1a000a66:	4b2e      	ldr	r3, [pc, #184]	; (1a000b20 <Chip_SetupCoreClock+0x14c>)
1a000a68:	6c1b      	ldr	r3, [r3, #64]	; 0x40

	/* Setup and start the PLL */
	Chip_Clock_SetupMainPLL(&ppll);

	/* Wait for the PLL to lock */
	while(!Chip_Clock_MainPLLLocked()) {}
1a000a6a:	f013 0f01 	tst.w	r3, #1
1a000a6e:	d0fa      	beq.n	1a000a66 <Chip_SetupCoreClock+0x92>

	/* Set core clock base as PLL1 */
	Chip_Clock_SetBaseClock(CLK_BASE_MX, CLKIN_MAINPLL, true, false);
1a000a70:	2300      	movs	r3, #0
1a000a72:	2201      	movs	r2, #1
1a000a74:	2109      	movs	r1, #9
1a000a76:	2004      	movs	r0, #4
1a000a78:	f000 fa84 	bl	1a000f84 <Chip_Clock_SetBaseClock>

	if (direct) {
1a000a7c:	b306      	cbz	r6, 1a000ac0 <Chip_SetupCoreClock+0xec>
		delay = 50000; // FIXME: original was 1000, fix for horrible crystals. @Eric
1a000a7e:	f24c 3350 	movw	r3, #50000	; 0xc350
1a000a82:	9309      	str	r3, [sp, #36]	; 0x24
		while(delay --){} /* Wait for approx 50 uSec -- for power supply to stabilize*/
1a000a84:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a000a86:	1e5a      	subs	r2, r3, #1
1a000a88:	9209      	str	r2, [sp, #36]	; 0x24
1a000a8a:	2b00      	cmp	r3, #0
1a000a8c:	d1fa      	bne.n	1a000a84 <Chip_SetupCoreClock+0xb0>
		ppll.ctrl |= 1 << 7;
1a000a8e:	9b01      	ldr	r3, [sp, #4]
1a000a90:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a000a94:	9301      	str	r3, [sp, #4]
    LPC_CGU->PLL1_CTRL = ppll->ctrl | ((uint32_t) ppll->srcin << 24) | (ppll->msel << 16) | (ppll->nsel << 12) | (ppll->psel << 8) | ( 1 << 11);	
1a000a96:	f89d 2008 	ldrb.w	r2, [sp, #8]
1a000a9a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
1a000a9e:	9a05      	ldr	r2, [sp, #20]
1a000aa0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a000aa4:	9a03      	ldr	r2, [sp, #12]
1a000aa6:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
1a000aaa:	9a04      	ldr	r2, [sp, #16]
1a000aac:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
1a000ab0:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a000ab4:	4a1a      	ldr	r2, [pc, #104]	; (1a000b20 <Chip_SetupCoreClock+0x14c>)
1a000ab6:	6453      	str	r3, [r2, #68]	; 0x44
		while(delay --){} /* Wait for approx 50 uSec -- for power supply to stabilize */
		ppll.psel--;
		Chip_Clock_SetupMainPLL(&ppll); /* Set PDIV to operate at full frequency */
	}

	if (setbase) {
1a000ab8:	2c00      	cmp	r4, #0
1a000aba:	d12e      	bne.n	1a000b1a <Chip_SetupCoreClock+0x146>
		for (i = 0; i < (sizeof(InitClkStates) / sizeof(InitClkStates[0])); i++) {
			Chip_Clock_SetBaseClock(InitClkStates[i].clk, InitClkStates[i].clkin,
									InitClkStates[i].autoblock_enab, InitClkStates[i].powerdn);
		}
	}
}
1a000abc:	b00a      	add	sp, #40	; 0x28
1a000abe:	bd70      	pop	{r4, r5, r6, pc}
	} else if (pdivide) {
1a000ac0:	2d00      	cmp	r5, #0
1a000ac2:	d0f9      	beq.n	1a000ab8 <Chip_SetupCoreClock+0xe4>
		delay = 50000; // FIXME: original was 1000, fix for horrible crystals. @Eric
1a000ac4:	f24c 3350 	movw	r3, #50000	; 0xc350
1a000ac8:	9309      	str	r3, [sp, #36]	; 0x24
		while(delay --){} /* Wait for approx 50 uSec -- for power supply to stabilize */
1a000aca:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a000acc:	1e5a      	subs	r2, r3, #1
1a000ace:	9209      	str	r2, [sp, #36]	; 0x24
1a000ad0:	2b00      	cmp	r3, #0
1a000ad2:	d1fa      	bne.n	1a000aca <Chip_SetupCoreClock+0xf6>
		ppll.psel--;
1a000ad4:	9b04      	ldr	r3, [sp, #16]
1a000ad6:	1e5a      	subs	r2, r3, #1
1a000ad8:	9204      	str	r2, [sp, #16]
1a000ada:	f89d 1008 	ldrb.w	r1, [sp, #8]
1a000ade:	9b01      	ldr	r3, [sp, #4]
1a000ae0:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
1a000ae4:	9905      	ldr	r1, [sp, #20]
1a000ae6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1a000aea:	9903      	ldr	r1, [sp, #12]
1a000aec:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
1a000af0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
1a000af4:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
1a000af8:	4a09      	ldr	r2, [pc, #36]	; (1a000b20 <Chip_SetupCoreClock+0x14c>)
1a000afa:	6453      	str	r3, [r2, #68]	; 0x44
1a000afc:	e7dc      	b.n	1a000ab8 <Chip_SetupCoreClock+0xe4>
			Chip_Clock_SetBaseClock(InitClkStates[i].clk, InitClkStates[i].clkin,
1a000afe:	480a      	ldr	r0, [pc, #40]	; (1a000b28 <Chip_SetupCoreClock+0x154>)
1a000b00:	eb00 0184 	add.w	r1, r0, r4, lsl #2
1a000b04:	78cb      	ldrb	r3, [r1, #3]
1a000b06:	788a      	ldrb	r2, [r1, #2]
1a000b08:	7849      	ldrb	r1, [r1, #1]
1a000b0a:	f810 0024 	ldrb.w	r0, [r0, r4, lsl #2]
1a000b0e:	f000 fa39 	bl	1a000f84 <Chip_Clock_SetBaseClock>
		for (i = 0; i < (sizeof(InitClkStates) / sizeof(InitClkStates[0])); i++) {
1a000b12:	3401      	adds	r4, #1
1a000b14:	2c11      	cmp	r4, #17
1a000b16:	d9f2      	bls.n	1a000afe <Chip_SetupCoreClock+0x12a>
1a000b18:	e7d0      	b.n	1a000abc <Chip_SetupCoreClock+0xe8>
1a000b1a:	2400      	movs	r4, #0
1a000b1c:	e7fa      	b.n	1a000b14 <Chip_SetupCoreClock+0x140>
1a000b1e:	bf00      	nop
1a000b20:	40050000 	.word	0x40050000
1a000b24:	068e7780 	.word	0x068e7780
1a000b28:	1a006708 	.word	0x1a006708

1a000b2c <SystemCoreClockUpdate>:


/* Update system core clock rate, should be called if the system has
   a clock rate change */
void SystemCoreClockUpdate(void)
{
1a000b2c:	b508      	push	{r3, lr}
	/* CPU core speed */
	SystemCoreClock = Chip_Clock_GetRate(CLK_MX_MXCORE);
1a000b2e:	2069      	movs	r0, #105	; 0x69
1a000b30:	f000 faa6 	bl	1a001080 <Chip_Clock_GetRate>
1a000b34:	4b01      	ldr	r3, [pc, #4]	; (1a000b3c <SystemCoreClockUpdate+0x10>)
1a000b36:	6018      	str	r0, [r3, #0]
}
1a000b38:	bd08      	pop	{r3, pc}
1a000b3a:	bf00      	nop
1a000b3c:	10000a4c 	.word	0x10000a4c

1a000b40 <pll_calc_divs>:
		return -val;
	return val;
}

static void pll_calc_divs(uint32_t freq, PLL_PARAM_T *ppll)
{
1a000b40:	b4f0      	push	{r4, r5, r6, r7}

	uint32_t prev = freq;
	int n, m, p;

	/* When direct mode is set FBSEL should be a don't care */
	if (ppll->ctrl & (1 << 7)) {
1a000b42:	680b      	ldr	r3, [r1, #0]
1a000b44:	f013 0f80 	tst.w	r3, #128	; 0x80
1a000b48:	d002      	beq.n	1a000b50 <pll_calc_divs+0x10>
		ppll->ctrl &= ~(1 << 6);
1a000b4a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
1a000b4e:	600b      	str	r3, [r1, #0]
	}
	for (n = 1; n <= 4; n++) {
		for (p = 0; p < 4; p ++) {
1a000b50:	4607      	mov	r7, r0
1a000b52:	2501      	movs	r5, #1
1a000b54:	e03a      	b.n	1a000bcc <pll_calc_divs+0x8c>
			for (m = 1; m <= 256; m++) {
				uint32_t fcco, fout;
				if (ppll->ctrl & (1 << 6)) {
					fcco = ((m << (p + 1)) * ppll->fin) / n;
				} else {
					fcco = (m * ppll->fin) / n;
1a000b56:	694b      	ldr	r3, [r1, #20]
1a000b58:	fb03 f302 	mul.w	r3, r3, r2
1a000b5c:	fbb3 f3f5 	udiv	r3, r3, r5
1a000b60:	e01c      	b.n	1a000b9c <pll_calc_divs+0x5c>
				}
				if (fcco < PLL_MIN_CCO_FREQ) continue;
				if (fcco > PLL_MAX_CCO_FREQ) break;
				if (ppll->ctrl & (1 << 7)) {
					fout = fcco;
1a000b62:	461c      	mov	r4, r3
	if (val < 0)
1a000b64:	ebb0 0c04 	subs.w	ip, r0, r4
1a000b68:	d427      	bmi.n	1a000bba <pll_calc_divs+0x7a>
				} else {
					fout = fcco >> (p + 1);
				}

				if (ABS(freq - fout) < prev) {
1a000b6a:	4567      	cmp	r7, ip
1a000b6c:	d906      	bls.n	1a000b7c <pll_calc_divs+0x3c>
					ppll->nsel = n;
1a000b6e:	608d      	str	r5, [r1, #8]
					ppll->psel = p + 1;
1a000b70:	1c77      	adds	r7, r6, #1
1a000b72:	60cf      	str	r7, [r1, #12]
					ppll->msel = m;
1a000b74:	610a      	str	r2, [r1, #16]
					ppll->fout = fout;
1a000b76:	618c      	str	r4, [r1, #24]
					ppll->fcco = fcco;
1a000b78:	61cb      	str	r3, [r1, #28]
					prev = ABS(freq - fout);
1a000b7a:	4667      	mov	r7, ip
			for (m = 1; m <= 256; m++) {
1a000b7c:	3201      	adds	r2, #1
1a000b7e:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
1a000b82:	dc1d      	bgt.n	1a000bc0 <pll_calc_divs+0x80>
				if (ppll->ctrl & (1 << 6)) {
1a000b84:	680c      	ldr	r4, [r1, #0]
1a000b86:	f014 0f40 	tst.w	r4, #64	; 0x40
1a000b8a:	d0e4      	beq.n	1a000b56 <pll_calc_divs+0x16>
					fcco = ((m << (p + 1)) * ppll->fin) / n;
1a000b8c:	1c73      	adds	r3, r6, #1
1a000b8e:	fa02 fc03 	lsl.w	ip, r2, r3
1a000b92:	694b      	ldr	r3, [r1, #20]
1a000b94:	fb03 f30c 	mul.w	r3, r3, ip
1a000b98:	fbb3 f3f5 	udiv	r3, r3, r5
				if (fcco < PLL_MIN_CCO_FREQ) continue;
1a000b9c:	f8df c038 	ldr.w	ip, [pc, #56]	; 1a000bd8 <pll_calc_divs+0x98>
1a000ba0:	4563      	cmp	r3, ip
1a000ba2:	d9eb      	bls.n	1a000b7c <pll_calc_divs+0x3c>
				if (fcco > PLL_MAX_CCO_FREQ) break;
1a000ba4:	f8df c034 	ldr.w	ip, [pc, #52]	; 1a000bdc <pll_calc_divs+0x9c>
1a000ba8:	4563      	cmp	r3, ip
1a000baa:	d809      	bhi.n	1a000bc0 <pll_calc_divs+0x80>
				if (ppll->ctrl & (1 << 7)) {
1a000bac:	f014 0f80 	tst.w	r4, #128	; 0x80
1a000bb0:	d1d7      	bne.n	1a000b62 <pll_calc_divs+0x22>
					fout = fcco >> (p + 1);
1a000bb2:	1c74      	adds	r4, r6, #1
1a000bb4:	fa23 f404 	lsr.w	r4, r3, r4
1a000bb8:	e7d4      	b.n	1a000b64 <pll_calc_divs+0x24>
		return -val;
1a000bba:	f1cc 0c00 	rsb	ip, ip, #0
1a000bbe:	e7d4      	b.n	1a000b6a <pll_calc_divs+0x2a>
		for (p = 0; p < 4; p ++) {
1a000bc0:	3601      	adds	r6, #1
1a000bc2:	2e03      	cmp	r6, #3
1a000bc4:	dc01      	bgt.n	1a000bca <pll_calc_divs+0x8a>
			for (m = 1; m <= 256; m++) {
1a000bc6:	2201      	movs	r2, #1
1a000bc8:	e7d9      	b.n	1a000b7e <pll_calc_divs+0x3e>
	for (n = 1; n <= 4; n++) {
1a000bca:	3501      	adds	r5, #1
1a000bcc:	2d04      	cmp	r5, #4
1a000bce:	dc01      	bgt.n	1a000bd4 <pll_calc_divs+0x94>
		for (p = 0; p < 4; p ++) {
1a000bd0:	2600      	movs	r6, #0
1a000bd2:	e7f6      	b.n	1a000bc2 <pll_calc_divs+0x82>
				}
			}
		}
	}
}
1a000bd4:	bcf0      	pop	{r4, r5, r6, r7}
1a000bd6:	4770      	bx	lr
1a000bd8:	094c5eff 	.word	0x094c5eff
1a000bdc:	1312d000 	.word	0x1312d000

1a000be0 <pll_get_frac>:

static void pll_get_frac(uint32_t freq, PLL_PARAM_T *ppll)
{
1a000be0:	b5f0      	push	{r4, r5, r6, r7, lr}
1a000be2:	b099      	sub	sp, #100	; 0x64
1a000be4:	4605      	mov	r5, r0
1a000be6:	460c      	mov	r4, r1
	int diff[3];
	PLL_PARAM_T pll[3] = {{0},{0},{0}};
1a000be8:	225c      	movs	r2, #92	; 0x5c
1a000bea:	2100      	movs	r1, #0
1a000bec:	a801      	add	r0, sp, #4
1a000bee:	f002 f89b 	bl	1a002d28 <memset>

	/* Try direct mode */
	pll[0].ctrl |= (1 << 7);
1a000bf2:	2380      	movs	r3, #128	; 0x80
1a000bf4:	9300      	str	r3, [sp, #0]
	pll[0].fin = ppll->fin;
1a000bf6:	6963      	ldr	r3, [r4, #20]
1a000bf8:	9305      	str	r3, [sp, #20]
	pll[0].srcin = ppll->srcin;
1a000bfa:	7923      	ldrb	r3, [r4, #4]
1a000bfc:	f88d 3004 	strb.w	r3, [sp, #4]
	pll_calc_divs(freq, &pll[0]);
1a000c00:	4669      	mov	r1, sp
1a000c02:	4628      	mov	r0, r5
1a000c04:	f7ff ff9c 	bl	1a000b40 <pll_calc_divs>
	if (pll[0].fout == freq) {
1a000c08:	9b06      	ldr	r3, [sp, #24]
1a000c0a:	42ab      	cmp	r3, r5
1a000c0c:	d027      	beq.n	1a000c5e <pll_get_frac+0x7e>
	if (val < 0)
1a000c0e:	1aeb      	subs	r3, r5, r3
1a000c10:	d42e      	bmi.n	1a000c70 <pll_get_frac+0x90>
		*ppll = pll[0];
		return ;
	}
	diff[0] = ABS(freq - pll[0].fout);
1a000c12:	461e      	mov	r6, r3

	/* Try non-Integer mode */
	pll[2].ctrl &= ~(1 << 6);			// need to set FBSEL to 0
1a000c14:	9b10      	ldr	r3, [sp, #64]	; 0x40
1a000c16:	f023 0340 	bic.w	r3, r3, #64	; 0x40
1a000c1a:	9310      	str	r3, [sp, #64]	; 0x40
	pll[2].fin = ppll->fin;
1a000c1c:	6963      	ldr	r3, [r4, #20]
1a000c1e:	9315      	str	r3, [sp, #84]	; 0x54
	pll[2].srcin = ppll->srcin;
1a000c20:	7923      	ldrb	r3, [r4, #4]
1a000c22:	f88d 3044 	strb.w	r3, [sp, #68]	; 0x44
	pll_calc_divs(freq, &pll[2]);
1a000c26:	a910      	add	r1, sp, #64	; 0x40
1a000c28:	4628      	mov	r0, r5
1a000c2a:	f7ff ff89 	bl	1a000b40 <pll_calc_divs>
	if (pll[2].fout == freq) {
1a000c2e:	9b16      	ldr	r3, [sp, #88]	; 0x58
1a000c30:	42ab      	cmp	r3, r5
1a000c32:	d01f      	beq.n	1a000c74 <pll_get_frac+0x94>
	if (val < 0)
1a000c34:	1aeb      	subs	r3, r5, r3
1a000c36:	d425      	bmi.n	1a000c84 <pll_get_frac+0xa4>
		*ppll = pll[2];
		return ;
	}
	diff[2] = ABS(freq - pll[2].fout);
1a000c38:	461f      	mov	r7, r3
	
	if (freq <= 110000000) {
1a000c3a:	4b2b      	ldr	r3, [pc, #172]	; (1a000ce8 <pll_get_frac+0x108>)
1a000c3c:	429d      	cmp	r5, r3
1a000c3e:	d923      	bls.n	1a000c88 <pll_get_frac+0xa8>
		if (pll[1].fout == freq) {
			*ppll = pll[1];
			return ;
		}
	}
	diff[1] = ABS(freq - pll[1].fout);
1a000c40:	9b0e      	ldr	r3, [sp, #56]	; 0x38
	if (val < 0)
1a000c42:	1aed      	subs	r5, r5, r3
1a000c44:	d433      	bmi.n	1a000cae <pll_get_frac+0xce>

	/* Find the min of 3 and return */
	if (diff[0] <= diff[1]) {
1a000c46:	42ae      	cmp	r6, r5
1a000c48:	dc3b      	bgt.n	1a000cc2 <pll_get_frac+0xe2>
		if (diff[0] <= diff[2]) {
1a000c4a:	42be      	cmp	r6, r7
1a000c4c:	dc31      	bgt.n	1a000cb2 <pll_get_frac+0xd2>
			*ppll = pll[0];
1a000c4e:	466d      	mov	r5, sp
1a000c50:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000c52:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000c54:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000c58:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a000c5c:	e006      	b.n	1a000c6c <pll_get_frac+0x8c>
		*ppll = pll[0];
1a000c5e:	466d      	mov	r5, sp
1a000c60:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000c62:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000c64:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000c68:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
			*ppll = pll[1];
		} else {
			*ppll = pll[2];
		}
	}
}
1a000c6c:	b019      	add	sp, #100	; 0x64
1a000c6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return -val;
1a000c70:	425b      	negs	r3, r3
1a000c72:	e7ce      	b.n	1a000c12 <pll_get_frac+0x32>
		*ppll = pll[2];
1a000c74:	ad10      	add	r5, sp, #64	; 0x40
1a000c76:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000c78:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000c7a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000c7e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
		return ;
1a000c82:	e7f3      	b.n	1a000c6c <pll_get_frac+0x8c>
		return -val;
1a000c84:	425b      	negs	r3, r3
1a000c86:	e7d7      	b.n	1a000c38 <pll_get_frac+0x58>
		pll[1].ctrl = (1 << 6);
1a000c88:	2340      	movs	r3, #64	; 0x40
1a000c8a:	9308      	str	r3, [sp, #32]
		pll[1].fin = ppll->fin;
1a000c8c:	6963      	ldr	r3, [r4, #20]
1a000c8e:	930d      	str	r3, [sp, #52]	; 0x34
		pll_calc_divs(freq, &pll[1]);
1a000c90:	a908      	add	r1, sp, #32
1a000c92:	4628      	mov	r0, r5
1a000c94:	f7ff ff54 	bl	1a000b40 <pll_calc_divs>
		if (pll[1].fout == freq) {
1a000c98:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a000c9a:	42ab      	cmp	r3, r5
1a000c9c:	d1d0      	bne.n	1a000c40 <pll_get_frac+0x60>
			*ppll = pll[1];
1a000c9e:	ad08      	add	r5, sp, #32
1a000ca0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000ca2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000ca4:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000ca8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
			return ;
1a000cac:	e7de      	b.n	1a000c6c <pll_get_frac+0x8c>
		return -val;
1a000cae:	426d      	negs	r5, r5
1a000cb0:	e7c9      	b.n	1a000c46 <pll_get_frac+0x66>
			*ppll = pll[2];
1a000cb2:	ad10      	add	r5, sp, #64	; 0x40
1a000cb4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000cb6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000cb8:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000cbc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a000cc0:	e7d4      	b.n	1a000c6c <pll_get_frac+0x8c>
		if (diff[1] <= diff[2]) {
1a000cc2:	42af      	cmp	r7, r5
1a000cc4:	db07      	blt.n	1a000cd6 <pll_get_frac+0xf6>
			*ppll = pll[1];
1a000cc6:	ad08      	add	r5, sp, #32
1a000cc8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000cca:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000ccc:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000cd0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a000cd4:	e7ca      	b.n	1a000c6c <pll_get_frac+0x8c>
			*ppll = pll[2];
1a000cd6:	ad10      	add	r5, sp, #64	; 0x40
1a000cd8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1a000cda:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1a000cdc:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1a000ce0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
1a000ce4:	e7c2      	b.n	1a000c6c <pll_get_frac+0x8c>
1a000ce6:	bf00      	nop
1a000ce8:	068e7780 	.word	0x068e7780

1a000cec <Chip_Clock_FindBaseClock>:
	return Chip_Clock_GetClockInputHz(input) / (div + 1);
}

/* Finds the base clock for the peripheral clock */
static CHIP_CGU_BASE_CLK_T Chip_Clock_FindBaseClock(CHIP_CCU_CLK_T clk)
{
1a000cec:	b430      	push	{r4, r5}
1a000cee:	4605      	mov	r5, r0
	CHIP_CGU_BASE_CLK_T baseclk = CLK_BASE_NONE;
	int i = 0;
1a000cf0:	2300      	movs	r3, #0
	CHIP_CGU_BASE_CLK_T baseclk = CLK_BASE_NONE;
1a000cf2:	201c      	movs	r0, #28

	while ((baseclk == CLK_BASE_NONE) && (periph_to_base[i].clkbase != baseclk)) {
1a000cf4:	e000      	b.n	1a000cf8 <Chip_Clock_FindBaseClock+0xc>
		if ((clk >= periph_to_base[i].clkstart) && (clk <= periph_to_base[i].clkend)) {
			baseclk = periph_to_base[i].clkbase;
		}
		else {
			i++;
1a000cf6:	3301      	adds	r3, #1
	while ((baseclk == CLK_BASE_NONE) && (periph_to_base[i].clkbase != baseclk)) {
1a000cf8:	281c      	cmp	r0, #28
1a000cfa:	d118      	bne.n	1a000d2e <Chip_Clock_FindBaseClock+0x42>
1a000cfc:	eb03 0243 	add.w	r2, r3, r3, lsl #1
1a000d00:	0051      	lsls	r1, r2, #1
1a000d02:	4a0c      	ldr	r2, [pc, #48]	; (1a000d34 <Chip_Clock_FindBaseClock+0x48>)
1a000d04:	440a      	add	r2, r1
1a000d06:	7914      	ldrb	r4, [r2, #4]
1a000d08:	4284      	cmp	r4, r0
1a000d0a:	d010      	beq.n	1a000d2e <Chip_Clock_FindBaseClock+0x42>
		if ((clk >= periph_to_base[i].clkstart) && (clk <= periph_to_base[i].clkend)) {
1a000d0c:	eb03 0143 	add.w	r1, r3, r3, lsl #1
1a000d10:	004a      	lsls	r2, r1, #1
1a000d12:	4908      	ldr	r1, [pc, #32]	; (1a000d34 <Chip_Clock_FindBaseClock+0x48>)
1a000d14:	5a8a      	ldrh	r2, [r1, r2]
1a000d16:	42aa      	cmp	r2, r5
1a000d18:	d8ed      	bhi.n	1a000cf6 <Chip_Clock_FindBaseClock+0xa>
1a000d1a:	eb03 0243 	add.w	r2, r3, r3, lsl #1
1a000d1e:	0051      	lsls	r1, r2, #1
1a000d20:	4a04      	ldr	r2, [pc, #16]	; (1a000d34 <Chip_Clock_FindBaseClock+0x48>)
1a000d22:	440a      	add	r2, r1
1a000d24:	8852      	ldrh	r2, [r2, #2]
1a000d26:	42aa      	cmp	r2, r5
1a000d28:	d3e5      	bcc.n	1a000cf6 <Chip_Clock_FindBaseClock+0xa>
			baseclk = periph_to_base[i].clkbase;
1a000d2a:	4620      	mov	r0, r4
1a000d2c:	e7e4      	b.n	1a000cf8 <Chip_Clock_FindBaseClock+0xc>
		}
	}

	return baseclk;
}
1a000d2e:	bc30      	pop	{r4, r5}
1a000d30:	4770      	bx	lr
1a000d32:	bf00      	nop
1a000d34:	1a00675c 	.word	0x1a00675c

1a000d38 <Chip_Clock_EnableCrystal>:
 * Public functions
 ****************************************************************************/

/* Enables the crystal oscillator */
void Chip_Clock_EnableCrystal(void)
{
1a000d38:	b082      	sub	sp, #8
	volatile uint32_t delay = 1000;
1a000d3a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
1a000d3e:	9301      	str	r3, [sp, #4]

	uint32_t OldCrystalConfig = LPC_CGU->XTAL_OSC_CTRL;
1a000d40:	4a0d      	ldr	r2, [pc, #52]	; (1a000d78 <Chip_Clock_EnableCrystal+0x40>)
1a000d42:	6993      	ldr	r3, [r2, #24]

	/* Clear bypass mode */
	OldCrystalConfig &= (~2);
1a000d44:	f023 0102 	bic.w	r1, r3, #2
	if (OldCrystalConfig != LPC_CGU->XTAL_OSC_CTRL) {
1a000d48:	6992      	ldr	r2, [r2, #24]
1a000d4a:	428a      	cmp	r2, r1
1a000d4c:	d001      	beq.n	1a000d52 <Chip_Clock_EnableCrystal+0x1a>
		LPC_CGU->XTAL_OSC_CTRL = OldCrystalConfig;
1a000d4e:	4a0a      	ldr	r2, [pc, #40]	; (1a000d78 <Chip_Clock_EnableCrystal+0x40>)
1a000d50:	6191      	str	r1, [r2, #24]
	}

	/* Enable crystal oscillator */
	OldCrystalConfig &= (~1);
1a000d52:	f023 0303 	bic.w	r3, r3, #3
	if (OscRateIn >= 20000000) {
1a000d56:	4a09      	ldr	r2, [pc, #36]	; (1a000d7c <Chip_Clock_EnableCrystal+0x44>)
1a000d58:	6811      	ldr	r1, [r2, #0]
1a000d5a:	4a09      	ldr	r2, [pc, #36]	; (1a000d80 <Chip_Clock_EnableCrystal+0x48>)
1a000d5c:	4291      	cmp	r1, r2
1a000d5e:	d901      	bls.n	1a000d64 <Chip_Clock_EnableCrystal+0x2c>
		OldCrystalConfig |= 4;	/* Set high frequency mode */
1a000d60:	f043 0304 	orr.w	r3, r3, #4

	}
	LPC_CGU->XTAL_OSC_CTRL = OldCrystalConfig;
1a000d64:	4a04      	ldr	r2, [pc, #16]	; (1a000d78 <Chip_Clock_EnableCrystal+0x40>)
1a000d66:	6193      	str	r3, [r2, #24]

	/* Delay for 250uSec */
	while(delay--) {}
1a000d68:	9b01      	ldr	r3, [sp, #4]
1a000d6a:	1e5a      	subs	r2, r3, #1
1a000d6c:	9201      	str	r2, [sp, #4]
1a000d6e:	2b00      	cmp	r3, #0
1a000d70:	d1fa      	bne.n	1a000d68 <Chip_Clock_EnableCrystal+0x30>
}
1a000d72:	b002      	add	sp, #8
1a000d74:	4770      	bx	lr
1a000d76:	bf00      	nop
1a000d78:	40050000 	.word	0x40050000
1a000d7c:	1a006704 	.word	0x1a006704
1a000d80:	01312cff 	.word	0x01312cff

1a000d84 <Chip_Clock_GetDividerSource>:
}

/* Gets a CGU clock divider source */
CHIP_CGU_CLKIN_T Chip_Clock_GetDividerSource(CHIP_CGU_IDIV_T Divider)
{
	uint32_t reg = LPC_CGU->IDIV_CTRL[Divider];
1a000d84:	3012      	adds	r0, #18
1a000d86:	4b05      	ldr	r3, [pc, #20]	; (1a000d9c <Chip_Clock_GetDividerSource+0x18>)
1a000d88:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]

	if (reg & 1) {	/* divider is powered down */
1a000d8c:	f010 0f01 	tst.w	r0, #1
1a000d90:	d102      	bne.n	1a000d98 <Chip_Clock_GetDividerSource+0x14>
		return CLKINPUT_PD;
	}

	return (CHIP_CGU_CLKIN_T) ((reg >> 24) & 0x1F);
1a000d92:	f3c0 6004 	ubfx	r0, r0, #24, #5
1a000d96:	4770      	bx	lr
		return CLKINPUT_PD;
1a000d98:	2011      	movs	r0, #17
}
1a000d9a:	4770      	bx	lr
1a000d9c:	40050000 	.word	0x40050000

1a000da0 <Chip_Clock_GetDividerDivisor>:

/* Gets a CGU clock divider divisor */
uint32_t Chip_Clock_GetDividerDivisor(CHIP_CGU_IDIV_T Divider)
{
	return (CHIP_CGU_CLKIN_T) ((LPC_CGU->IDIV_CTRL[Divider] >> 2) & CHIP_CGU_IDIV_MASK(Divider));
1a000da0:	f100 0212 	add.w	r2, r0, #18
1a000da4:	4b03      	ldr	r3, [pc, #12]	; (1a000db4 <Chip_Clock_GetDividerDivisor+0x14>)
1a000da6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1a000daa:	4b03      	ldr	r3, [pc, #12]	; (1a000db8 <Chip_Clock_GetDividerDivisor+0x18>)
1a000dac:	5c18      	ldrb	r0, [r3, r0]
}
1a000dae:	ea00 0092 	and.w	r0, r0, r2, lsr #2
1a000db2:	4770      	bx	lr
1a000db4:	40050000 	.word	0x40050000
1a000db8:	1a006754 	.word	0x1a006754

1a000dbc <Chip_Clock_GetClockInputHz>:

/* Returns the frequency of the specified input clock source */
uint32_t Chip_Clock_GetClockInputHz(CHIP_CGU_CLKIN_T input)
{
1a000dbc:	b508      	push	{r3, lr}
	uint32_t rate = 0;

	switch (input) {
1a000dbe:	2810      	cmp	r0, #16
1a000dc0:	d80a      	bhi.n	1a000dd8 <Chip_Clock_GetClockInputHz+0x1c>
1a000dc2:	e8df f000 	tbb	[pc, r0]
1a000dc6:	0b44      	.short	0x0b44
1a000dc8:	0921180d 	.word	0x0921180d
1a000dcc:	2d2a2724 	.word	0x2d2a2724
1a000dd0:	34300909 	.word	0x34300909
1a000dd4:	3c38      	.short	0x3c38
1a000dd6:	40          	.byte	0x40
1a000dd7:	00          	.byte	0x00
	uint32_t rate = 0;
1a000dd8:	2000      	movs	r0, #0
1a000dda:	e03a      	b.n	1a000e52 <Chip_Clock_GetClockInputHz+0x96>
	case CLKIN_32K:
		rate = CRYSTAL_32K_FREQ_IN;
		break;

	case CLKIN_IRC:
		rate = CGU_IRC_FREQ;
1a000ddc:	481e      	ldr	r0, [pc, #120]	; (1a000e58 <Chip_Clock_GetClockInputHz+0x9c>)
		break;
1a000dde:	e038      	b.n	1a000e52 <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_ENET_RX:
		if ((LPC_CREG->CREG6 & 0x07) != 0x4) {
1a000de0:	4b1e      	ldr	r3, [pc, #120]	; (1a000e5c <Chip_Clock_GetClockInputHz+0xa0>)
1a000de2:	f8d3 312c 	ldr.w	r3, [r3, #300]	; 0x12c
1a000de6:	f003 0307 	and.w	r3, r3, #7
1a000dea:	2b04      	cmp	r3, #4
1a000dec:	d001      	beq.n	1a000df2 <Chip_Clock_GetClockInputHz+0x36>
			/* MII mode requires 25MHz clock */
			rate = 25000000;
1a000dee:	481c      	ldr	r0, [pc, #112]	; (1a000e60 <Chip_Clock_GetClockInputHz+0xa4>)
1a000df0:	e02f      	b.n	1a000e52 <Chip_Clock_GetClockInputHz+0x96>
	uint32_t rate = 0;
1a000df2:	2000      	movs	r0, #0
1a000df4:	e02d      	b.n	1a000e52 <Chip_Clock_GetClockInputHz+0x96>
		}
		break;

	case CLKIN_ENET_TX:
		if ((LPC_CREG->CREG6 & 0x07) != 0x4) {
1a000df6:	4b19      	ldr	r3, [pc, #100]	; (1a000e5c <Chip_Clock_GetClockInputHz+0xa0>)
1a000df8:	f8d3 312c 	ldr.w	r3, [r3, #300]	; 0x12c
1a000dfc:	f003 0307 	and.w	r3, r3, #7
1a000e00:	2b04      	cmp	r3, #4
1a000e02:	d027      	beq.n	1a000e54 <Chip_Clock_GetClockInputHz+0x98>
			rate = 25000000; /* MII uses 25 MHz */
1a000e04:	4816      	ldr	r0, [pc, #88]	; (1a000e60 <Chip_Clock_GetClockInputHz+0xa4>)
1a000e06:	e024      	b.n	1a000e52 <Chip_Clock_GetClockInputHz+0x96>
			rate = 50000000; /* RMII uses 50 MHz */
		}
		break;

	case CLKIN_CLKIN:
		rate = ExtRateIn;
1a000e08:	4b16      	ldr	r3, [pc, #88]	; (1a000e64 <Chip_Clock_GetClockInputHz+0xa8>)
1a000e0a:	6818      	ldr	r0, [r3, #0]
		break;
1a000e0c:	e021      	b.n	1a000e52 <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_CRYSTAL:
		rate = OscRateIn;
1a000e0e:	4b16      	ldr	r3, [pc, #88]	; (1a000e68 <Chip_Clock_GetClockInputHz+0xac>)
1a000e10:	6818      	ldr	r0, [r3, #0]
		break;
1a000e12:	e01e      	b.n	1a000e52 <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_USBPLL:
		rate = audio_usb_pll_freq[CGU_USB_PLL];
1a000e14:	4b15      	ldr	r3, [pc, #84]	; (1a000e6c <Chip_Clock_GetClockInputHz+0xb0>)
1a000e16:	6818      	ldr	r0, [r3, #0]
		break;
1a000e18:	e01b      	b.n	1a000e52 <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_AUDIOPLL:
		rate = audio_usb_pll_freq[CGU_AUDIO_PLL];
1a000e1a:	4b14      	ldr	r3, [pc, #80]	; (1a000e6c <Chip_Clock_GetClockInputHz+0xb0>)
1a000e1c:	6858      	ldr	r0, [r3, #4]
		break;
1a000e1e:	e018      	b.n	1a000e52 <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_MAINPLL:
		rate = Chip_Clock_GetMainPLLHz();
1a000e20:	f000 f868 	bl	1a000ef4 <Chip_Clock_GetMainPLLHz>
		break;
1a000e24:	e015      	b.n	1a000e52 <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_IDIVA:
		rate = Chip_Clock_GetDivRate(input, CLK_IDIV_A);
1a000e26:	2100      	movs	r1, #0
1a000e28:	f000 f89a 	bl	1a000f60 <Chip_Clock_GetDivRate>
		break;
1a000e2c:	e011      	b.n	1a000e52 <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_IDIVB:
		rate = Chip_Clock_GetDivRate(input, CLK_IDIV_B);
1a000e2e:	2101      	movs	r1, #1
1a000e30:	f000 f896 	bl	1a000f60 <Chip_Clock_GetDivRate>
		break;
1a000e34:	e00d      	b.n	1a000e52 <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_IDIVC:
		rate = Chip_Clock_GetDivRate(input, CLK_IDIV_C);
1a000e36:	2102      	movs	r1, #2
1a000e38:	f000 f892 	bl	1a000f60 <Chip_Clock_GetDivRate>
		break;
1a000e3c:	e009      	b.n	1a000e52 <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_IDIVD:
		rate = Chip_Clock_GetDivRate(input, CLK_IDIV_D);
1a000e3e:	2103      	movs	r1, #3
1a000e40:	f000 f88e 	bl	1a000f60 <Chip_Clock_GetDivRate>
		break;
1a000e44:	e005      	b.n	1a000e52 <Chip_Clock_GetClockInputHz+0x96>

	case CLKIN_IDIVE:
		rate = Chip_Clock_GetDivRate(input, CLK_IDIV_E);
1a000e46:	2104      	movs	r1, #4
1a000e48:	f000 f88a 	bl	1a000f60 <Chip_Clock_GetDivRate>
		break;
1a000e4c:	e001      	b.n	1a000e52 <Chip_Clock_GetClockInputHz+0x96>
		rate = CRYSTAL_32K_FREQ_IN;
1a000e4e:	f44f 4000 	mov.w	r0, #32768	; 0x8000
	default:
		break;
	}

	return rate;
}
1a000e52:	bd08      	pop	{r3, pc}
			rate = 50000000; /* RMII uses 50 MHz */
1a000e54:	4806      	ldr	r0, [pc, #24]	; (1a000e70 <Chip_Clock_GetClockInputHz+0xb4>)
	return rate;
1a000e56:	e7fc      	b.n	1a000e52 <Chip_Clock_GetClockInputHz+0x96>
1a000e58:	00b71b00 	.word	0x00b71b00
1a000e5c:	40043000 	.word	0x40043000
1a000e60:	017d7840 	.word	0x017d7840
1a000e64:	1a0066d8 	.word	0x1a0066d8
1a000e68:	1a006704 	.word	0x1a006704
1a000e6c:	100009fc 	.word	0x100009fc
1a000e70:	02faf080 	.word	0x02faf080

1a000e74 <Chip_Clock_CalcMainPLLValue>:
{
1a000e74:	b538      	push	{r3, r4, r5, lr}
1a000e76:	4605      	mov	r5, r0
1a000e78:	460c      	mov	r4, r1
	ppll->fin = Chip_Clock_GetClockInputHz(ppll->srcin);
1a000e7a:	7908      	ldrb	r0, [r1, #4]
1a000e7c:	f7ff ff9e 	bl	1a000dbc <Chip_Clock_GetClockInputHz>
1a000e80:	6160      	str	r0, [r4, #20]
	if (freq > MAX_CLOCK_FREQ || freq < (PLL_MIN_CCO_FREQ / 16) || !ppll->fin) {
1a000e82:	4b19      	ldr	r3, [pc, #100]	; (1a000ee8 <Chip_Clock_CalcMainPLLValue+0x74>)
1a000e84:	442b      	add	r3, r5
1a000e86:	4a19      	ldr	r2, [pc, #100]	; (1a000eec <Chip_Clock_CalcMainPLLValue+0x78>)
1a000e88:	4293      	cmp	r3, r2
1a000e8a:	d821      	bhi.n	1a000ed0 <Chip_Clock_CalcMainPLLValue+0x5c>
1a000e8c:	b318      	cbz	r0, 1a000ed6 <Chip_Clock_CalcMainPLLValue+0x62>
	ppll->ctrl = 1 << 7; /* Enable direct mode [If possible] */
1a000e8e:	2380      	movs	r3, #128	; 0x80
1a000e90:	6023      	str	r3, [r4, #0]
	ppll->nsel = 0;
1a000e92:	2300      	movs	r3, #0
1a000e94:	60a3      	str	r3, [r4, #8]
	ppll->psel = 0;
1a000e96:	60e3      	str	r3, [r4, #12]
	ppll->msel = freq / ppll->fin;
1a000e98:	fbb5 f3f0 	udiv	r3, r5, r0
1a000e9c:	6123      	str	r3, [r4, #16]
	if (freq < PLL_MIN_CCO_FREQ || ppll->msel * ppll->fin != freq) {
1a000e9e:	4a14      	ldr	r2, [pc, #80]	; (1a000ef0 <Chip_Clock_CalcMainPLLValue+0x7c>)
1a000ea0:	4295      	cmp	r5, r2
1a000ea2:	d903      	bls.n	1a000eac <Chip_Clock_CalcMainPLLValue+0x38>
1a000ea4:	fb03 f000 	mul.w	r0, r3, r0
1a000ea8:	42a8      	cmp	r0, r5
1a000eaa:	d007      	beq.n	1a000ebc <Chip_Clock_CalcMainPLLValue+0x48>
		pll_get_frac(freq, ppll);
1a000eac:	4621      	mov	r1, r4
1a000eae:	4628      	mov	r0, r5
1a000eb0:	f7ff fe96 	bl	1a000be0 <pll_get_frac>
		if (!ppll->nsel) {
1a000eb4:	68a3      	ldr	r3, [r4, #8]
1a000eb6:	b18b      	cbz	r3, 1a000edc <Chip_Clock_CalcMainPLLValue+0x68>
		ppll->nsel --;
1a000eb8:	3b01      	subs	r3, #1
1a000eba:	60a3      	str	r3, [r4, #8]
	if (ppll->msel == 0) {
1a000ebc:	6923      	ldr	r3, [r4, #16]
1a000ebe:	b183      	cbz	r3, 1a000ee2 <Chip_Clock_CalcMainPLLValue+0x6e>
	if (ppll->psel) {
1a000ec0:	68e2      	ldr	r2, [r4, #12]
1a000ec2:	b10a      	cbz	r2, 1a000ec8 <Chip_Clock_CalcMainPLLValue+0x54>
		ppll->psel --;
1a000ec4:	3a01      	subs	r2, #1
1a000ec6:	60e2      	str	r2, [r4, #12]
	ppll->msel --;
1a000ec8:	3b01      	subs	r3, #1
1a000eca:	6123      	str	r3, [r4, #16]
	return 0;
1a000ecc:	2000      	movs	r0, #0
}
1a000ece:	bd38      	pop	{r3, r4, r5, pc}
		return -1;
1a000ed0:	f04f 30ff 	mov.w	r0, #4294967295
1a000ed4:	e7fb      	b.n	1a000ece <Chip_Clock_CalcMainPLLValue+0x5a>
1a000ed6:	f04f 30ff 	mov.w	r0, #4294967295
1a000eda:	e7f8      	b.n	1a000ece <Chip_Clock_CalcMainPLLValue+0x5a>
			return -1;
1a000edc:	f04f 30ff 	mov.w	r0, #4294967295
1a000ee0:	e7f5      	b.n	1a000ece <Chip_Clock_CalcMainPLLValue+0x5a>
		return - 1;
1a000ee2:	f04f 30ff 	mov.w	r0, #4294967295
1a000ee6:	e7f2      	b.n	1a000ece <Chip_Clock_CalcMainPLLValue+0x5a>
1a000ee8:	ff6b3a10 	.word	0xff6b3a10
1a000eec:	0b940510 	.word	0x0b940510
1a000ef0:	094c5eff 	.word	0x094c5eff

1a000ef4 <Chip_Clock_GetMainPLLHz>:
{
1a000ef4:	b530      	push	{r4, r5, lr}
1a000ef6:	b083      	sub	sp, #12
	uint32_t PLLReg = LPC_CGU->PLL1_CTRL;
1a000ef8:	4d17      	ldr	r5, [pc, #92]	; (1a000f58 <Chip_Clock_GetMainPLLHz+0x64>)
1a000efa:	6c6c      	ldr	r4, [r5, #68]	; 0x44
	uint32_t freq = Chip_Clock_GetClockInputHz((CHIP_CGU_CLKIN_T) ((PLLReg >> 24) & 0xF));
1a000efc:	f3c4 6003 	ubfx	r0, r4, #24, #4
1a000f00:	f7ff ff5c 	bl	1a000dbc <Chip_Clock_GetClockInputHz>
	const uint8_t ptab[] = {1, 2, 4, 8};
1a000f04:	4b15      	ldr	r3, [pc, #84]	; (1a000f5c <Chip_Clock_GetMainPLLHz+0x68>)
1a000f06:	681b      	ldr	r3, [r3, #0]
1a000f08:	9301      	str	r3, [sp, #4]
	if (!(LPC_CGU->PLL1_STAT & 1)) {
1a000f0a:	6c2b      	ldr	r3, [r5, #64]	; 0x40
1a000f0c:	f013 0f01 	tst.w	r3, #1
1a000f10:	d020      	beq.n	1a000f54 <Chip_Clock_GetMainPLLHz+0x60>
	msel = (PLLReg >> 16) & 0xFF;
1a000f12:	f3c4 4307 	ubfx	r3, r4, #16, #8
	nsel = (PLLReg >> 12) & 0x3;
1a000f16:	f3c4 3201 	ubfx	r2, r4, #12, #2
	psel = (PLLReg >> 8) & 0x3;
1a000f1a:	f3c4 2101 	ubfx	r1, r4, #8, #2
	fbsel = (PLLReg >> 6) & 0x1;
1a000f1e:	f3c4 1580 	ubfx	r5, r4, #6, #1
	m = msel + 1;
1a000f22:	3301      	adds	r3, #1
	n = nsel + 1;
1a000f24:	3201      	adds	r2, #1
	p = ptab[psel];
1a000f26:	f10d 0c08 	add.w	ip, sp, #8
1a000f2a:	4461      	add	r1, ip
1a000f2c:	f811 1c04 	ldrb.w	r1, [r1, #-4]
	if (direct || fbsel) {
1a000f30:	f014 0f80 	tst.w	r4, #128	; 0x80
1a000f34:	d108      	bne.n	1a000f48 <Chip_Clock_GetMainPLLHz+0x54>
1a000f36:	b93d      	cbnz	r5, 1a000f48 <Chip_Clock_GetMainPLLHz+0x54>
	return (m / (2 * p)) * (freq / n);
1a000f38:	0049      	lsls	r1, r1, #1
1a000f3a:	fbb3 f3f1 	udiv	r3, r3, r1
1a000f3e:	fbb0 f0f2 	udiv	r0, r0, r2
1a000f42:	fb00 f003 	mul.w	r0, r0, r3
1a000f46:	e003      	b.n	1a000f50 <Chip_Clock_GetMainPLLHz+0x5c>
		return m * (freq / n);
1a000f48:	fbb0 f0f2 	udiv	r0, r0, r2
1a000f4c:	fb03 f000 	mul.w	r0, r3, r0
}
1a000f50:	b003      	add	sp, #12
1a000f52:	bd30      	pop	{r4, r5, pc}
		return 0;
1a000f54:	2000      	movs	r0, #0
1a000f56:	e7fb      	b.n	1a000f50 <Chip_Clock_GetMainPLLHz+0x5c>
1a000f58:	40050000 	.word	0x40050000
1a000f5c:	1a006750 	.word	0x1a006750

1a000f60 <Chip_Clock_GetDivRate>:
{
1a000f60:	b538      	push	{r3, r4, r5, lr}
1a000f62:	460c      	mov	r4, r1
	input = Chip_Clock_GetDividerSource(divider);
1a000f64:	4608      	mov	r0, r1
1a000f66:	f7ff ff0d 	bl	1a000d84 <Chip_Clock_GetDividerSource>
1a000f6a:	4605      	mov	r5, r0
	div = Chip_Clock_GetDividerDivisor(divider);
1a000f6c:	4620      	mov	r0, r4
1a000f6e:	f7ff ff17 	bl	1a000da0 <Chip_Clock_GetDividerDivisor>
1a000f72:	4604      	mov	r4, r0
	return Chip_Clock_GetClockInputHz(input) / (div + 1);
1a000f74:	4628      	mov	r0, r5
1a000f76:	f7ff ff21 	bl	1a000dbc <Chip_Clock_GetClockInputHz>
1a000f7a:	3401      	adds	r4, #1
}
1a000f7c:	fbb0 f0f4 	udiv	r0, r0, r4
1a000f80:	bd38      	pop	{r3, r4, r5, pc}
1a000f82:	Address 0x1a000f82 is out of bounds.


1a000f84 <Chip_Clock_SetBaseClock>:
	return Chip_Clock_GetClockInputHz(Chip_Clock_GetBaseClock(clock));
}

/* Sets a CGU Base Clock clock source */
void Chip_Clock_SetBaseClock(CHIP_CGU_BASE_CLK_T BaseClock, CHIP_CGU_CLKIN_T Input, bool autoblocken, bool powerdn)
{
1a000f84:	b430      	push	{r4, r5}
	uint32_t reg = LPC_CGU->BASE_CLK[BaseClock];
1a000f86:	f100 0416 	add.w	r4, r0, #22
1a000f8a:	00a4      	lsls	r4, r4, #2
1a000f8c:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
1a000f90:	f504 24a0 	add.w	r4, r4, #327680	; 0x50000
1a000f94:	6864      	ldr	r4, [r4, #4]

	if (BaseClock < CLK_BASE_NONE) {
1a000f96:	281b      	cmp	r0, #27
1a000f98:	d813      	bhi.n	1a000fc2 <Chip_Clock_SetBaseClock+0x3e>
		if (Input != CLKINPUT_PD) {
1a000f9a:	2911      	cmp	r1, #17
1a000f9c:	d01a      	beq.n	1a000fd4 <Chip_Clock_SetBaseClock+0x50>
			/* Mask off fields we plan to update */
			reg &= ~((0x1F << 24) | 1 | (1 << 11));
1a000f9e:	4d0e      	ldr	r5, [pc, #56]	; (1a000fd8 <Chip_Clock_SetBaseClock+0x54>)
1a000fa0:	4025      	ands	r5, r4

			if (autoblocken) {
1a000fa2:	b10a      	cbz	r2, 1a000fa8 <Chip_Clock_SetBaseClock+0x24>
				reg |= (1 << 11);
1a000fa4:	f445 6500 	orr.w	r5, r5, #2048	; 0x800
			}
			if (powerdn) {
1a000fa8:	b10b      	cbz	r3, 1a000fae <Chip_Clock_SetBaseClock+0x2a>
				reg |= (1 << 0);
1a000faa:	f045 0501 	orr.w	r5, r5, #1
			}

			/* Set clock source */
			reg |= (Input << 24);
1a000fae:	ea45 6501 	orr.w	r5, r5, r1, lsl #24

			LPC_CGU->BASE_CLK[BaseClock] = reg;
1a000fb2:	3016      	adds	r0, #22
1a000fb4:	0080      	lsls	r0, r0, #2
1a000fb6:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
1a000fba:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
1a000fbe:	6045      	str	r5, [r0, #4]
1a000fc0:	e008      	b.n	1a000fd4 <Chip_Clock_SetBaseClock+0x50>
		}
	}
	else {
		LPC_CGU->BASE_CLK[BaseClock] = reg | 1;	/* Power down this base clock */
1a000fc2:	f044 0401 	orr.w	r4, r4, #1
1a000fc6:	3016      	adds	r0, #22
1a000fc8:	0080      	lsls	r0, r0, #2
1a000fca:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
1a000fce:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
1a000fd2:	6044      	str	r4, [r0, #4]
	}
}
1a000fd4:	bc30      	pop	{r4, r5}
1a000fd6:	4770      	bx	lr
1a000fd8:	e0fff7fe 	.word	0xe0fff7fe

1a000fdc <Chip_Clock_GetBaseClock>:
/* Gets a CGU Base Clock clock source */
CHIP_CGU_CLKIN_T Chip_Clock_GetBaseClock(CHIP_CGU_BASE_CLK_T BaseClock)
{
	uint32_t reg;

	if (BaseClock >= CLK_BASE_NONE) {
1a000fdc:	281b      	cmp	r0, #27
1a000fde:	d80c      	bhi.n	1a000ffa <Chip_Clock_GetBaseClock+0x1e>
		return CLKINPUT_PD;
	}

	reg = LPC_CGU->BASE_CLK[BaseClock];
1a000fe0:	3016      	adds	r0, #22
1a000fe2:	0080      	lsls	r0, r0, #2
1a000fe4:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
1a000fe8:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
1a000fec:	6840      	ldr	r0, [r0, #4]

	/* base clock is powered down? */
	if (reg & 1) {
1a000fee:	f010 0f01 	tst.w	r0, #1
1a000ff2:	d104      	bne.n	1a000ffe <Chip_Clock_GetBaseClock+0x22>
		return CLKINPUT_PD;
	}

	return (CHIP_CGU_CLKIN_T) ((reg >> 24) & 0x1F);
1a000ff4:	f3c0 6004 	ubfx	r0, r0, #24, #5
1a000ff8:	4770      	bx	lr
		return CLKINPUT_PD;
1a000ffa:	2011      	movs	r0, #17
1a000ffc:	4770      	bx	lr
		return CLKINPUT_PD;
1a000ffe:	2011      	movs	r0, #17
}
1a001000:	4770      	bx	lr

1a001002 <Chip_Clock_GetBaseClocktHz>:
{
1a001002:	b508      	push	{r3, lr}
	return Chip_Clock_GetClockInputHz(Chip_Clock_GetBaseClock(clock));
1a001004:	f7ff ffea 	bl	1a000fdc <Chip_Clock_GetBaseClock>
1a001008:	f7ff fed8 	bl	1a000dbc <Chip_Clock_GetClockInputHz>
}
1a00100c:	bd08      	pop	{r3, pc}
1a00100e:	Address 0x1a00100e is out of bounds.


1a001010 <Chip_Clock_EnableOpts>:
/* Enables a peripheral clock and sets clock states */
void Chip_Clock_EnableOpts(CHIP_CCU_CLK_T clk, bool autoen, bool wakeupen, int div)
{
	uint32_t reg = 1;

	if (autoen) {
1a001010:	b971      	cbnz	r1, 1a001030 <Chip_Clock_EnableOpts+0x20>
	uint32_t reg = 1;
1a001012:	2101      	movs	r1, #1
		reg |= (1 << 1);
	}
	if (wakeupen) {
1a001014:	b10a      	cbz	r2, 1a00101a <Chip_Clock_EnableOpts+0xa>
		reg |= (1 << 2);
1a001016:	f041 0104 	orr.w	r1, r1, #4
	}

	/* Not all clocks support a divider, but we won't check that here. Only
	   dividers of 1 and 2 are allowed. Assume 1 if not 2 */
	if (div == 2) {
1a00101a:	2b02      	cmp	r3, #2
1a00101c:	d00a      	beq.n	1a001034 <Chip_Clock_EnableOpts+0x24>
		reg |= (1 << 5);
	}

	/* Setup peripheral clock and start running */
	if (clk >= CLK_CCU2_START) {
1a00101e:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a001022:	d30a      	bcc.n	1a00103a <Chip_Clock_EnableOpts+0x2a>
		LPC_CCU2->CLKCCU[clk - CLK_CCU2_START].CFG = reg;
1a001024:	f5a0 7091 	sub.w	r0, r0, #290	; 0x122
1a001028:	4b06      	ldr	r3, [pc, #24]	; (1a001044 <Chip_Clock_EnableOpts+0x34>)
1a00102a:	f843 1030 	str.w	r1, [r3, r0, lsl #3]
1a00102e:	4770      	bx	lr
		reg |= (1 << 1);
1a001030:	2103      	movs	r1, #3
1a001032:	e7ef      	b.n	1a001014 <Chip_Clock_EnableOpts+0x4>
		reg |= (1 << 5);
1a001034:	f041 0120 	orr.w	r1, r1, #32
1a001038:	e7f1      	b.n	1a00101e <Chip_Clock_EnableOpts+0xe>
	}
	else {
		LPC_CCU1->CLKCCU[clk].CFG = reg;
1a00103a:	3020      	adds	r0, #32
1a00103c:	4b02      	ldr	r3, [pc, #8]	; (1a001048 <Chip_Clock_EnableOpts+0x38>)
1a00103e:	f843 1030 	str.w	r1, [r3, r0, lsl #3]
	}
}
1a001042:	4770      	bx	lr
1a001044:	40052000 	.word	0x40052000
1a001048:	40051000 	.word	0x40051000

1a00104c <Chip_Clock_Enable>:

/* Enables a peripheral clock */
void Chip_Clock_Enable(CHIP_CCU_CLK_T clk)
{
	/* Start peripheral clock running */
	if (clk >= CLK_CCU2_START) {
1a00104c:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a001050:	d309      	bcc.n	1a001066 <Chip_Clock_Enable+0x1a>
		LPC_CCU2->CLKCCU[clk - CLK_CCU2_START].CFG |= 1;
1a001052:	4a09      	ldr	r2, [pc, #36]	; (1a001078 <Chip_Clock_Enable+0x2c>)
1a001054:	f5a0 7091 	sub.w	r0, r0, #290	; 0x122
1a001058:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
1a00105c:	f043 0301 	orr.w	r3, r3, #1
1a001060:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
1a001064:	4770      	bx	lr
	}
	else {
		LPC_CCU1->CLKCCU[clk].CFG |= 1;
1a001066:	4a05      	ldr	r2, [pc, #20]	; (1a00107c <Chip_Clock_Enable+0x30>)
1a001068:	3020      	adds	r0, #32
1a00106a:	f852 3030 	ldr.w	r3, [r2, r0, lsl #3]
1a00106e:	f043 0301 	orr.w	r3, r3, #1
1a001072:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
	}
}
1a001076:	4770      	bx	lr
1a001078:	40052000 	.word	0x40052000
1a00107c:	40051000 	.word	0x40051000

1a001080 <Chip_Clock_GetRate>:
	LPC_CCU2->PM = 0;
}

/* Returns a peripheral clock rate */
uint32_t Chip_Clock_GetRate(CHIP_CCU_CLK_T clk)
{
1a001080:	b510      	push	{r4, lr}
	CHIP_CGU_BASE_CLK_T baseclk;
	uint32_t reg, div, rate;

	/* Get CCU config register for clock */
	if (clk >= CLK_CCU2_START) {
1a001082:	f5b0 7fa1 	cmp.w	r0, #322	; 0x142
1a001086:	d309      	bcc.n	1a00109c <Chip_Clock_GetRate+0x1c>
		reg = LPC_CCU2->CLKCCU[clk - CLK_CCU2_START].CFG;
1a001088:	f5a0 7391 	sub.w	r3, r0, #290	; 0x122
1a00108c:	4a0d      	ldr	r2, [pc, #52]	; (1a0010c4 <Chip_Clock_GetRate+0x44>)
1a00108e:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
	else {
		reg = LPC_CCU1->CLKCCU[clk].CFG;
	}

	/* Is the clock enabled? */
	if (reg & 1) {
1a001092:	f014 0f01 	tst.w	r4, #1
1a001096:	d107      	bne.n	1a0010a8 <Chip_Clock_GetRate+0x28>

		}
		rate = rate / div;
	}
	else {
		rate = 0;
1a001098:	2000      	movs	r0, #0
	}

	return rate;
}
1a00109a:	bd10      	pop	{r4, pc}
		reg = LPC_CCU1->CLKCCU[clk].CFG;
1a00109c:	f100 0320 	add.w	r3, r0, #32
1a0010a0:	4a09      	ldr	r2, [pc, #36]	; (1a0010c8 <Chip_Clock_GetRate+0x48>)
1a0010a2:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
1a0010a6:	e7f4      	b.n	1a001092 <Chip_Clock_GetRate+0x12>
		baseclk = Chip_Clock_FindBaseClock(clk);
1a0010a8:	f7ff fe20 	bl	1a000cec <Chip_Clock_FindBaseClock>
		rate = Chip_Clock_GetBaseClocktHz(baseclk);
1a0010ac:	f7ff ffa9 	bl	1a001002 <Chip_Clock_GetBaseClocktHz>
		if (((reg >> 5) & 0x7) == 0) {
1a0010b0:	f014 0fe0 	tst.w	r4, #224	; 0xe0
1a0010b4:	d103      	bne.n	1a0010be <Chip_Clock_GetRate+0x3e>
			div = 1;
1a0010b6:	2301      	movs	r3, #1
		rate = rate / div;
1a0010b8:	fbb0 f0f3 	udiv	r0, r0, r3
1a0010bc:	e7ed      	b.n	1a00109a <Chip_Clock_GetRate+0x1a>
			div = 2;/* No other dividers supported */
1a0010be:	2302      	movs	r3, #2
1a0010c0:	e7fa      	b.n	1a0010b8 <Chip_Clock_GetRate+0x38>
1a0010c2:	bf00      	nop
1a0010c4:	40052000 	.word	0x40052000
1a0010c8:	40051000 	.word	0x40051000

1a0010cc <Chip_UART_GetIndex>:

/* Returns clock index for the peripheral block */
static int Chip_UART_GetIndex(LPC_USART_T *pUART)
{
	uint32_t base = (uint32_t) pUART;
	switch(base) {
1a0010cc:	4b09      	ldr	r3, [pc, #36]	; (1a0010f4 <Chip_UART_GetIndex+0x28>)
1a0010ce:	4298      	cmp	r0, r3
1a0010d0:	d009      	beq.n	1a0010e6 <Chip_UART_GetIndex+0x1a>
1a0010d2:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
1a0010d6:	4298      	cmp	r0, r3
1a0010d8:	d007      	beq.n	1a0010ea <Chip_UART_GetIndex+0x1e>
1a0010da:	f5a3 2380 	sub.w	r3, r3, #262144	; 0x40000
1a0010de:	4298      	cmp	r0, r3
1a0010e0:	d005      	beq.n	1a0010ee <Chip_UART_GetIndex+0x22>
		case LPC_USART0_BASE:
			return 0;
1a0010e2:	2000      	movs	r0, #0
1a0010e4:	4770      	bx	lr
		case LPC_UART1_BASE:
			return 1;
		case LPC_USART2_BASE:
			return 2;
1a0010e6:	2002      	movs	r0, #2
1a0010e8:	4770      	bx	lr
		case LPC_USART3_BASE:
			return 3;
1a0010ea:	2003      	movs	r0, #3
1a0010ec:	4770      	bx	lr
			return 1;
1a0010ee:	2001      	movs	r0, #1
		default:
			return 0; /* Should never come here */
	}
}
1a0010f0:	4770      	bx	lr
1a0010f2:	bf00      	nop
1a0010f4:	400c1000 	.word	0x400c1000

1a0010f8 <Chip_UART_Init>:
 * Public functions
 ****************************************************************************/

/* Initializes the pUART peripheral */
void Chip_UART_Init(LPC_USART_T *pUART)
{
1a0010f8:	b530      	push	{r4, r5, lr}
1a0010fa:	b083      	sub	sp, #12
1a0010fc:	4604      	mov	r4, r0
    volatile uint32_t tmp;

	/* Enable UART clocking. UART base clock(s) must already be enabled */
	Chip_Clock_EnableOpts(UART_PClock[Chip_UART_GetIndex(pUART)], true, true, 1);
1a0010fe:	f7ff ffe5 	bl	1a0010cc <Chip_UART_GetIndex>
1a001102:	2301      	movs	r3, #1
1a001104:	461a      	mov	r2, r3
1a001106:	4619      	mov	r1, r3
1a001108:	4d0e      	ldr	r5, [pc, #56]	; (1a001144 <Chip_UART_Init+0x4c>)
1a00110a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
1a00110e:	f7ff ff7f 	bl	1a001010 <Chip_Clock_EnableOpts>
	pUART->FCR = fcr;
1a001112:	2307      	movs	r3, #7
1a001114:	60a3      	str	r3, [r4, #8]
    pUART->TER2 = 0;
1a001116:	2300      	movs	r3, #0
1a001118:	65e3      	str	r3, [r4, #92]	; 0x5c

    /* Disable Tx */
    Chip_UART_TXDisable(pUART);

    /* Disable interrupts */
	pUART->IER = 0;
1a00111a:	6063      	str	r3, [r4, #4]
	/* Set LCR to default state */
	pUART->LCR = 0;
1a00111c:	60e3      	str	r3, [r4, #12]
	/* Set ACR to default state */
	pUART->ACR = 0;
1a00111e:	6223      	str	r3, [r4, #32]
    /* Set RS485 control to default state */
	pUART->RS485CTRL = 0;
1a001120:	64e3      	str	r3, [r4, #76]	; 0x4c
	/* Set RS485 delay timer to default state */
	pUART->RS485DLY = 0;
1a001122:	6563      	str	r3, [r4, #84]	; 0x54
	/* Set RS485 addr match to default state */
	pUART->RS485ADRMATCH = 0;
1a001124:	6523      	str	r3, [r4, #80]	; 0x50

    /* Clear MCR */
    if (pUART == LPC_UART1) {
1a001126:	4b08      	ldr	r3, [pc, #32]	; (1a001148 <Chip_UART_Init+0x50>)
1a001128:	429c      	cmp	r4, r3
1a00112a:	d006      	beq.n	1a00113a <Chip_UART_Init+0x42>
	pUART->LCR = config;
1a00112c:	2303      	movs	r3, #3
1a00112e:	60e3      	str	r3, [r4, #12]

	/* Default 8N1, with DLAB disabled */
	Chip_UART_ConfigData(pUART, (UART_LCR_WLEN8 | UART_LCR_SBS_1BIT | UART_LCR_PARITY_DIS));

	/* Disable fractional divider */
	pUART->FDR = 0x10;
1a001130:	2310      	movs	r3, #16
1a001132:	62a3      	str	r3, [r4, #40]	; 0x28

    (void) tmp;
1a001134:	9b01      	ldr	r3, [sp, #4]
}
1a001136:	b003      	add	sp, #12
1a001138:	bd30      	pop	{r4, r5, pc}
		pUART->MCR = 0;
1a00113a:	2300      	movs	r3, #0
1a00113c:	6123      	str	r3, [r4, #16]
		tmp = pUART->MSR;
1a00113e:	69a3      	ldr	r3, [r4, #24]
1a001140:	9301      	str	r3, [sp, #4]
1a001142:	e7f3      	b.n	1a00112c <Chip_UART_Init+0x34>
1a001144:	1a0067d0 	.word	0x1a0067d0
1a001148:	40082000 	.word	0x40082000

1a00114c <Chip_UART_SetBaudFDR>:
    Chip_UART_ABIntHandler(pUART);
}

/* Determines and sets best dividers to get a target baud rate */
uint32_t Chip_UART_SetBaudFDR(LPC_USART_T *pUART, uint32_t baud)
{
1a00114c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a001150:	b083      	sub	sp, #12
1a001152:	9001      	str	r0, [sp, #4]
1a001154:	4688      	mov	r8, r1
	uint32_t sdiv = 0, sm = 1, sd = 0;
	uint32_t pclk, m, d;
	uint32_t odiff = -1UL; /* old best diff */

	/* Get base clock for the corresponding UART */
	pclk = Chip_Clock_GetRate(UART_BClock[Chip_UART_GetIndex(pUART)]);
1a001156:	f7ff ffb9 	bl	1a0010cc <Chip_UART_GetIndex>
1a00115a:	4b32      	ldr	r3, [pc, #200]	; (1a001224 <Chip_UART_SetBaudFDR+0xd8>)
1a00115c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
1a001160:	f7ff ff8e 	bl	1a001080 <Chip_Clock_GetRate>
1a001164:	4606      	mov	r6, r0
	uint32_t odiff = -1UL; /* old best diff */
1a001166:	f04f 37ff 	mov.w	r7, #4294967295

	/* Loop through all possible fractional divider values */
	for (m = 1; odiff && m < 16; m++) {
1a00116a:	2401      	movs	r4, #1
	uint32_t sdiv = 0, sm = 1, sd = 0;
1a00116c:	f04f 0b00 	mov.w	fp, #0
1a001170:	46a2      	mov	sl, r4
1a001172:	46d9      	mov	r9, fp
	for (m = 1; odiff && m < 16; m++) {
1a001174:	e02a      	b.n	1a0011cc <Chip_UART_SetBaudFDR+0x80>
			/* Upper 32-bit of dval has div */
			div = (uint32_t) (dval >> 32);

			/* Closer to next div */
			if ((int)diff < 0) {
				diff = -diff;
1a001176:	4242      	negs	r2, r0
				div ++;
1a001178:	1c4b      	adds	r3, r1, #1
1a00117a:	e017      	b.n	1a0011ac <Chip_UART_SetBaudFDR+0x60>
			sd = d;
			sm = m;
			odiff = diff;

			/* On perfect match, break loop */
			if(!diff) {
1a00117c:	b30a      	cbz	r2, 1a0011c2 <Chip_UART_SetBaudFDR+0x76>
			odiff = diff;
1a00117e:	4617      	mov	r7, r2
			sd = d;
1a001180:	46ab      	mov	fp, r5
			sm = m;
1a001182:	46a2      	mov	sl, r4
			sdiv = div;
1a001184:	4699      	mov	r9, r3
		for (d = 0; d < m; d++) {
1a001186:	3501      	adds	r5, #1
1a001188:	42ac      	cmp	r4, r5
1a00118a:	d91e      	bls.n	1a0011ca <Chip_UART_SetBaudFDR+0x7e>
			uint64_t dval = (((uint64_t) pclk << 28) * m) / (baud * (m + d));
1a00118c:	0933      	lsrs	r3, r6, #4
1a00118e:	0730      	lsls	r0, r6, #28
1a001190:	fba4 0100 	umull	r0, r1, r4, r0
1a001194:	fb04 1103 	mla	r1, r4, r3, r1
1a001198:	1962      	adds	r2, r4, r5
1a00119a:	fb08 f202 	mul.w	r2, r8, r2
1a00119e:	2300      	movs	r3, #0
1a0011a0:	f000 ff80 	bl	1a0020a4 <__aeabi_uldivmod>
			diff = (uint32_t) dval;
1a0011a4:	4602      	mov	r2, r0
			div = (uint32_t) (dval >> 32);
1a0011a6:	460b      	mov	r3, r1
			if ((int)diff < 0) {
1a0011a8:	2800      	cmp	r0, #0
1a0011aa:	dbe4      	blt.n	1a001176 <Chip_UART_SetBaudFDR+0x2a>
			if (odiff < diff || !div || (div >> 16) || (div < 3 && d)) {
1a0011ac:	4297      	cmp	r7, r2
1a0011ae:	d3ea      	bcc.n	1a001186 <Chip_UART_SetBaudFDR+0x3a>
1a0011b0:	2b00      	cmp	r3, #0
1a0011b2:	d0e8      	beq.n	1a001186 <Chip_UART_SetBaudFDR+0x3a>
1a0011b4:	0c19      	lsrs	r1, r3, #16
1a0011b6:	d1e6      	bne.n	1a001186 <Chip_UART_SetBaudFDR+0x3a>
1a0011b8:	2b02      	cmp	r3, #2
1a0011ba:	d8df      	bhi.n	1a00117c <Chip_UART_SetBaudFDR+0x30>
1a0011bc:	2d00      	cmp	r5, #0
1a0011be:	d0dd      	beq.n	1a00117c <Chip_UART_SetBaudFDR+0x30>
1a0011c0:	e7e1      	b.n	1a001186 <Chip_UART_SetBaudFDR+0x3a>
			odiff = diff;
1a0011c2:	4617      	mov	r7, r2
			sd = d;
1a0011c4:	46ab      	mov	fp, r5
			sm = m;
1a0011c6:	46a2      	mov	sl, r4
			sdiv = div;
1a0011c8:	4699      	mov	r9, r3
	for (m = 1; odiff && m < 16; m++) {
1a0011ca:	3401      	adds	r4, #1
1a0011cc:	b11f      	cbz	r7, 1a0011d6 <Chip_UART_SetBaudFDR+0x8a>
1a0011ce:	2c0f      	cmp	r4, #15
1a0011d0:	d801      	bhi.n	1a0011d6 <Chip_UART_SetBaudFDR+0x8a>
		for (d = 0; d < m; d++) {
1a0011d2:	2500      	movs	r5, #0
1a0011d4:	e7d8      	b.n	1a001188 <Chip_UART_SetBaudFDR+0x3c>
			}
		}
	}

	/* Return 0 if a vaild divisor is not possible */
	if (!sdiv) {
1a0011d6:	f1b9 0f00 	cmp.w	r9, #0
1a0011da:	d01e      	beq.n	1a00121a <Chip_UART_SetBaudFDR+0xce>
 * @param	pUART	: Pointer to selected UART peripheral
 * @return	Nothing
 */
STATIC INLINE void Chip_UART_EnableDivisorAccess(LPC_USART_T *pUART)
{
	pUART->LCR |= UART_LCR_DLAB_EN;
1a0011dc:	9a01      	ldr	r2, [sp, #4]
1a0011de:	4611      	mov	r1, r2
1a0011e0:	68d3      	ldr	r3, [r2, #12]
1a0011e2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a0011e6:	60d3      	str	r3, [r2, #12]
 *			order to access the USART Divisor Latches. This function
 *			doesn't alter the DLAB state.
 */
STATIC INLINE void Chip_UART_SetDivisorLatches(LPC_USART_T *pUART, uint8_t dll, uint8_t dlm)
{
	pUART->DLL = (uint32_t) dll;
1a0011e8:	fa5f f389 	uxtb.w	r3, r9
1a0011ec:	6013      	str	r3, [r2, #0]
	pUART->DLM = (uint32_t) dlm;
1a0011ee:	f3c9 2307 	ubfx	r3, r9, #8, #8
1a0011f2:	6053      	str	r3, [r2, #4]
	pUART->LCR &= ~UART_LCR_DLAB_EN;
1a0011f4:	68d3      	ldr	r3, [r2, #12]
1a0011f6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
1a0011fa:	60d3      	str	r3, [r2, #12]
	Chip_UART_EnableDivisorAccess(pUART);
	Chip_UART_SetDivisorLatches(pUART, UART_LOAD_DLL(sdiv), UART_LOAD_DLM(sdiv));
	Chip_UART_DisableDivisorAccess(pUART);

	/* Set best fractional divider */
	pUART->FDR = (UART_FDR_MULVAL(sm) | UART_FDR_DIVADDVAL(sd));
1a0011fc:	ea4f 130a 	mov.w	r3, sl, lsl #4
1a001200:	b2db      	uxtb	r3, r3
1a001202:	f00b 020f 	and.w	r2, fp, #15
1a001206:	4313      	orrs	r3, r2
1a001208:	628b      	str	r3, [r1, #40]	; 0x28

	/* Return actual baud rate */
	return (pclk >> 4) * sm / (sdiv * (sm + sd));
1a00120a:	0933      	lsrs	r3, r6, #4
1a00120c:	fb0a f303 	mul.w	r3, sl, r3
1a001210:	44da      	add	sl, fp
1a001212:	fb09 f90a 	mul.w	r9, r9, sl
1a001216:	fbb3 f9f9 	udiv	r9, r3, r9
}
1a00121a:	4648      	mov	r0, r9
1a00121c:	b003      	add	sp, #12
1a00121e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a001222:	bf00      	nop
1a001224:	1a0067c8 	.word	0x1a0067c8

1a001228 <SystemInit>:
 */

#include <board.h>

void SystemInit(void)
{
1a001228:	b508      	push	{r3, lr}
   // to use CMSIS.
   volatile unsigned int *pCREG_M0APPMAP = (volatile unsigned int *) 0x40043404;
   // CMSIS : CREG->M0APPMAP = <address of vector table>
   *pCREG_M0APPMAP = (unsigned int)g_pfnVectors;
#else
   SCB->VTOR = (unsigned int) &g_pfnVectors;
1a00122a:	4a0b      	ldr	r2, [pc, #44]	; (1a001258 <SystemInit+0x30>)
1a00122c:	4b0b      	ldr	r3, [pc, #44]	; (1a00125c <SystemInit+0x34>)
1a00122e:	609a      	str	r2, [r3, #8]
 */
__STATIC_INLINE uint32_t SCB_GetFPUType(void)
{
  uint32_t mvfr0;

  mvfr0 = FPU->MVFR0;
1a001230:	f503 730c 	add.w	r3, r3, #560	; 0x230
1a001234:	691b      	ldr	r3, [r3, #16]
  if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
1a001236:	f403 637f 	and.w	r3, r3, #4080	; 0xff0
1a00123a:	2b20      	cmp	r3, #32
1a00123c:	d004      	beq.n	1a001248 <SystemInit+0x20>

   if (SCB_GetFPUType() > 0)
      SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */

   /* Board specific SystemInit only in M4 */
   Board_SystemInit();
1a00123e:	f7ff f9ef 	bl	1a000620 <Board_SystemInit>
   Board_Init();
1a001242:	f7ff faad 	bl	1a0007a0 <Board_Init>
#endif
}
1a001246:	bd08      	pop	{r3, pc}
      SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
1a001248:	4a04      	ldr	r2, [pc, #16]	; (1a00125c <SystemInit+0x34>)
1a00124a:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
1a00124e:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
1a001252:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
1a001256:	e7f2      	b.n	1a00123e <SystemInit+0x16>
1a001258:	1a000000 	.word	0x1a000000
1a00125c:	e000ed00 	.word	0xe000ed00

1a001260 <cyclesCounterInit>:
 * @return TRUE si esta OK, FALSE en caso de error.
 */
bool_t cyclesCounterInit( uint32_t clockSpeed )
{
   //Asigna  a la variable local ClockSpeed el valor recibido como argumento.
   ClockSpeed = clockSpeed;
1a001260:	4b04      	ldr	r3, [pc, #16]	; (1a001274 <cyclesCounterInit+0x14>)
1a001262:	6018      	str	r0, [r3, #0]
   //Iniciar el contador de ciclos de clock.
   DWT_CTRL  |= 1; // *DWT_CTRL  |= 1;
1a001264:	4a04      	ldr	r2, [pc, #16]	; (1a001278 <cyclesCounterInit+0x18>)
1a001266:	6813      	ldr	r3, [r2, #0]
1a001268:	f043 0301 	orr.w	r3, r3, #1
1a00126c:	6013      	str	r3, [r2, #0]
   return TRUE;
}
1a00126e:	2001      	movs	r0, #1
1a001270:	4770      	bx	lr
1a001272:	bf00      	nop
1a001274:	10000038 	.word	0x10000038
1a001278:	e0001000 	.word	0xe0001000

1a00127c <gpioObtainPinInit>:

static void gpioObtainPinInit( gpioMap_t pin,
                               int8_t *pinNamePort, int8_t *pinNamePin,
                               int8_t *func, int8_t *gpioPort,
                               int8_t *gpioPin )
{
1a00127c:	b430      	push	{r4, r5}

   *pinNamePort = gpioPinsInit[pin].pinName.port;
1a00127e:	4d0b      	ldr	r5, [pc, #44]	; (1a0012ac <gpioObtainPinInit+0x30>)
1a001280:	eb00 0080 	add.w	r0, r0, r0, lsl #2
1a001284:	182c      	adds	r4, r5, r0
1a001286:	5628      	ldrsb	r0, [r5, r0]
1a001288:	7008      	strb	r0, [r1, #0]
   *pinNamePin  = gpioPinsInit[pin].pinName.pin;
1a00128a:	f994 1001 	ldrsb.w	r1, [r4, #1]
1a00128e:	7011      	strb	r1, [r2, #0]
   *func        = gpioPinsInit[pin].func;
1a001290:	f994 2002 	ldrsb.w	r2, [r4, #2]
1a001294:	701a      	strb	r2, [r3, #0]
   *gpioPort    = gpioPinsInit[pin].gpio.port;
1a001296:	f994 2003 	ldrsb.w	r2, [r4, #3]
1a00129a:	9b02      	ldr	r3, [sp, #8]
1a00129c:	701a      	strb	r2, [r3, #0]
   *gpioPin     = gpioPinsInit[pin].gpio.pin;
1a00129e:	f994 2004 	ldrsb.w	r2, [r4, #4]
1a0012a2:	9b03      	ldr	r3, [sp, #12]
1a0012a4:	701a      	strb	r2, [r3, #0]
}
1a0012a6:	bc30      	pop	{r4, r5}
1a0012a8:	4770      	bx	lr
1a0012aa:	bf00      	nop
1a0012ac:	1a0067d8 	.word	0x1a0067d8

1a0012b0 <gpioInit>:

/*==================[external functions definition]==========================*/

bool_t gpioInit( gpioMap_t pin, gpioInit_t config )
{
   if( pin == VCC ){
1a0012b0:	f110 0f02 	cmn.w	r0, #2
1a0012b4:	f000 80c7 	beq.w	1a001446 <gpioInit+0x196>
	  return FALSE;
   }
   if( pin == GND ){
1a0012b8:	f1b0 3fff 	cmp.w	r0, #4294967295
1a0012bc:	f000 80c5 	beq.w	1a00144a <gpioInit+0x19a>
{
1a0012c0:	b570      	push	{r4, r5, r6, lr}
1a0012c2:	b084      	sub	sp, #16
1a0012c4:	460c      	mov	r4, r1
	  return FALSE;
   }

   bool_t ret_val     = 1;

   int8_t pinNamePort = 0;
1a0012c6:	2300      	movs	r3, #0
1a0012c8:	f88d 300f 	strb.w	r3, [sp, #15]
   int8_t pinNamePin  = 0;
1a0012cc:	f88d 300e 	strb.w	r3, [sp, #14]

   int8_t func        = 0;
1a0012d0:	f88d 300d 	strb.w	r3, [sp, #13]

   int8_t gpioPort    = 0;
1a0012d4:	f88d 300c 	strb.w	r3, [sp, #12]
   int8_t gpioPin     = 0;
1a0012d8:	f88d 300b 	strb.w	r3, [sp, #11]

   gpioObtainPinInit( pin, &pinNamePort, &pinNamePin, &func,
1a0012dc:	f10d 030b 	add.w	r3, sp, #11
1a0012e0:	9301      	str	r3, [sp, #4]
1a0012e2:	ab03      	add	r3, sp, #12
1a0012e4:	9300      	str	r3, [sp, #0]
1a0012e6:	f10d 030d 	add.w	r3, sp, #13
1a0012ea:	f10d 020e 	add.w	r2, sp, #14
1a0012ee:	f10d 010f 	add.w	r1, sp, #15
1a0012f2:	f7ff ffc3 	bl	1a00127c <gpioObtainPinInit>
                      &gpioPort, &gpioPin );

   switch(config) {
1a0012f6:	2c05      	cmp	r4, #5
1a0012f8:	f200 80a9 	bhi.w	1a00144e <gpioInit+0x19e>
1a0012fc:	e8df f004 	tbb	[pc, r4]
1a001300:	45278109 	.word	0x45278109
1a001304:	0363      	.short	0x0363

   case GPIO_ENABLE:
      /* Initializes GPIO */
      Chip_GPIO_Init(LPC_GPIO_PORT);
1a001306:	4853      	ldr	r0, [pc, #332]	; (1a001454 <gpioInit+0x1a4>)
1a001308:	f7ff fafe 	bl	1a000908 <Chip_GPIO_Init>
   bool_t ret_val     = 1;
1a00130c:	2001      	movs	r0, #1
      break;
   }

   return ret_val;

}
1a00130e:	b004      	add	sp, #16
1a001310:	bd70      	pop	{r4, r5, r6, pc}
      Chip_SCU_PinMux(
1a001312:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a001316:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a00131a:	f89d 200d 	ldrb.w	r2, [sp, #13]
	LPC_SCU->SFSP[port][pin] = modefunc;
1a00131e:	f042 02d0 	orr.w	r2, r2, #208	; 0xd0
1a001322:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a001326:	494c      	ldr	r1, [pc, #304]	; (1a001458 <gpioInit+0x1a8>)
1a001328:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
      Chip_GPIO_SetDir( LPC_GPIO_PORT, gpioPort, ( 1 << gpioPin ), GPIO_INPUT );
1a00132c:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a001330:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a001334:	2001      	movs	r0, #1
1a001336:	fa00 f102 	lsl.w	r1, r0, r2
{
	if (out) {
		pGPIO->DIR[portNum] |= bitValue;
	}
	else {
		pGPIO->DIR[portNum] &= ~bitValue;
1a00133a:	4c46      	ldr	r4, [pc, #280]	; (1a001454 <gpioInit+0x1a4>)
1a00133c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a001340:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
1a001344:	ea22 0201 	bic.w	r2, r2, r1
1a001348:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
1a00134c:	e7df      	b.n	1a00130e <gpioInit+0x5e>
      Chip_SCU_PinMux(
1a00134e:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a001352:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a001356:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a00135a:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
1a00135e:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a001362:	493d      	ldr	r1, [pc, #244]	; (1a001458 <gpioInit+0x1a8>)
1a001364:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
      Chip_GPIO_SetDir( LPC_GPIO_PORT, gpioPort, ( 1 << gpioPin ), GPIO_INPUT );
1a001368:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a00136c:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a001370:	2001      	movs	r0, #1
1a001372:	fa00 f102 	lsl.w	r1, r0, r2
1a001376:	4c37      	ldr	r4, [pc, #220]	; (1a001454 <gpioInit+0x1a4>)
1a001378:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a00137c:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
1a001380:	ea22 0201 	bic.w	r2, r2, r1
1a001384:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
1a001388:	e7c1      	b.n	1a00130e <gpioInit+0x5e>
      Chip_SCU_PinMux(
1a00138a:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a00138e:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a001392:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a001396:	f042 02d8 	orr.w	r2, r2, #216	; 0xd8
1a00139a:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a00139e:	492e      	ldr	r1, [pc, #184]	; (1a001458 <gpioInit+0x1a8>)
1a0013a0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
      Chip_GPIO_SetDir( LPC_GPIO_PORT, gpioPort, ( 1 << gpioPin ), GPIO_INPUT );
1a0013a4:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a0013a8:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a0013ac:	2001      	movs	r0, #1
1a0013ae:	fa00 f102 	lsl.w	r1, r0, r2
1a0013b2:	4c28      	ldr	r4, [pc, #160]	; (1a001454 <gpioInit+0x1a4>)
1a0013b4:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a0013b8:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
1a0013bc:	ea22 0201 	bic.w	r2, r2, r1
1a0013c0:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
1a0013c4:	e7a3      	b.n	1a00130e <gpioInit+0x5e>
      Chip_SCU_PinMux(
1a0013c6:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a0013ca:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a0013ce:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a0013d2:	f042 02c8 	orr.w	r2, r2, #200	; 0xc8
1a0013d6:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a0013da:	491f      	ldr	r1, [pc, #124]	; (1a001458 <gpioInit+0x1a8>)
1a0013dc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
      Chip_GPIO_SetDir( LPC_GPIO_PORT, gpioPort, ( 1 << gpioPin ), GPIO_INPUT );
1a0013e0:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a0013e4:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a0013e8:	2001      	movs	r0, #1
1a0013ea:	fa00 f102 	lsl.w	r1, r0, r2
1a0013ee:	4c19      	ldr	r4, [pc, #100]	; (1a001454 <gpioInit+0x1a4>)
1a0013f0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
1a0013f4:	f854 2023 	ldr.w	r2, [r4, r3, lsl #2]
1a0013f8:	ea22 0201 	bic.w	r2, r2, r1
1a0013fc:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
1a001400:	e785      	b.n	1a00130e <gpioInit+0x5e>
      Chip_SCU_PinMux(
1a001402:	f89d 100f 	ldrb.w	r1, [sp, #15]
1a001406:	f89d 300e 	ldrb.w	r3, [sp, #14]
1a00140a:	f89d 200d 	ldrb.w	r2, [sp, #13]
1a00140e:	f042 02d0 	orr.w	r2, r2, #208	; 0xd0
1a001412:	eb03 1341 	add.w	r3, r3, r1, lsl #5
1a001416:	4910      	ldr	r1, [pc, #64]	; (1a001458 <gpioInit+0x1a8>)
1a001418:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
      Chip_GPIO_SetDir( LPC_GPIO_PORT, gpioPort, ( 1 << gpioPin ), GPIO_OUTPUT );
1a00141c:	f89d 400c 	ldrb.w	r4, [sp, #12]
1a001420:	f99d 200b 	ldrsb.w	r2, [sp, #11]
1a001424:	2001      	movs	r0, #1
1a001426:	fa00 f102 	lsl.w	r1, r0, r2
		pGPIO->DIR[portNum] |= bitValue;
1a00142a:	4b0a      	ldr	r3, [pc, #40]	; (1a001454 <gpioInit+0x1a4>)
1a00142c:	f504 6500 	add.w	r5, r4, #2048	; 0x800
1a001430:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
1a001434:	4331      	orrs	r1, r6
1a001436:	f843 1025 	str.w	r1, [r3, r5, lsl #2]
      Chip_GPIO_SetPinState( LPC_GPIO_PORT, gpioPort, gpioPin, 0);
1a00143a:	b2d2      	uxtb	r2, r2
	pGPIO->B[port][pin] = setting;
1a00143c:	eb03 1344 	add.w	r3, r3, r4, lsl #5
1a001440:	2100      	movs	r1, #0
1a001442:	5499      	strb	r1, [r3, r2]
1a001444:	e763      	b.n	1a00130e <gpioInit+0x5e>
	  return FALSE;
1a001446:	2000      	movs	r0, #0
1a001448:	4770      	bx	lr
	  return FALSE;
1a00144a:	2000      	movs	r0, #0
}
1a00144c:	4770      	bx	lr
      ret_val = 0;
1a00144e:	2000      	movs	r0, #0
1a001450:	e75d      	b.n	1a00130e <gpioInit+0x5e>
1a001452:	bf00      	nop
1a001454:	400f4000 	.word	0x400f4000
1a001458:	40086000 	.word	0x40086000

1a00145c <gpioWrite>:


bool_t gpioWrite( gpioMap_t pin, bool_t value )
{
   if( pin == VCC ){
1a00145c:	f110 0f02 	cmn.w	r0, #2
1a001460:	d02d      	beq.n	1a0014be <gpioWrite+0x62>
	  return FALSE;
   }
   if( pin == GND ){
1a001462:	f1b0 3fff 	cmp.w	r0, #4294967295
1a001466:	d02c      	beq.n	1a0014c2 <gpioWrite+0x66>
{
1a001468:	b510      	push	{r4, lr}
1a00146a:	b084      	sub	sp, #16
1a00146c:	460c      	mov	r4, r1
	  return FALSE;
   }

   bool_t ret_val     = 1;

   int8_t pinNamePort = 0;
1a00146e:	2300      	movs	r3, #0
1a001470:	f88d 300f 	strb.w	r3, [sp, #15]
   int8_t pinNamePin  = 0;
1a001474:	f88d 300e 	strb.w	r3, [sp, #14]

   int8_t func        = 0;
1a001478:	f88d 300d 	strb.w	r3, [sp, #13]

   int8_t gpioPort    = 0;
1a00147c:	f88d 300c 	strb.w	r3, [sp, #12]
   int8_t gpioPin     = 0;
1a001480:	f88d 300b 	strb.w	r3, [sp, #11]

   gpioObtainPinInit( pin, &pinNamePort, &pinNamePin, &func,
1a001484:	f10d 030b 	add.w	r3, sp, #11
1a001488:	9301      	str	r3, [sp, #4]
1a00148a:	ab03      	add	r3, sp, #12
1a00148c:	9300      	str	r3, [sp, #0]
1a00148e:	f10d 030d 	add.w	r3, sp, #13
1a001492:	f10d 020e 	add.w	r2, sp, #14
1a001496:	f10d 010f 	add.w	r1, sp, #15
1a00149a:	f7ff feef 	bl	1a00127c <gpioObtainPinInit>
                      &gpioPort, &gpioPin );

   Chip_GPIO_SetPinState( LPC_GPIO_PORT, gpioPort, gpioPin, value);
1a00149e:	f89d 300c 	ldrb.w	r3, [sp, #12]
1a0014a2:	f89d 200b 	ldrb.w	r2, [sp, #11]
1a0014a6:	1c21      	adds	r1, r4, #0
1a0014a8:	bf18      	it	ne
1a0014aa:	2101      	movne	r1, #1
1a0014ac:	015b      	lsls	r3, r3, #5
1a0014ae:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
1a0014b2:	f503 2370 	add.w	r3, r3, #983040	; 0xf0000
1a0014b6:	5499      	strb	r1, [r3, r2]

   return ret_val;
1a0014b8:	2001      	movs	r0, #1
}
1a0014ba:	b004      	add	sp, #16
1a0014bc:	bd10      	pop	{r4, pc}
	  return FALSE;
1a0014be:	2000      	movs	r0, #0
1a0014c0:	4770      	bx	lr
	  return FALSE;
1a0014c2:	2000      	movs	r0, #0
}
1a0014c4:	4770      	bx	lr

1a0014c6 <gpioRead>:
}


bool_t gpioRead( gpioMap_t pin )
{
   if( pin == VCC ){
1a0014c6:	f110 0f02 	cmn.w	r0, #2
1a0014ca:	d02c      	beq.n	1a001526 <gpioRead+0x60>
      return TRUE;
   }
   if( pin == GND ){
1a0014cc:	f1b0 3fff 	cmp.w	r0, #4294967295
1a0014d0:	d02b      	beq.n	1a00152a <gpioRead+0x64>
{
1a0014d2:	b500      	push	{lr}
1a0014d4:	b085      	sub	sp, #20
      return FALSE;
   }

   bool_t ret_val     = OFF;

   int8_t pinNamePort = 0;
1a0014d6:	2300      	movs	r3, #0
1a0014d8:	f88d 300f 	strb.w	r3, [sp, #15]
   int8_t pinNamePin  = 0;
1a0014dc:	f88d 300e 	strb.w	r3, [sp, #14]

   int8_t func        = 0;
1a0014e0:	f88d 300d 	strb.w	r3, [sp, #13]

   int8_t gpioPort    = 0;
1a0014e4:	f88d 300c 	strb.w	r3, [sp, #12]
   int8_t gpioPin     = 0;
1a0014e8:	f88d 300b 	strb.w	r3, [sp, #11]

   gpioObtainPinInit( pin, &pinNamePort, &pinNamePin, &func,
1a0014ec:	f10d 030b 	add.w	r3, sp, #11
1a0014f0:	9301      	str	r3, [sp, #4]
1a0014f2:	ab03      	add	r3, sp, #12
1a0014f4:	9300      	str	r3, [sp, #0]
1a0014f6:	f10d 030d 	add.w	r3, sp, #13
1a0014fa:	f10d 020e 	add.w	r2, sp, #14
1a0014fe:	f10d 010f 	add.w	r1, sp, #15
1a001502:	f7ff febb 	bl	1a00127c <gpioObtainPinInit>
                      &gpioPort, &gpioPin );

   ret_val = (bool_t) Chip_GPIO_ReadPortBit( LPC_GPIO_PORT, gpioPort, gpioPin );
1a001506:	f99d 300c 	ldrsb.w	r3, [sp, #12]
1a00150a:	f89d 200b 	ldrb.w	r2, [sp, #11]
	return (bool) pGPIO->B[port][pin];
1a00150e:	015b      	lsls	r3, r3, #5
1a001510:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
1a001514:	f503 2370 	add.w	r3, r3, #983040	; 0xf0000
1a001518:	5c98      	ldrb	r0, [r3, r2]
1a00151a:	3000      	adds	r0, #0
1a00151c:	bf18      	it	ne
1a00151e:	2001      	movne	r0, #1

   return ret_val;
}
1a001520:	b005      	add	sp, #20
1a001522:	f85d fb04 	ldr.w	pc, [sp], #4
      return TRUE;
1a001526:	2001      	movs	r0, #1
1a001528:	4770      	bx	lr
      return FALSE;
1a00152a:	2000      	movs	r0, #0
}
1a00152c:	4770      	bx	lr
1a00152e:	Address 0x1a00152e is out of bounds.


1a001530 <tickRead>:
   #ifdef USE_FREERTOS
      return xTaskGetTickCount();
   #else
      return tickCounter;
   #endif
}
1a001530:	4b01      	ldr	r3, [pc, #4]	; (1a001538 <tickRead+0x8>)
1a001532:	e9d3 0100 	ldrd	r0, r1, [r3]
1a001536:	4770      	bx	lr
1a001538:	10000a08 	.word	0x10000a08

1a00153c <tickPowerSet>:
void tickPowerSet( bool_t power )
{
   #ifdef USE_FREERTOS
      uartWriteString( UART_USB, "Use of tickPowerSet() in a program with freeRTOS has no effect\r\n" );
   #else
      if( power ) {
1a00153c:	b118      	cbz	r0, 1a001546 <tickPowerSet+0xa>
         // Enable SysTick IRQ and SysTick Timer
         SysTick->CTRL = SysTick_CTRL_CLKSOURCE_Msk |
1a00153e:	4b04      	ldr	r3, [pc, #16]	; (1a001550 <tickPowerSet+0x14>)
1a001540:	2207      	movs	r2, #7
1a001542:	601a      	str	r2, [r3, #0]
1a001544:	4770      	bx	lr
                         SysTick_CTRL_TICKINT_Msk   |
                         SysTick_CTRL_ENABLE_Msk;
      } else {
         // Disable SysTick IRQ and SysTick Timer
         SysTick->CTRL = 0x0000000;
1a001546:	4b02      	ldr	r3, [pc, #8]	; (1a001550 <tickPowerSet+0x14>)
1a001548:	2200      	movs	r2, #0
1a00154a:	601a      	str	r2, [r3, #0]
      }
   #endif
}
1a00154c:	4770      	bx	lr
1a00154e:	bf00      	nop
1a001550:	e000e010 	.word	0xe000e010

1a001554 <tickInit>:
{
1a001554:	b538      	push	{r3, r4, r5, lr}
      if( tickRateMSvalue == 0 ) {
1a001556:	ea50 0401 	orrs.w	r4, r0, r1
1a00155a:	d02a      	beq.n	1a0015b2 <tickInit+0x5e>
         if( (tickRateMSvalue >= 1) && (tickRateMSvalue <= 50) ) {
1a00155c:	f110 32ff 	adds.w	r2, r0, #4294967295
1a001560:	f141 33ff 	adc.w	r3, r1, #4294967295
1a001564:	2b00      	cmp	r3, #0
1a001566:	bf08      	it	eq
1a001568:	2a32      	cmpeq	r2, #50	; 0x32
1a00156a:	d227      	bcs.n	1a0015bc <tickInit+0x68>
            tickRateMS = tickRateMSvalue;
1a00156c:	4b14      	ldr	r3, [pc, #80]	; (1a0015c0 <tickInit+0x6c>)
1a00156e:	e9c3 0100 	strd	r0, r1, [r3]
            SysTick_Config( SystemCoreClock * tickRateMSvalue / 1000 );
1a001572:	4b14      	ldr	r3, [pc, #80]	; (1a0015c4 <tickInit+0x70>)
1a001574:	681b      	ldr	r3, [r3, #0]
1a001576:	fba3 4500 	umull	r4, r5, r3, r0
1a00157a:	fb03 5501 	mla	r5, r3, r1, r5
1a00157e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
1a001582:	2300      	movs	r3, #0
1a001584:	4620      	mov	r0, r4
1a001586:	4629      	mov	r1, r5
1a001588:	f000 fd8c 	bl	1a0020a4 <__aeabi_uldivmod>
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
1a00158c:	3801      	subs	r0, #1
1a00158e:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
1a001592:	d209      	bcs.n	1a0015a8 <tickInit+0x54>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
1a001594:	4b0c      	ldr	r3, [pc, #48]	; (1a0015c8 <tickInit+0x74>)
1a001596:	6058      	str	r0, [r3, #4]
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
1a001598:	4a0c      	ldr	r2, [pc, #48]	; (1a0015cc <tickInit+0x78>)
1a00159a:	21e0      	movs	r1, #224	; 0xe0
1a00159c:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
1a0015a0:	2200      	movs	r2, #0
1a0015a2:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
1a0015a4:	2207      	movs	r2, #7
1a0015a6:	601a      	str	r2, [r3, #0]
            tickPowerSet( ON );
1a0015a8:	2001      	movs	r0, #1
1a0015aa:	f7ff ffc7 	bl	1a00153c <tickPowerSet>
      bool_t ret_val = 1;
1a0015ae:	2001      	movs	r0, #1
}
1a0015b0:	bd38      	pop	{r3, r4, r5, pc}
         tickPowerSet( OFF );
1a0015b2:	2000      	movs	r0, #0
1a0015b4:	f7ff ffc2 	bl	1a00153c <tickPowerSet>
         ret_val = 0;
1a0015b8:	2000      	movs	r0, #0
1a0015ba:	e7f9      	b.n	1a0015b0 <tickInit+0x5c>
            ret_val = 0;
1a0015bc:	2000      	movs	r0, #0
1a0015be:	e7f7      	b.n	1a0015b0 <tickInit+0x5c>
1a0015c0:	10000040 	.word	0x10000040
1a0015c4:	10000a4c 	.word	0x10000a4c
1a0015c8:	e000e010 	.word	0xe000e010
1a0015cc:	e000ed00 	.word	0xe000ed00

1a0015d0 <SysTick_Handler>:

//__attribute__ ((section(".after_vectors")))

// SysTick Timer ISR Handler
void tickerCallback( void )   // Before SysTick_Handler
{
1a0015d0:	b508      	push	{r3, lr}
   // Increment Tick counters
   tickCounter++;
1a0015d2:	4a07      	ldr	r2, [pc, #28]	; (1a0015f0 <SysTick_Handler+0x20>)
1a0015d4:	6813      	ldr	r3, [r2, #0]
1a0015d6:	6851      	ldr	r1, [r2, #4]
1a0015d8:	3301      	adds	r3, #1
1a0015da:	f141 0100 	adc.w	r1, r1, #0
1a0015de:	6013      	str	r3, [r2, #0]
1a0015e0:	6051      	str	r1, [r2, #4]
   // Execute Tick Hook function if pointer is not NULL
   if( (tickHookFunction != NULL) ) {
1a0015e2:	4b04      	ldr	r3, [pc, #16]	; (1a0015f4 <SysTick_Handler+0x24>)
1a0015e4:	681b      	ldr	r3, [r3, #0]
1a0015e6:	b113      	cbz	r3, 1a0015ee <SysTick_Handler+0x1e>
      (* tickHookFunction )( callBackFuncParams );
1a0015e8:	4a03      	ldr	r2, [pc, #12]	; (1a0015f8 <SysTick_Handler+0x28>)
1a0015ea:	6810      	ldr	r0, [r2, #0]
1a0015ec:	4798      	blx	r3
   }
}
1a0015ee:	bd08      	pop	{r3, pc}
1a0015f0:	10000a08 	.word	0x10000a08
1a0015f4:	10000a10 	.word	0x10000a10
1a0015f8:	10000a04 	.word	0x10000a04

1a0015fc <uartTxReady>:
}

// Return TRUE if have space in TX FIFO
bool_t uartTxReady( uartMap_t uart )
{
   return Chip_UART_ReadLineStatus( lpcUarts[uart].uartAddr ) & UART_LSR_THRE;
1a0015fc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
1a001600:	0083      	lsls	r3, r0, #2
1a001602:	4a03      	ldr	r2, [pc, #12]	; (1a001610 <uartTxReady+0x14>)
1a001604:	58d3      	ldr	r3, [r2, r3]
 * @note	Mask bits of the returned status value with UART_LSR_*
 *			definitions for specific statuses.
 */
STATIC INLINE uint32_t Chip_UART_ReadLineStatus(LPC_USART_T *pUART)
{
	return pUART->LSR;
1a001606:	6958      	ldr	r0, [r3, #20]
}
1a001608:	f000 0020 	and.w	r0, r0, #32
1a00160c:	4770      	bx	lr
1a00160e:	bf00      	nop
1a001610:	1a0068c0 	.word	0x1a0068c0

1a001614 <uartTxWrite>:
}

// Write in TX FIFO
void uartTxWrite( uartMap_t uart, const uint8_t value )
{
   Chip_UART_SendByte( lpcUarts[uart].uartAddr, value );
1a001614:	eb00 0040 	add.w	r0, r0, r0, lsl #1
1a001618:	0083      	lsls	r3, r0, #2
1a00161a:	4a02      	ldr	r2, [pc, #8]	; (1a001624 <uartTxWrite+0x10>)
1a00161c:	58d3      	ldr	r3, [r2, r3]
	pUART->THR = (uint32_t) data;
1a00161e:	6019      	str	r1, [r3, #0]
}
1a001620:	4770      	bx	lr
1a001622:	bf00      	nop
1a001624:	1a0068c0 	.word	0x1a0068c0

1a001628 <uartWriteByte>:
   return retVal;
}

// Blocking Write 1 byte to TX FIFO
void uartWriteByte( uartMap_t uart, const uint8_t value )
{
1a001628:	b538      	push	{r3, r4, r5, lr}
1a00162a:	4604      	mov	r4, r0
1a00162c:	460d      	mov	r5, r1
   // Wait for space in FIFO (blocking)
   while( uartTxReady( uart ) == FALSE );
1a00162e:	4620      	mov	r0, r4
1a001630:	f7ff ffe4 	bl	1a0015fc <uartTxReady>
1a001634:	2800      	cmp	r0, #0
1a001636:	d0fa      	beq.n	1a00162e <uartWriteByte+0x6>
   // Send byte
   uartTxWrite( uart, value );
1a001638:	4629      	mov	r1, r5
1a00163a:	4620      	mov	r0, r4
1a00163c:	f7ff ffea 	bl	1a001614 <uartTxWrite>
}
1a001640:	bd38      	pop	{r3, r4, r5, pc}

1a001642 <uartWriteString>:

// Blocking Send a string
void uartWriteString( uartMap_t uart, const char* str )
{
1a001642:	b538      	push	{r3, r4, r5, lr}
1a001644:	4605      	mov	r5, r0
1a001646:	460c      	mov	r4, r1
   while( *str != 0 ) {
1a001648:	7821      	ldrb	r1, [r4, #0]
1a00164a:	b121      	cbz	r1, 1a001656 <uartWriteString+0x14>
      uartWriteByte( uart, (uint8_t)*str );
1a00164c:	4628      	mov	r0, r5
1a00164e:	f7ff ffeb 	bl	1a001628 <uartWriteByte>
      str++;
1a001652:	3401      	adds	r4, #1
1a001654:	e7f8      	b.n	1a001648 <uartWriteString+0x6>
   }
}
1a001656:	bd38      	pop	{r3, r4, r5, pc}

1a001658 <USB0_IRQHandler>:
/**
 * @brief   Handle interrupt from USB
 * @return  Nothing
 */
#ifndef USB_HOST_ONLY // Parche para envitar conflictos con biblioteca host
void USB_IRQHandler(void){
1a001658:	b508      	push	{r3, lr}
   USBD_API->hw->ISR(g_hUsb);
1a00165a:	4b04      	ldr	r3, [pc, #16]	; (1a00166c <USB0_IRQHandler+0x14>)
1a00165c:	681b      	ldr	r3, [r3, #0]
1a00165e:	681b      	ldr	r3, [r3, #0]
1a001660:	68db      	ldr	r3, [r3, #12]
1a001662:	4a03      	ldr	r2, [pc, #12]	; (1a001670 <USB0_IRQHandler+0x18>)
1a001664:	6810      	ldr	r0, [r2, #0]
1a001666:	4798      	blx	r3
}
1a001668:	bd08      	pop	{r3, pc}
1a00166a:	bf00      	nop
1a00166c:	10000a50 	.word	0x10000a50
1a001670:	10000a14 	.word	0x10000a14

1a001674 <boardInit>:

/*==================[external functions definition]==========================*/

/* Set up and initialize board hardware */
void boardInit(void)
{
1a001674:	b508      	push	{r3, lr}
   // Read clock settings and update SystemCoreClock variable
   SystemCoreClockUpdate();
1a001676:	f7ff fa59 	bl	1a000b2c <SystemCoreClockUpdate>

   cyclesCounterInit( SystemCoreClock );
1a00167a:	4b1a      	ldr	r3, [pc, #104]	; (1a0016e4 <boardInit+0x70>)
1a00167c:	6818      	ldr	r0, [r3, #0]
1a00167e:	f7ff fdef 	bl	1a001260 <cyclesCounterInit>

   // Inicializar el conteo de Ticks con resolucion de 1ms (si no se usa freeRTOS)
   #ifndef USE_FREERTOS
      tickInit( 1 );
1a001682:	2001      	movs	r0, #1
1a001684:	2100      	movs	r1, #0
1a001686:	f7ff ff65 	bl	1a001554 <tickInit>
      //#error CIAA-NXP

   #elif BOARD==edu_ciaa_nxp

      // Inicializar GPIOs
      gpioInit( 0, GPIO_ENABLE );
1a00168a:	2105      	movs	r1, #5
1a00168c:	2000      	movs	r0, #0
1a00168e:	f7ff fe0f 	bl	1a0012b0 <gpioInit>

      // Configuracion de pines de entrada para Teclas de la EDU-CIAA-NXP
      gpioInit( TEC1, GPIO_INPUT );
1a001692:	2100      	movs	r1, #0
1a001694:	2024      	movs	r0, #36	; 0x24
1a001696:	f7ff fe0b 	bl	1a0012b0 <gpioInit>
      gpioInit( TEC2, GPIO_INPUT );
1a00169a:	2100      	movs	r1, #0
1a00169c:	2025      	movs	r0, #37	; 0x25
1a00169e:	f7ff fe07 	bl	1a0012b0 <gpioInit>
      gpioInit( TEC3, GPIO_INPUT );
1a0016a2:	2100      	movs	r1, #0
1a0016a4:	2026      	movs	r0, #38	; 0x26
1a0016a6:	f7ff fe03 	bl	1a0012b0 <gpioInit>
      gpioInit( TEC4, GPIO_INPUT );
1a0016aa:	2100      	movs	r1, #0
1a0016ac:	2027      	movs	r0, #39	; 0x27
1a0016ae:	f7ff fdff 	bl	1a0012b0 <gpioInit>

      // Configuracion de pines de salida para Leds de la EDU-CIAA-NXP
      gpioInit( LEDR, GPIO_OUTPUT );
1a0016b2:	2101      	movs	r1, #1
1a0016b4:	2028      	movs	r0, #40	; 0x28
1a0016b6:	f7ff fdfb 	bl	1a0012b0 <gpioInit>
      gpioInit( LEDG, GPIO_OUTPUT );
1a0016ba:	2101      	movs	r1, #1
1a0016bc:	2029      	movs	r0, #41	; 0x29
1a0016be:	f7ff fdf7 	bl	1a0012b0 <gpioInit>
      gpioInit( LEDB, GPIO_OUTPUT );
1a0016c2:	2101      	movs	r1, #1
1a0016c4:	202a      	movs	r0, #42	; 0x2a
1a0016c6:	f7ff fdf3 	bl	1a0012b0 <gpioInit>
      gpioInit( LED1, GPIO_OUTPUT );
1a0016ca:	2101      	movs	r1, #1
1a0016cc:	202b      	movs	r0, #43	; 0x2b
1a0016ce:	f7ff fdef 	bl	1a0012b0 <gpioInit>
      gpioInit( LED2, GPIO_OUTPUT );
1a0016d2:	2101      	movs	r1, #1
1a0016d4:	202c      	movs	r0, #44	; 0x2c
1a0016d6:	f7ff fdeb 	bl	1a0012b0 <gpioInit>
      gpioInit( LED3, GPIO_OUTPUT );
1a0016da:	2101      	movs	r1, #1
1a0016dc:	202d      	movs	r0, #45	; 0x2d
1a0016de:	f7ff fde7 	bl	1a0012b0 <gpioInit>
   #else
      #error BOARD compile variable must be defined

   #endif

}
1a0016e2:	bd08      	pop	{r3, pc}
1a0016e4:	10000a4c 	.word	0x10000a4c

1a0016e8 <delayInaccurateUs>:
   delay = INACCURATE_TO_MS * delay_ms;
   for( i=delay; i>0; i-- );
}

void delayInaccurateUs( tick_t delay_us )
{
1a0016e8:	b530      	push	{r4, r5, lr}
1a0016ea:	b085      	sub	sp, #20
   volatile tick_t i;
   volatile tick_t delay;
   delay = (INACCURATE_TO_US_x10 * delay_us) / 10;
1a0016ec:	1803      	adds	r3, r0, r0
1a0016ee:	eb41 0201 	adc.w	r2, r1, r1
1a0016f2:	1818      	adds	r0, r3, r0
1a0016f4:	eb42 0101 	adc.w	r1, r2, r1
1a0016f8:	010b      	lsls	r3, r1, #4
1a0016fa:	ea43 7310 	orr.w	r3, r3, r0, lsr #28
1a0016fe:	0102      	lsls	r2, r0, #4
1a001700:	1880      	adds	r0, r0, r2
1a001702:	eb43 0101 	adc.w	r1, r3, r1
1a001706:	008b      	lsls	r3, r1, #2
1a001708:	ea43 7390 	orr.w	r3, r3, r0, lsr #30
1a00170c:	0082      	lsls	r2, r0, #2
1a00170e:	4610      	mov	r0, r2
1a001710:	4619      	mov	r1, r3
1a001712:	220a      	movs	r2, #10
1a001714:	2300      	movs	r3, #0
1a001716:	f000 fcc5 	bl	1a0020a4 <__aeabi_uldivmod>
1a00171a:	e9cd 0100 	strd	r0, r1, [sp]
   for( i=delay; i>0; i-- );
1a00171e:	e9dd 2300 	ldrd	r2, r3, [sp]
1a001722:	e9cd 2302 	strd	r2, r3, [sp, #8]
1a001726:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1a00172a:	4313      	orrs	r3, r2
1a00172c:	d008      	beq.n	1a001740 <delayInaccurateUs+0x58>
1a00172e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1a001732:	f112 34ff 	adds.w	r4, r2, #4294967295
1a001736:	f143 35ff 	adc.w	r5, r3, #4294967295
1a00173a:	e9cd 4502 	strd	r4, r5, [sp, #8]
1a00173e:	e7f2      	b.n	1a001726 <delayInaccurateUs+0x3e>
}
1a001740:	b005      	add	sp, #20
1a001742:	bd30      	pop	{r4, r5, pc}

1a001744 <delay>:
/* ---- Blocking Delay ---- */

// delay( 1, DELAY_US );

void delay( tick_t duration_ms )
{
1a001744:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1a001748:	4680      	mov	r8, r0
1a00174a:	4689      	mov	r9, r1
   tick_t startTime = tickRead();
1a00174c:	f7ff fef0 	bl	1a001530 <tickRead>
1a001750:	4606      	mov	r6, r0
1a001752:	460f      	mov	r7, r1
   while ( (tick_t)(tickRead() - startTime) < duration_ms/tickRateMS );
1a001754:	f7ff feec 	bl	1a001530 <tickRead>
1a001758:	1b84      	subs	r4, r0, r6
1a00175a:	eb61 0507 	sbc.w	r5, r1, r7
1a00175e:	4b06      	ldr	r3, [pc, #24]	; (1a001778 <delay+0x34>)
1a001760:	e9d3 2300 	ldrd	r2, r3, [r3]
1a001764:	4640      	mov	r0, r8
1a001766:	4649      	mov	r1, r9
1a001768:	f000 fc9c 	bl	1a0020a4 <__aeabi_uldivmod>
1a00176c:	428d      	cmp	r5, r1
1a00176e:	bf08      	it	eq
1a001770:	4284      	cmpeq	r4, r0
1a001772:	d3ef      	bcc.n	1a001754 <delay+0x10>
}
1a001774:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a001778:	10000040 	.word	0x10000040

1a00177c <__aeabi_drsub>:
1a00177c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
1a001780:	e002      	b.n	1a001788 <__adddf3>
1a001782:	bf00      	nop

1a001784 <__aeabi_dsub>:
1a001784:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

1a001788 <__adddf3>:
1a001788:	b530      	push	{r4, r5, lr}
1a00178a:	ea4f 0441 	mov.w	r4, r1, lsl #1
1a00178e:	ea4f 0543 	mov.w	r5, r3, lsl #1
1a001792:	ea94 0f05 	teq	r4, r5
1a001796:	bf08      	it	eq
1a001798:	ea90 0f02 	teqeq	r0, r2
1a00179c:	bf1f      	itttt	ne
1a00179e:	ea54 0c00 	orrsne.w	ip, r4, r0
1a0017a2:	ea55 0c02 	orrsne.w	ip, r5, r2
1a0017a6:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
1a0017aa:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
1a0017ae:	f000 80e2 	beq.w	1a001976 <__adddf3+0x1ee>
1a0017b2:	ea4f 5454 	mov.w	r4, r4, lsr #21
1a0017b6:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
1a0017ba:	bfb8      	it	lt
1a0017bc:	426d      	neglt	r5, r5
1a0017be:	dd0c      	ble.n	1a0017da <__adddf3+0x52>
1a0017c0:	442c      	add	r4, r5
1a0017c2:	ea80 0202 	eor.w	r2, r0, r2
1a0017c6:	ea81 0303 	eor.w	r3, r1, r3
1a0017ca:	ea82 0000 	eor.w	r0, r2, r0
1a0017ce:	ea83 0101 	eor.w	r1, r3, r1
1a0017d2:	ea80 0202 	eor.w	r2, r0, r2
1a0017d6:	ea81 0303 	eor.w	r3, r1, r3
1a0017da:	2d36      	cmp	r5, #54	; 0x36
1a0017dc:	bf88      	it	hi
1a0017de:	bd30      	pophi	{r4, r5, pc}
1a0017e0:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
1a0017e4:	ea4f 3101 	mov.w	r1, r1, lsl #12
1a0017e8:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
1a0017ec:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
1a0017f0:	d002      	beq.n	1a0017f8 <__adddf3+0x70>
1a0017f2:	4240      	negs	r0, r0
1a0017f4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1a0017f8:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
1a0017fc:	ea4f 3303 	mov.w	r3, r3, lsl #12
1a001800:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
1a001804:	d002      	beq.n	1a00180c <__adddf3+0x84>
1a001806:	4252      	negs	r2, r2
1a001808:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
1a00180c:	ea94 0f05 	teq	r4, r5
1a001810:	f000 80a7 	beq.w	1a001962 <__adddf3+0x1da>
1a001814:	f1a4 0401 	sub.w	r4, r4, #1
1a001818:	f1d5 0e20 	rsbs	lr, r5, #32
1a00181c:	db0d      	blt.n	1a00183a <__adddf3+0xb2>
1a00181e:	fa02 fc0e 	lsl.w	ip, r2, lr
1a001822:	fa22 f205 	lsr.w	r2, r2, r5
1a001826:	1880      	adds	r0, r0, r2
1a001828:	f141 0100 	adc.w	r1, r1, #0
1a00182c:	fa03 f20e 	lsl.w	r2, r3, lr
1a001830:	1880      	adds	r0, r0, r2
1a001832:	fa43 f305 	asr.w	r3, r3, r5
1a001836:	4159      	adcs	r1, r3
1a001838:	e00e      	b.n	1a001858 <__adddf3+0xd0>
1a00183a:	f1a5 0520 	sub.w	r5, r5, #32
1a00183e:	f10e 0e20 	add.w	lr, lr, #32
1a001842:	2a01      	cmp	r2, #1
1a001844:	fa03 fc0e 	lsl.w	ip, r3, lr
1a001848:	bf28      	it	cs
1a00184a:	f04c 0c02 	orrcs.w	ip, ip, #2
1a00184e:	fa43 f305 	asr.w	r3, r3, r5
1a001852:	18c0      	adds	r0, r0, r3
1a001854:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
1a001858:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
1a00185c:	d507      	bpl.n	1a00186e <__adddf3+0xe6>
1a00185e:	f04f 0e00 	mov.w	lr, #0
1a001862:	f1dc 0c00 	rsbs	ip, ip, #0
1a001866:	eb7e 0000 	sbcs.w	r0, lr, r0
1a00186a:	eb6e 0101 	sbc.w	r1, lr, r1
1a00186e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
1a001872:	d31b      	bcc.n	1a0018ac <__adddf3+0x124>
1a001874:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
1a001878:	d30c      	bcc.n	1a001894 <__adddf3+0x10c>
1a00187a:	0849      	lsrs	r1, r1, #1
1a00187c:	ea5f 0030 	movs.w	r0, r0, rrx
1a001880:	ea4f 0c3c 	mov.w	ip, ip, rrx
1a001884:	f104 0401 	add.w	r4, r4, #1
1a001888:	ea4f 5244 	mov.w	r2, r4, lsl #21
1a00188c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
1a001890:	f080 809a 	bcs.w	1a0019c8 <__adddf3+0x240>
1a001894:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
1a001898:	bf08      	it	eq
1a00189a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
1a00189e:	f150 0000 	adcs.w	r0, r0, #0
1a0018a2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1a0018a6:	ea41 0105 	orr.w	r1, r1, r5
1a0018aa:	bd30      	pop	{r4, r5, pc}
1a0018ac:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
1a0018b0:	4140      	adcs	r0, r0
1a0018b2:	eb41 0101 	adc.w	r1, r1, r1
1a0018b6:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
1a0018ba:	f1a4 0401 	sub.w	r4, r4, #1
1a0018be:	d1e9      	bne.n	1a001894 <__adddf3+0x10c>
1a0018c0:	f091 0f00 	teq	r1, #0
1a0018c4:	bf04      	itt	eq
1a0018c6:	4601      	moveq	r1, r0
1a0018c8:	2000      	moveq	r0, #0
1a0018ca:	fab1 f381 	clz	r3, r1
1a0018ce:	bf08      	it	eq
1a0018d0:	3320      	addeq	r3, #32
1a0018d2:	f1a3 030b 	sub.w	r3, r3, #11
1a0018d6:	f1b3 0220 	subs.w	r2, r3, #32
1a0018da:	da0c      	bge.n	1a0018f6 <__adddf3+0x16e>
1a0018dc:	320c      	adds	r2, #12
1a0018de:	dd08      	ble.n	1a0018f2 <__adddf3+0x16a>
1a0018e0:	f102 0c14 	add.w	ip, r2, #20
1a0018e4:	f1c2 020c 	rsb	r2, r2, #12
1a0018e8:	fa01 f00c 	lsl.w	r0, r1, ip
1a0018ec:	fa21 f102 	lsr.w	r1, r1, r2
1a0018f0:	e00c      	b.n	1a00190c <__adddf3+0x184>
1a0018f2:	f102 0214 	add.w	r2, r2, #20
1a0018f6:	bfd8      	it	le
1a0018f8:	f1c2 0c20 	rsble	ip, r2, #32
1a0018fc:	fa01 f102 	lsl.w	r1, r1, r2
1a001900:	fa20 fc0c 	lsr.w	ip, r0, ip
1a001904:	bfdc      	itt	le
1a001906:	ea41 010c 	orrle.w	r1, r1, ip
1a00190a:	4090      	lslle	r0, r2
1a00190c:	1ae4      	subs	r4, r4, r3
1a00190e:	bfa2      	ittt	ge
1a001910:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
1a001914:	4329      	orrge	r1, r5
1a001916:	bd30      	popge	{r4, r5, pc}
1a001918:	ea6f 0404 	mvn.w	r4, r4
1a00191c:	3c1f      	subs	r4, #31
1a00191e:	da1c      	bge.n	1a00195a <__adddf3+0x1d2>
1a001920:	340c      	adds	r4, #12
1a001922:	dc0e      	bgt.n	1a001942 <__adddf3+0x1ba>
1a001924:	f104 0414 	add.w	r4, r4, #20
1a001928:	f1c4 0220 	rsb	r2, r4, #32
1a00192c:	fa20 f004 	lsr.w	r0, r0, r4
1a001930:	fa01 f302 	lsl.w	r3, r1, r2
1a001934:	ea40 0003 	orr.w	r0, r0, r3
1a001938:	fa21 f304 	lsr.w	r3, r1, r4
1a00193c:	ea45 0103 	orr.w	r1, r5, r3
1a001940:	bd30      	pop	{r4, r5, pc}
1a001942:	f1c4 040c 	rsb	r4, r4, #12
1a001946:	f1c4 0220 	rsb	r2, r4, #32
1a00194a:	fa20 f002 	lsr.w	r0, r0, r2
1a00194e:	fa01 f304 	lsl.w	r3, r1, r4
1a001952:	ea40 0003 	orr.w	r0, r0, r3
1a001956:	4629      	mov	r1, r5
1a001958:	bd30      	pop	{r4, r5, pc}
1a00195a:	fa21 f004 	lsr.w	r0, r1, r4
1a00195e:	4629      	mov	r1, r5
1a001960:	bd30      	pop	{r4, r5, pc}
1a001962:	f094 0f00 	teq	r4, #0
1a001966:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
1a00196a:	bf06      	itte	eq
1a00196c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
1a001970:	3401      	addeq	r4, #1
1a001972:	3d01      	subne	r5, #1
1a001974:	e74e      	b.n	1a001814 <__adddf3+0x8c>
1a001976:	ea7f 5c64 	mvns.w	ip, r4, asr #21
1a00197a:	bf18      	it	ne
1a00197c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
1a001980:	d029      	beq.n	1a0019d6 <__adddf3+0x24e>
1a001982:	ea94 0f05 	teq	r4, r5
1a001986:	bf08      	it	eq
1a001988:	ea90 0f02 	teqeq	r0, r2
1a00198c:	d005      	beq.n	1a00199a <__adddf3+0x212>
1a00198e:	ea54 0c00 	orrs.w	ip, r4, r0
1a001992:	bf04      	itt	eq
1a001994:	4619      	moveq	r1, r3
1a001996:	4610      	moveq	r0, r2
1a001998:	bd30      	pop	{r4, r5, pc}
1a00199a:	ea91 0f03 	teq	r1, r3
1a00199e:	bf1e      	ittt	ne
1a0019a0:	2100      	movne	r1, #0
1a0019a2:	2000      	movne	r0, #0
1a0019a4:	bd30      	popne	{r4, r5, pc}
1a0019a6:	ea5f 5c54 	movs.w	ip, r4, lsr #21
1a0019aa:	d105      	bne.n	1a0019b8 <__adddf3+0x230>
1a0019ac:	0040      	lsls	r0, r0, #1
1a0019ae:	4149      	adcs	r1, r1
1a0019b0:	bf28      	it	cs
1a0019b2:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
1a0019b6:	bd30      	pop	{r4, r5, pc}
1a0019b8:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
1a0019bc:	bf3c      	itt	cc
1a0019be:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
1a0019c2:	bd30      	popcc	{r4, r5, pc}
1a0019c4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
1a0019c8:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
1a0019cc:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
1a0019d0:	f04f 0000 	mov.w	r0, #0
1a0019d4:	bd30      	pop	{r4, r5, pc}
1a0019d6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
1a0019da:	bf1a      	itte	ne
1a0019dc:	4619      	movne	r1, r3
1a0019de:	4610      	movne	r0, r2
1a0019e0:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
1a0019e4:	bf1c      	itt	ne
1a0019e6:	460b      	movne	r3, r1
1a0019e8:	4602      	movne	r2, r0
1a0019ea:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
1a0019ee:	bf06      	itte	eq
1a0019f0:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
1a0019f4:	ea91 0f03 	teqeq	r1, r3
1a0019f8:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
1a0019fc:	bd30      	pop	{r4, r5, pc}
1a0019fe:	bf00      	nop

1a001a00 <__aeabi_ui2d>:
1a001a00:	f090 0f00 	teq	r0, #0
1a001a04:	bf04      	itt	eq
1a001a06:	2100      	moveq	r1, #0
1a001a08:	4770      	bxeq	lr
1a001a0a:	b530      	push	{r4, r5, lr}
1a001a0c:	f44f 6480 	mov.w	r4, #1024	; 0x400
1a001a10:	f104 0432 	add.w	r4, r4, #50	; 0x32
1a001a14:	f04f 0500 	mov.w	r5, #0
1a001a18:	f04f 0100 	mov.w	r1, #0
1a001a1c:	e750      	b.n	1a0018c0 <__adddf3+0x138>
1a001a1e:	bf00      	nop

1a001a20 <__aeabi_i2d>:
1a001a20:	f090 0f00 	teq	r0, #0
1a001a24:	bf04      	itt	eq
1a001a26:	2100      	moveq	r1, #0
1a001a28:	4770      	bxeq	lr
1a001a2a:	b530      	push	{r4, r5, lr}
1a001a2c:	f44f 6480 	mov.w	r4, #1024	; 0x400
1a001a30:	f104 0432 	add.w	r4, r4, #50	; 0x32
1a001a34:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
1a001a38:	bf48      	it	mi
1a001a3a:	4240      	negmi	r0, r0
1a001a3c:	f04f 0100 	mov.w	r1, #0
1a001a40:	e73e      	b.n	1a0018c0 <__adddf3+0x138>
1a001a42:	bf00      	nop

1a001a44 <__aeabi_f2d>:
1a001a44:	0042      	lsls	r2, r0, #1
1a001a46:	ea4f 01e2 	mov.w	r1, r2, asr #3
1a001a4a:	ea4f 0131 	mov.w	r1, r1, rrx
1a001a4e:	ea4f 7002 	mov.w	r0, r2, lsl #28
1a001a52:	bf1f      	itttt	ne
1a001a54:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
1a001a58:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
1a001a5c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
1a001a60:	4770      	bxne	lr
1a001a62:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
1a001a66:	bf08      	it	eq
1a001a68:	4770      	bxeq	lr
1a001a6a:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
1a001a6e:	bf04      	itt	eq
1a001a70:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
1a001a74:	4770      	bxeq	lr
1a001a76:	b530      	push	{r4, r5, lr}
1a001a78:	f44f 7460 	mov.w	r4, #896	; 0x380
1a001a7c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
1a001a80:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
1a001a84:	e71c      	b.n	1a0018c0 <__adddf3+0x138>
1a001a86:	bf00      	nop

1a001a88 <__aeabi_ul2d>:
1a001a88:	ea50 0201 	orrs.w	r2, r0, r1
1a001a8c:	bf08      	it	eq
1a001a8e:	4770      	bxeq	lr
1a001a90:	b530      	push	{r4, r5, lr}
1a001a92:	f04f 0500 	mov.w	r5, #0
1a001a96:	e00a      	b.n	1a001aae <__aeabi_l2d+0x16>

1a001a98 <__aeabi_l2d>:
1a001a98:	ea50 0201 	orrs.w	r2, r0, r1
1a001a9c:	bf08      	it	eq
1a001a9e:	4770      	bxeq	lr
1a001aa0:	b530      	push	{r4, r5, lr}
1a001aa2:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
1a001aa6:	d502      	bpl.n	1a001aae <__aeabi_l2d+0x16>
1a001aa8:	4240      	negs	r0, r0
1a001aaa:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1a001aae:	f44f 6480 	mov.w	r4, #1024	; 0x400
1a001ab2:	f104 0432 	add.w	r4, r4, #50	; 0x32
1a001ab6:	ea5f 5c91 	movs.w	ip, r1, lsr #22
1a001aba:	f43f aed8 	beq.w	1a00186e <__adddf3+0xe6>
1a001abe:	f04f 0203 	mov.w	r2, #3
1a001ac2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
1a001ac6:	bf18      	it	ne
1a001ac8:	3203      	addne	r2, #3
1a001aca:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
1a001ace:	bf18      	it	ne
1a001ad0:	3203      	addne	r2, #3
1a001ad2:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
1a001ad6:	f1c2 0320 	rsb	r3, r2, #32
1a001ada:	fa00 fc03 	lsl.w	ip, r0, r3
1a001ade:	fa20 f002 	lsr.w	r0, r0, r2
1a001ae2:	fa01 fe03 	lsl.w	lr, r1, r3
1a001ae6:	ea40 000e 	orr.w	r0, r0, lr
1a001aea:	fa21 f102 	lsr.w	r1, r1, r2
1a001aee:	4414      	add	r4, r2
1a001af0:	e6bd      	b.n	1a00186e <__adddf3+0xe6>
1a001af2:	bf00      	nop

1a001af4 <__aeabi_dmul>:
1a001af4:	b570      	push	{r4, r5, r6, lr}
1a001af6:	f04f 0cff 	mov.w	ip, #255	; 0xff
1a001afa:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
1a001afe:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1a001b02:	bf1d      	ittte	ne
1a001b04:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
1a001b08:	ea94 0f0c 	teqne	r4, ip
1a001b0c:	ea95 0f0c 	teqne	r5, ip
1a001b10:	f000 f8de 	bleq	1a001cd0 <__aeabi_dmul+0x1dc>
1a001b14:	442c      	add	r4, r5
1a001b16:	ea81 0603 	eor.w	r6, r1, r3
1a001b1a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
1a001b1e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
1a001b22:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
1a001b26:	bf18      	it	ne
1a001b28:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
1a001b2c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
1a001b30:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
1a001b34:	d038      	beq.n	1a001ba8 <__aeabi_dmul+0xb4>
1a001b36:	fba0 ce02 	umull	ip, lr, r0, r2
1a001b3a:	f04f 0500 	mov.w	r5, #0
1a001b3e:	fbe1 e502 	umlal	lr, r5, r1, r2
1a001b42:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
1a001b46:	fbe0 e503 	umlal	lr, r5, r0, r3
1a001b4a:	f04f 0600 	mov.w	r6, #0
1a001b4e:	fbe1 5603 	umlal	r5, r6, r1, r3
1a001b52:	f09c 0f00 	teq	ip, #0
1a001b56:	bf18      	it	ne
1a001b58:	f04e 0e01 	orrne.w	lr, lr, #1
1a001b5c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
1a001b60:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
1a001b64:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
1a001b68:	d204      	bcs.n	1a001b74 <__aeabi_dmul+0x80>
1a001b6a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
1a001b6e:	416d      	adcs	r5, r5
1a001b70:	eb46 0606 	adc.w	r6, r6, r6
1a001b74:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
1a001b78:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
1a001b7c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
1a001b80:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
1a001b84:	ea4f 2ece 	mov.w	lr, lr, lsl #11
1a001b88:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
1a001b8c:	bf88      	it	hi
1a001b8e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
1a001b92:	d81e      	bhi.n	1a001bd2 <__aeabi_dmul+0xde>
1a001b94:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
1a001b98:	bf08      	it	eq
1a001b9a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
1a001b9e:	f150 0000 	adcs.w	r0, r0, #0
1a001ba2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1a001ba6:	bd70      	pop	{r4, r5, r6, pc}
1a001ba8:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
1a001bac:	ea46 0101 	orr.w	r1, r6, r1
1a001bb0:	ea40 0002 	orr.w	r0, r0, r2
1a001bb4:	ea81 0103 	eor.w	r1, r1, r3
1a001bb8:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
1a001bbc:	bfc2      	ittt	gt
1a001bbe:	ebd4 050c 	rsbsgt	r5, r4, ip
1a001bc2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
1a001bc6:	bd70      	popgt	{r4, r5, r6, pc}
1a001bc8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
1a001bcc:	f04f 0e00 	mov.w	lr, #0
1a001bd0:	3c01      	subs	r4, #1
1a001bd2:	f300 80ab 	bgt.w	1a001d2c <__aeabi_dmul+0x238>
1a001bd6:	f114 0f36 	cmn.w	r4, #54	; 0x36
1a001bda:	bfde      	ittt	le
1a001bdc:	2000      	movle	r0, #0
1a001bde:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
1a001be2:	bd70      	pople	{r4, r5, r6, pc}
1a001be4:	f1c4 0400 	rsb	r4, r4, #0
1a001be8:	3c20      	subs	r4, #32
1a001bea:	da35      	bge.n	1a001c58 <__aeabi_dmul+0x164>
1a001bec:	340c      	adds	r4, #12
1a001bee:	dc1b      	bgt.n	1a001c28 <__aeabi_dmul+0x134>
1a001bf0:	f104 0414 	add.w	r4, r4, #20
1a001bf4:	f1c4 0520 	rsb	r5, r4, #32
1a001bf8:	fa00 f305 	lsl.w	r3, r0, r5
1a001bfc:	fa20 f004 	lsr.w	r0, r0, r4
1a001c00:	fa01 f205 	lsl.w	r2, r1, r5
1a001c04:	ea40 0002 	orr.w	r0, r0, r2
1a001c08:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
1a001c0c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
1a001c10:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
1a001c14:	fa21 f604 	lsr.w	r6, r1, r4
1a001c18:	eb42 0106 	adc.w	r1, r2, r6
1a001c1c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1a001c20:	bf08      	it	eq
1a001c22:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1a001c26:	bd70      	pop	{r4, r5, r6, pc}
1a001c28:	f1c4 040c 	rsb	r4, r4, #12
1a001c2c:	f1c4 0520 	rsb	r5, r4, #32
1a001c30:	fa00 f304 	lsl.w	r3, r0, r4
1a001c34:	fa20 f005 	lsr.w	r0, r0, r5
1a001c38:	fa01 f204 	lsl.w	r2, r1, r4
1a001c3c:	ea40 0002 	orr.w	r0, r0, r2
1a001c40:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
1a001c44:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
1a001c48:	f141 0100 	adc.w	r1, r1, #0
1a001c4c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1a001c50:	bf08      	it	eq
1a001c52:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1a001c56:	bd70      	pop	{r4, r5, r6, pc}
1a001c58:	f1c4 0520 	rsb	r5, r4, #32
1a001c5c:	fa00 f205 	lsl.w	r2, r0, r5
1a001c60:	ea4e 0e02 	orr.w	lr, lr, r2
1a001c64:	fa20 f304 	lsr.w	r3, r0, r4
1a001c68:	fa01 f205 	lsl.w	r2, r1, r5
1a001c6c:	ea43 0302 	orr.w	r3, r3, r2
1a001c70:	fa21 f004 	lsr.w	r0, r1, r4
1a001c74:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
1a001c78:	fa21 f204 	lsr.w	r2, r1, r4
1a001c7c:	ea20 0002 	bic.w	r0, r0, r2
1a001c80:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
1a001c84:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1a001c88:	bf08      	it	eq
1a001c8a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1a001c8e:	bd70      	pop	{r4, r5, r6, pc}
1a001c90:	f094 0f00 	teq	r4, #0
1a001c94:	d10f      	bne.n	1a001cb6 <__aeabi_dmul+0x1c2>
1a001c96:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
1a001c9a:	0040      	lsls	r0, r0, #1
1a001c9c:	eb41 0101 	adc.w	r1, r1, r1
1a001ca0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
1a001ca4:	bf08      	it	eq
1a001ca6:	3c01      	subeq	r4, #1
1a001ca8:	d0f7      	beq.n	1a001c9a <__aeabi_dmul+0x1a6>
1a001caa:	ea41 0106 	orr.w	r1, r1, r6
1a001cae:	f095 0f00 	teq	r5, #0
1a001cb2:	bf18      	it	ne
1a001cb4:	4770      	bxne	lr
1a001cb6:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
1a001cba:	0052      	lsls	r2, r2, #1
1a001cbc:	eb43 0303 	adc.w	r3, r3, r3
1a001cc0:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
1a001cc4:	bf08      	it	eq
1a001cc6:	3d01      	subeq	r5, #1
1a001cc8:	d0f7      	beq.n	1a001cba <__aeabi_dmul+0x1c6>
1a001cca:	ea43 0306 	orr.w	r3, r3, r6
1a001cce:	4770      	bx	lr
1a001cd0:	ea94 0f0c 	teq	r4, ip
1a001cd4:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
1a001cd8:	bf18      	it	ne
1a001cda:	ea95 0f0c 	teqne	r5, ip
1a001cde:	d00c      	beq.n	1a001cfa <__aeabi_dmul+0x206>
1a001ce0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1a001ce4:	bf18      	it	ne
1a001ce6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1a001cea:	d1d1      	bne.n	1a001c90 <__aeabi_dmul+0x19c>
1a001cec:	ea81 0103 	eor.w	r1, r1, r3
1a001cf0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
1a001cf4:	f04f 0000 	mov.w	r0, #0
1a001cf8:	bd70      	pop	{r4, r5, r6, pc}
1a001cfa:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1a001cfe:	bf06      	itte	eq
1a001d00:	4610      	moveq	r0, r2
1a001d02:	4619      	moveq	r1, r3
1a001d04:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1a001d08:	d019      	beq.n	1a001d3e <__aeabi_dmul+0x24a>
1a001d0a:	ea94 0f0c 	teq	r4, ip
1a001d0e:	d102      	bne.n	1a001d16 <__aeabi_dmul+0x222>
1a001d10:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
1a001d14:	d113      	bne.n	1a001d3e <__aeabi_dmul+0x24a>
1a001d16:	ea95 0f0c 	teq	r5, ip
1a001d1a:	d105      	bne.n	1a001d28 <__aeabi_dmul+0x234>
1a001d1c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
1a001d20:	bf1c      	itt	ne
1a001d22:	4610      	movne	r0, r2
1a001d24:	4619      	movne	r1, r3
1a001d26:	d10a      	bne.n	1a001d3e <__aeabi_dmul+0x24a>
1a001d28:	ea81 0103 	eor.w	r1, r1, r3
1a001d2c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
1a001d30:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
1a001d34:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
1a001d38:	f04f 0000 	mov.w	r0, #0
1a001d3c:	bd70      	pop	{r4, r5, r6, pc}
1a001d3e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
1a001d42:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
1a001d46:	bd70      	pop	{r4, r5, r6, pc}

1a001d48 <__aeabi_ddiv>:
1a001d48:	b570      	push	{r4, r5, r6, lr}
1a001d4a:	f04f 0cff 	mov.w	ip, #255	; 0xff
1a001d4e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
1a001d52:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1a001d56:	bf1d      	ittte	ne
1a001d58:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
1a001d5c:	ea94 0f0c 	teqne	r4, ip
1a001d60:	ea95 0f0c 	teqne	r5, ip
1a001d64:	f000 f8a7 	bleq	1a001eb6 <__aeabi_ddiv+0x16e>
1a001d68:	eba4 0405 	sub.w	r4, r4, r5
1a001d6c:	ea81 0e03 	eor.w	lr, r1, r3
1a001d70:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
1a001d74:	ea4f 3101 	mov.w	r1, r1, lsl #12
1a001d78:	f000 8088 	beq.w	1a001e8c <__aeabi_ddiv+0x144>
1a001d7c:	ea4f 3303 	mov.w	r3, r3, lsl #12
1a001d80:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
1a001d84:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
1a001d88:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
1a001d8c:	ea4f 2202 	mov.w	r2, r2, lsl #8
1a001d90:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
1a001d94:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
1a001d98:	ea4f 2600 	mov.w	r6, r0, lsl #8
1a001d9c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
1a001da0:	429d      	cmp	r5, r3
1a001da2:	bf08      	it	eq
1a001da4:	4296      	cmpeq	r6, r2
1a001da6:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
1a001daa:	f504 7440 	add.w	r4, r4, #768	; 0x300
1a001dae:	d202      	bcs.n	1a001db6 <__aeabi_ddiv+0x6e>
1a001db0:	085b      	lsrs	r3, r3, #1
1a001db2:	ea4f 0232 	mov.w	r2, r2, rrx
1a001db6:	1ab6      	subs	r6, r6, r2
1a001db8:	eb65 0503 	sbc.w	r5, r5, r3
1a001dbc:	085b      	lsrs	r3, r3, #1
1a001dbe:	ea4f 0232 	mov.w	r2, r2, rrx
1a001dc2:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
1a001dc6:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
1a001dca:	ebb6 0e02 	subs.w	lr, r6, r2
1a001dce:	eb75 0e03 	sbcs.w	lr, r5, r3
1a001dd2:	bf22      	ittt	cs
1a001dd4:	1ab6      	subcs	r6, r6, r2
1a001dd6:	4675      	movcs	r5, lr
1a001dd8:	ea40 000c 	orrcs.w	r0, r0, ip
1a001ddc:	085b      	lsrs	r3, r3, #1
1a001dde:	ea4f 0232 	mov.w	r2, r2, rrx
1a001de2:	ebb6 0e02 	subs.w	lr, r6, r2
1a001de6:	eb75 0e03 	sbcs.w	lr, r5, r3
1a001dea:	bf22      	ittt	cs
1a001dec:	1ab6      	subcs	r6, r6, r2
1a001dee:	4675      	movcs	r5, lr
1a001df0:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
1a001df4:	085b      	lsrs	r3, r3, #1
1a001df6:	ea4f 0232 	mov.w	r2, r2, rrx
1a001dfa:	ebb6 0e02 	subs.w	lr, r6, r2
1a001dfe:	eb75 0e03 	sbcs.w	lr, r5, r3
1a001e02:	bf22      	ittt	cs
1a001e04:	1ab6      	subcs	r6, r6, r2
1a001e06:	4675      	movcs	r5, lr
1a001e08:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
1a001e0c:	085b      	lsrs	r3, r3, #1
1a001e0e:	ea4f 0232 	mov.w	r2, r2, rrx
1a001e12:	ebb6 0e02 	subs.w	lr, r6, r2
1a001e16:	eb75 0e03 	sbcs.w	lr, r5, r3
1a001e1a:	bf22      	ittt	cs
1a001e1c:	1ab6      	subcs	r6, r6, r2
1a001e1e:	4675      	movcs	r5, lr
1a001e20:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
1a001e24:	ea55 0e06 	orrs.w	lr, r5, r6
1a001e28:	d018      	beq.n	1a001e5c <__aeabi_ddiv+0x114>
1a001e2a:	ea4f 1505 	mov.w	r5, r5, lsl #4
1a001e2e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
1a001e32:	ea4f 1606 	mov.w	r6, r6, lsl #4
1a001e36:	ea4f 03c3 	mov.w	r3, r3, lsl #3
1a001e3a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
1a001e3e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
1a001e42:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
1a001e46:	d1c0      	bne.n	1a001dca <__aeabi_ddiv+0x82>
1a001e48:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
1a001e4c:	d10b      	bne.n	1a001e66 <__aeabi_ddiv+0x11e>
1a001e4e:	ea41 0100 	orr.w	r1, r1, r0
1a001e52:	f04f 0000 	mov.w	r0, #0
1a001e56:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
1a001e5a:	e7b6      	b.n	1a001dca <__aeabi_ddiv+0x82>
1a001e5c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
1a001e60:	bf04      	itt	eq
1a001e62:	4301      	orreq	r1, r0
1a001e64:	2000      	moveq	r0, #0
1a001e66:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
1a001e6a:	bf88      	it	hi
1a001e6c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
1a001e70:	f63f aeaf 	bhi.w	1a001bd2 <__aeabi_dmul+0xde>
1a001e74:	ebb5 0c03 	subs.w	ip, r5, r3
1a001e78:	bf04      	itt	eq
1a001e7a:	ebb6 0c02 	subseq.w	ip, r6, r2
1a001e7e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
1a001e82:	f150 0000 	adcs.w	r0, r0, #0
1a001e86:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1a001e8a:	bd70      	pop	{r4, r5, r6, pc}
1a001e8c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
1a001e90:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
1a001e94:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
1a001e98:	bfc2      	ittt	gt
1a001e9a:	ebd4 050c 	rsbsgt	r5, r4, ip
1a001e9e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
1a001ea2:	bd70      	popgt	{r4, r5, r6, pc}
1a001ea4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
1a001ea8:	f04f 0e00 	mov.w	lr, #0
1a001eac:	3c01      	subs	r4, #1
1a001eae:	e690      	b.n	1a001bd2 <__aeabi_dmul+0xde>
1a001eb0:	ea45 0e06 	orr.w	lr, r5, r6
1a001eb4:	e68d      	b.n	1a001bd2 <__aeabi_dmul+0xde>
1a001eb6:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
1a001eba:	ea94 0f0c 	teq	r4, ip
1a001ebe:	bf08      	it	eq
1a001ec0:	ea95 0f0c 	teqeq	r5, ip
1a001ec4:	f43f af3b 	beq.w	1a001d3e <__aeabi_dmul+0x24a>
1a001ec8:	ea94 0f0c 	teq	r4, ip
1a001ecc:	d10a      	bne.n	1a001ee4 <__aeabi_ddiv+0x19c>
1a001ece:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
1a001ed2:	f47f af34 	bne.w	1a001d3e <__aeabi_dmul+0x24a>
1a001ed6:	ea95 0f0c 	teq	r5, ip
1a001eda:	f47f af25 	bne.w	1a001d28 <__aeabi_dmul+0x234>
1a001ede:	4610      	mov	r0, r2
1a001ee0:	4619      	mov	r1, r3
1a001ee2:	e72c      	b.n	1a001d3e <__aeabi_dmul+0x24a>
1a001ee4:	ea95 0f0c 	teq	r5, ip
1a001ee8:	d106      	bne.n	1a001ef8 <__aeabi_ddiv+0x1b0>
1a001eea:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
1a001eee:	f43f aefd 	beq.w	1a001cec <__aeabi_dmul+0x1f8>
1a001ef2:	4610      	mov	r0, r2
1a001ef4:	4619      	mov	r1, r3
1a001ef6:	e722      	b.n	1a001d3e <__aeabi_dmul+0x24a>
1a001ef8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1a001efc:	bf18      	it	ne
1a001efe:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1a001f02:	f47f aec5 	bne.w	1a001c90 <__aeabi_dmul+0x19c>
1a001f06:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
1a001f0a:	f47f af0d 	bne.w	1a001d28 <__aeabi_dmul+0x234>
1a001f0e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
1a001f12:	f47f aeeb 	bne.w	1a001cec <__aeabi_dmul+0x1f8>
1a001f16:	e712      	b.n	1a001d3e <__aeabi_dmul+0x24a>

1a001f18 <__gedf2>:
1a001f18:	f04f 3cff 	mov.w	ip, #4294967295
1a001f1c:	e006      	b.n	1a001f2c <__cmpdf2+0x4>
1a001f1e:	bf00      	nop

1a001f20 <__ledf2>:
1a001f20:	f04f 0c01 	mov.w	ip, #1
1a001f24:	e002      	b.n	1a001f2c <__cmpdf2+0x4>
1a001f26:	bf00      	nop

1a001f28 <__cmpdf2>:
1a001f28:	f04f 0c01 	mov.w	ip, #1
1a001f2c:	f84d cd04 	str.w	ip, [sp, #-4]!
1a001f30:	ea4f 0c41 	mov.w	ip, r1, lsl #1
1a001f34:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1a001f38:	ea4f 0c43 	mov.w	ip, r3, lsl #1
1a001f3c:	bf18      	it	ne
1a001f3e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
1a001f42:	d01b      	beq.n	1a001f7c <__cmpdf2+0x54>
1a001f44:	b001      	add	sp, #4
1a001f46:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
1a001f4a:	bf0c      	ite	eq
1a001f4c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
1a001f50:	ea91 0f03 	teqne	r1, r3
1a001f54:	bf02      	ittt	eq
1a001f56:	ea90 0f02 	teqeq	r0, r2
1a001f5a:	2000      	moveq	r0, #0
1a001f5c:	4770      	bxeq	lr
1a001f5e:	f110 0f00 	cmn.w	r0, #0
1a001f62:	ea91 0f03 	teq	r1, r3
1a001f66:	bf58      	it	pl
1a001f68:	4299      	cmppl	r1, r3
1a001f6a:	bf08      	it	eq
1a001f6c:	4290      	cmpeq	r0, r2
1a001f6e:	bf2c      	ite	cs
1a001f70:	17d8      	asrcs	r0, r3, #31
1a001f72:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
1a001f76:	f040 0001 	orr.w	r0, r0, #1
1a001f7a:	4770      	bx	lr
1a001f7c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
1a001f80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1a001f84:	d102      	bne.n	1a001f8c <__cmpdf2+0x64>
1a001f86:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
1a001f8a:	d107      	bne.n	1a001f9c <__cmpdf2+0x74>
1a001f8c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
1a001f90:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1a001f94:	d1d6      	bne.n	1a001f44 <__cmpdf2+0x1c>
1a001f96:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
1a001f9a:	d0d3      	beq.n	1a001f44 <__cmpdf2+0x1c>
1a001f9c:	f85d 0b04 	ldr.w	r0, [sp], #4
1a001fa0:	4770      	bx	lr
1a001fa2:	bf00      	nop

1a001fa4 <__aeabi_cdrcmple>:
1a001fa4:	4684      	mov	ip, r0
1a001fa6:	4610      	mov	r0, r2
1a001fa8:	4662      	mov	r2, ip
1a001faa:	468c      	mov	ip, r1
1a001fac:	4619      	mov	r1, r3
1a001fae:	4663      	mov	r3, ip
1a001fb0:	e000      	b.n	1a001fb4 <__aeabi_cdcmpeq>
1a001fb2:	bf00      	nop

1a001fb4 <__aeabi_cdcmpeq>:
1a001fb4:	b501      	push	{r0, lr}
1a001fb6:	f7ff ffb7 	bl	1a001f28 <__cmpdf2>
1a001fba:	2800      	cmp	r0, #0
1a001fbc:	bf48      	it	mi
1a001fbe:	f110 0f00 	cmnmi.w	r0, #0
1a001fc2:	bd01      	pop	{r0, pc}

1a001fc4 <__aeabi_dcmpeq>:
1a001fc4:	f84d ed08 	str.w	lr, [sp, #-8]!
1a001fc8:	f7ff fff4 	bl	1a001fb4 <__aeabi_cdcmpeq>
1a001fcc:	bf0c      	ite	eq
1a001fce:	2001      	moveq	r0, #1
1a001fd0:	2000      	movne	r0, #0
1a001fd2:	f85d fb08 	ldr.w	pc, [sp], #8
1a001fd6:	bf00      	nop

1a001fd8 <__aeabi_dcmplt>:
1a001fd8:	f84d ed08 	str.w	lr, [sp, #-8]!
1a001fdc:	f7ff ffea 	bl	1a001fb4 <__aeabi_cdcmpeq>
1a001fe0:	bf34      	ite	cc
1a001fe2:	2001      	movcc	r0, #1
1a001fe4:	2000      	movcs	r0, #0
1a001fe6:	f85d fb08 	ldr.w	pc, [sp], #8
1a001fea:	bf00      	nop

1a001fec <__aeabi_dcmple>:
1a001fec:	f84d ed08 	str.w	lr, [sp, #-8]!
1a001ff0:	f7ff ffe0 	bl	1a001fb4 <__aeabi_cdcmpeq>
1a001ff4:	bf94      	ite	ls
1a001ff6:	2001      	movls	r0, #1
1a001ff8:	2000      	movhi	r0, #0
1a001ffa:	f85d fb08 	ldr.w	pc, [sp], #8
1a001ffe:	bf00      	nop

1a002000 <__aeabi_dcmpge>:
1a002000:	f84d ed08 	str.w	lr, [sp, #-8]!
1a002004:	f7ff ffce 	bl	1a001fa4 <__aeabi_cdrcmple>
1a002008:	bf94      	ite	ls
1a00200a:	2001      	movls	r0, #1
1a00200c:	2000      	movhi	r0, #0
1a00200e:	f85d fb08 	ldr.w	pc, [sp], #8
1a002012:	bf00      	nop

1a002014 <__aeabi_dcmpgt>:
1a002014:	f84d ed08 	str.w	lr, [sp, #-8]!
1a002018:	f7ff ffc4 	bl	1a001fa4 <__aeabi_cdrcmple>
1a00201c:	bf34      	ite	cc
1a00201e:	2001      	movcc	r0, #1
1a002020:	2000      	movcs	r0, #0
1a002022:	f85d fb08 	ldr.w	pc, [sp], #8
1a002026:	bf00      	nop

1a002028 <__aeabi_dcmpun>:
1a002028:	ea4f 0c41 	mov.w	ip, r1, lsl #1
1a00202c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1a002030:	d102      	bne.n	1a002038 <__aeabi_dcmpun+0x10>
1a002032:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
1a002036:	d10a      	bne.n	1a00204e <__aeabi_dcmpun+0x26>
1a002038:	ea4f 0c43 	mov.w	ip, r3, lsl #1
1a00203c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1a002040:	d102      	bne.n	1a002048 <__aeabi_dcmpun+0x20>
1a002042:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
1a002046:	d102      	bne.n	1a00204e <__aeabi_dcmpun+0x26>
1a002048:	f04f 0000 	mov.w	r0, #0
1a00204c:	4770      	bx	lr
1a00204e:	f04f 0001 	mov.w	r0, #1
1a002052:	4770      	bx	lr

1a002054 <__aeabi_d2iz>:
1a002054:	ea4f 0241 	mov.w	r2, r1, lsl #1
1a002058:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
1a00205c:	d215      	bcs.n	1a00208a <__aeabi_d2iz+0x36>
1a00205e:	d511      	bpl.n	1a002084 <__aeabi_d2iz+0x30>
1a002060:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
1a002064:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
1a002068:	d912      	bls.n	1a002090 <__aeabi_d2iz+0x3c>
1a00206a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
1a00206e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
1a002072:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
1a002076:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
1a00207a:	fa23 f002 	lsr.w	r0, r3, r2
1a00207e:	bf18      	it	ne
1a002080:	4240      	negne	r0, r0
1a002082:	4770      	bx	lr
1a002084:	f04f 0000 	mov.w	r0, #0
1a002088:	4770      	bx	lr
1a00208a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
1a00208e:	d105      	bne.n	1a00209c <__aeabi_d2iz+0x48>
1a002090:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
1a002094:	bf08      	it	eq
1a002096:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
1a00209a:	4770      	bx	lr
1a00209c:	f04f 0000 	mov.w	r0, #0
1a0020a0:	4770      	bx	lr
1a0020a2:	bf00      	nop

1a0020a4 <__aeabi_uldivmod>:
1a0020a4:	b953      	cbnz	r3, 1a0020bc <__aeabi_uldivmod+0x18>
1a0020a6:	b94a      	cbnz	r2, 1a0020bc <__aeabi_uldivmod+0x18>
1a0020a8:	2900      	cmp	r1, #0
1a0020aa:	bf08      	it	eq
1a0020ac:	2800      	cmpeq	r0, #0
1a0020ae:	bf1c      	itt	ne
1a0020b0:	f04f 31ff 	movne.w	r1, #4294967295
1a0020b4:	f04f 30ff 	movne.w	r0, #4294967295
1a0020b8:	f000 b974 	b.w	1a0023a4 <__aeabi_idiv0>
1a0020bc:	f1ad 0c08 	sub.w	ip, sp, #8
1a0020c0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
1a0020c4:	f000 f806 	bl	1a0020d4 <__udivmoddi4>
1a0020c8:	f8dd e004 	ldr.w	lr, [sp, #4]
1a0020cc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1a0020d0:	b004      	add	sp, #16
1a0020d2:	4770      	bx	lr

1a0020d4 <__udivmoddi4>:
1a0020d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1a0020d8:	9e08      	ldr	r6, [sp, #32]
1a0020da:	4604      	mov	r4, r0
1a0020dc:	4688      	mov	r8, r1
1a0020de:	2b00      	cmp	r3, #0
1a0020e0:	f040 8085 	bne.w	1a0021ee <__udivmoddi4+0x11a>
1a0020e4:	428a      	cmp	r2, r1
1a0020e6:	4615      	mov	r5, r2
1a0020e8:	d948      	bls.n	1a00217c <__udivmoddi4+0xa8>
1a0020ea:	fab2 f282 	clz	r2, r2
1a0020ee:	b14a      	cbz	r2, 1a002104 <__udivmoddi4+0x30>
1a0020f0:	f1c2 0720 	rsb	r7, r2, #32
1a0020f4:	fa01 f302 	lsl.w	r3, r1, r2
1a0020f8:	fa20 f707 	lsr.w	r7, r0, r7
1a0020fc:	4095      	lsls	r5, r2
1a0020fe:	ea47 0803 	orr.w	r8, r7, r3
1a002102:	4094      	lsls	r4, r2
1a002104:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a002108:	0c23      	lsrs	r3, r4, #16
1a00210a:	fbb8 f7fe 	udiv	r7, r8, lr
1a00210e:	fa1f fc85 	uxth.w	ip, r5
1a002112:	fb0e 8817 	mls	r8, lr, r7, r8
1a002116:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
1a00211a:	fb07 f10c 	mul.w	r1, r7, ip
1a00211e:	4299      	cmp	r1, r3
1a002120:	d909      	bls.n	1a002136 <__udivmoddi4+0x62>
1a002122:	18eb      	adds	r3, r5, r3
1a002124:	f107 30ff 	add.w	r0, r7, #4294967295
1a002128:	f080 80e3 	bcs.w	1a0022f2 <__udivmoddi4+0x21e>
1a00212c:	4299      	cmp	r1, r3
1a00212e:	f240 80e0 	bls.w	1a0022f2 <__udivmoddi4+0x21e>
1a002132:	3f02      	subs	r7, #2
1a002134:	442b      	add	r3, r5
1a002136:	1a5b      	subs	r3, r3, r1
1a002138:	b2a4      	uxth	r4, r4
1a00213a:	fbb3 f0fe 	udiv	r0, r3, lr
1a00213e:	fb0e 3310 	mls	r3, lr, r0, r3
1a002142:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
1a002146:	fb00 fc0c 	mul.w	ip, r0, ip
1a00214a:	45a4      	cmp	ip, r4
1a00214c:	d909      	bls.n	1a002162 <__udivmoddi4+0x8e>
1a00214e:	192c      	adds	r4, r5, r4
1a002150:	f100 33ff 	add.w	r3, r0, #4294967295
1a002154:	f080 80cb 	bcs.w	1a0022ee <__udivmoddi4+0x21a>
1a002158:	45a4      	cmp	ip, r4
1a00215a:	f240 80c8 	bls.w	1a0022ee <__udivmoddi4+0x21a>
1a00215e:	3802      	subs	r0, #2
1a002160:	442c      	add	r4, r5
1a002162:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
1a002166:	eba4 040c 	sub.w	r4, r4, ip
1a00216a:	2700      	movs	r7, #0
1a00216c:	b11e      	cbz	r6, 1a002176 <__udivmoddi4+0xa2>
1a00216e:	40d4      	lsrs	r4, r2
1a002170:	2300      	movs	r3, #0
1a002172:	e9c6 4300 	strd	r4, r3, [r6]
1a002176:	4639      	mov	r1, r7
1a002178:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a00217c:	2a00      	cmp	r2, #0
1a00217e:	d053      	beq.n	1a002228 <__udivmoddi4+0x154>
1a002180:	fab2 f282 	clz	r2, r2
1a002184:	2a00      	cmp	r2, #0
1a002186:	f040 80b6 	bne.w	1a0022f6 <__udivmoddi4+0x222>
1a00218a:	1b49      	subs	r1, r1, r5
1a00218c:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a002190:	fa1f f885 	uxth.w	r8, r5
1a002194:	2701      	movs	r7, #1
1a002196:	fbb1 fcfe 	udiv	ip, r1, lr
1a00219a:	0c23      	lsrs	r3, r4, #16
1a00219c:	fb0e 111c 	mls	r1, lr, ip, r1
1a0021a0:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1a0021a4:	fb08 f10c 	mul.w	r1, r8, ip
1a0021a8:	4299      	cmp	r1, r3
1a0021aa:	d907      	bls.n	1a0021bc <__udivmoddi4+0xe8>
1a0021ac:	18eb      	adds	r3, r5, r3
1a0021ae:	f10c 30ff 	add.w	r0, ip, #4294967295
1a0021b2:	d202      	bcs.n	1a0021ba <__udivmoddi4+0xe6>
1a0021b4:	4299      	cmp	r1, r3
1a0021b6:	f200 80ec 	bhi.w	1a002392 <__udivmoddi4+0x2be>
1a0021ba:	4684      	mov	ip, r0
1a0021bc:	1a59      	subs	r1, r3, r1
1a0021be:	b2a3      	uxth	r3, r4
1a0021c0:	fbb1 f0fe 	udiv	r0, r1, lr
1a0021c4:	fb0e 1410 	mls	r4, lr, r0, r1
1a0021c8:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
1a0021cc:	fb08 f800 	mul.w	r8, r8, r0
1a0021d0:	45a0      	cmp	r8, r4
1a0021d2:	d907      	bls.n	1a0021e4 <__udivmoddi4+0x110>
1a0021d4:	192c      	adds	r4, r5, r4
1a0021d6:	f100 33ff 	add.w	r3, r0, #4294967295
1a0021da:	d202      	bcs.n	1a0021e2 <__udivmoddi4+0x10e>
1a0021dc:	45a0      	cmp	r8, r4
1a0021de:	f200 80dc 	bhi.w	1a00239a <__udivmoddi4+0x2c6>
1a0021e2:	4618      	mov	r0, r3
1a0021e4:	eba4 0408 	sub.w	r4, r4, r8
1a0021e8:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
1a0021ec:	e7be      	b.n	1a00216c <__udivmoddi4+0x98>
1a0021ee:	428b      	cmp	r3, r1
1a0021f0:	d908      	bls.n	1a002204 <__udivmoddi4+0x130>
1a0021f2:	2e00      	cmp	r6, #0
1a0021f4:	d078      	beq.n	1a0022e8 <__udivmoddi4+0x214>
1a0021f6:	2700      	movs	r7, #0
1a0021f8:	e9c6 0100 	strd	r0, r1, [r6]
1a0021fc:	4638      	mov	r0, r7
1a0021fe:	4639      	mov	r1, r7
1a002200:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1a002204:	fab3 f783 	clz	r7, r3
1a002208:	b97f      	cbnz	r7, 1a00222a <__udivmoddi4+0x156>
1a00220a:	428b      	cmp	r3, r1
1a00220c:	d302      	bcc.n	1a002214 <__udivmoddi4+0x140>
1a00220e:	4282      	cmp	r2, r0
1a002210:	f200 80bd 	bhi.w	1a00238e <__udivmoddi4+0x2ba>
1a002214:	1a84      	subs	r4, r0, r2
1a002216:	eb61 0303 	sbc.w	r3, r1, r3
1a00221a:	2001      	movs	r0, #1
1a00221c:	4698      	mov	r8, r3
1a00221e:	2e00      	cmp	r6, #0
1a002220:	d0a9      	beq.n	1a002176 <__udivmoddi4+0xa2>
1a002222:	e9c6 4800 	strd	r4, r8, [r6]
1a002226:	e7a6      	b.n	1a002176 <__udivmoddi4+0xa2>
1a002228:	deff      	udf	#255	; 0xff
1a00222a:	f1c7 0520 	rsb	r5, r7, #32
1a00222e:	40bb      	lsls	r3, r7
1a002230:	fa22 fc05 	lsr.w	ip, r2, r5
1a002234:	ea4c 0c03 	orr.w	ip, ip, r3
1a002238:	fa01 f407 	lsl.w	r4, r1, r7
1a00223c:	fa20 f805 	lsr.w	r8, r0, r5
1a002240:	fa21 f305 	lsr.w	r3, r1, r5
1a002244:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
1a002248:	ea48 0404 	orr.w	r4, r8, r4
1a00224c:	fbb3 f9fe 	udiv	r9, r3, lr
1a002250:	0c21      	lsrs	r1, r4, #16
1a002252:	fb0e 3319 	mls	r3, lr, r9, r3
1a002256:	fa1f f88c 	uxth.w	r8, ip
1a00225a:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
1a00225e:	fb09 fa08 	mul.w	sl, r9, r8
1a002262:	459a      	cmp	sl, r3
1a002264:	fa02 f207 	lsl.w	r2, r2, r7
1a002268:	fa00 f107 	lsl.w	r1, r0, r7
1a00226c:	d90b      	bls.n	1a002286 <__udivmoddi4+0x1b2>
1a00226e:	eb1c 0303 	adds.w	r3, ip, r3
1a002272:	f109 30ff 	add.w	r0, r9, #4294967295
1a002276:	f080 8088 	bcs.w	1a00238a <__udivmoddi4+0x2b6>
1a00227a:	459a      	cmp	sl, r3
1a00227c:	f240 8085 	bls.w	1a00238a <__udivmoddi4+0x2b6>
1a002280:	f1a9 0902 	sub.w	r9, r9, #2
1a002284:	4463      	add	r3, ip
1a002286:	eba3 030a 	sub.w	r3, r3, sl
1a00228a:	b2a4      	uxth	r4, r4
1a00228c:	fbb3 f0fe 	udiv	r0, r3, lr
1a002290:	fb0e 3310 	mls	r3, lr, r0, r3
1a002294:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
1a002298:	fb00 f808 	mul.w	r8, r0, r8
1a00229c:	45a0      	cmp	r8, r4
1a00229e:	d908      	bls.n	1a0022b2 <__udivmoddi4+0x1de>
1a0022a0:	eb1c 0404 	adds.w	r4, ip, r4
1a0022a4:	f100 33ff 	add.w	r3, r0, #4294967295
1a0022a8:	d26b      	bcs.n	1a002382 <__udivmoddi4+0x2ae>
1a0022aa:	45a0      	cmp	r8, r4
1a0022ac:	d969      	bls.n	1a002382 <__udivmoddi4+0x2ae>
1a0022ae:	3802      	subs	r0, #2
1a0022b0:	4464      	add	r4, ip
1a0022b2:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
1a0022b6:	eba4 0408 	sub.w	r4, r4, r8
1a0022ba:	fba0 8902 	umull	r8, r9, r0, r2
1a0022be:	454c      	cmp	r4, r9
1a0022c0:	46c6      	mov	lr, r8
1a0022c2:	464b      	mov	r3, r9
1a0022c4:	d354      	bcc.n	1a002370 <__udivmoddi4+0x29c>
1a0022c6:	d051      	beq.n	1a00236c <__udivmoddi4+0x298>
1a0022c8:	2e00      	cmp	r6, #0
1a0022ca:	d069      	beq.n	1a0023a0 <__udivmoddi4+0x2cc>
1a0022cc:	ebb1 020e 	subs.w	r2, r1, lr
1a0022d0:	eb64 0403 	sbc.w	r4, r4, r3
1a0022d4:	fa04 f505 	lsl.w	r5, r4, r5
1a0022d8:	fa22 f307 	lsr.w	r3, r2, r7
1a0022dc:	40fc      	lsrs	r4, r7
1a0022de:	431d      	orrs	r5, r3
1a0022e0:	e9c6 5400 	strd	r5, r4, [r6]
1a0022e4:	2700      	movs	r7, #0
1a0022e6:	e746      	b.n	1a002176 <__udivmoddi4+0xa2>
1a0022e8:	4637      	mov	r7, r6
1a0022ea:	4630      	mov	r0, r6
1a0022ec:	e743      	b.n	1a002176 <__udivmoddi4+0xa2>
1a0022ee:	4618      	mov	r0, r3
1a0022f0:	e737      	b.n	1a002162 <__udivmoddi4+0x8e>
1a0022f2:	4607      	mov	r7, r0
1a0022f4:	e71f      	b.n	1a002136 <__udivmoddi4+0x62>
1a0022f6:	f1c2 0320 	rsb	r3, r2, #32
1a0022fa:	fa20 f703 	lsr.w	r7, r0, r3
1a0022fe:	4095      	lsls	r5, r2
1a002300:	fa01 f002 	lsl.w	r0, r1, r2
1a002304:	fa21 f303 	lsr.w	r3, r1, r3
1a002308:	ea4f 4e15 	mov.w	lr, r5, lsr #16
1a00230c:	4338      	orrs	r0, r7
1a00230e:	0c01      	lsrs	r1, r0, #16
1a002310:	fbb3 f7fe 	udiv	r7, r3, lr
1a002314:	fa1f f885 	uxth.w	r8, r5
1a002318:	fb0e 3317 	mls	r3, lr, r7, r3
1a00231c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
1a002320:	fb07 f308 	mul.w	r3, r7, r8
1a002324:	428b      	cmp	r3, r1
1a002326:	fa04 f402 	lsl.w	r4, r4, r2
1a00232a:	d907      	bls.n	1a00233c <__udivmoddi4+0x268>
1a00232c:	1869      	adds	r1, r5, r1
1a00232e:	f107 3cff 	add.w	ip, r7, #4294967295
1a002332:	d228      	bcs.n	1a002386 <__udivmoddi4+0x2b2>
1a002334:	428b      	cmp	r3, r1
1a002336:	d926      	bls.n	1a002386 <__udivmoddi4+0x2b2>
1a002338:	3f02      	subs	r7, #2
1a00233a:	4429      	add	r1, r5
1a00233c:	1acb      	subs	r3, r1, r3
1a00233e:	b281      	uxth	r1, r0
1a002340:	fbb3 f0fe 	udiv	r0, r3, lr
1a002344:	fb0e 3310 	mls	r3, lr, r0, r3
1a002348:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
1a00234c:	fb00 f308 	mul.w	r3, r0, r8
1a002350:	428b      	cmp	r3, r1
1a002352:	d907      	bls.n	1a002364 <__udivmoddi4+0x290>
1a002354:	1869      	adds	r1, r5, r1
1a002356:	f100 3cff 	add.w	ip, r0, #4294967295
1a00235a:	d210      	bcs.n	1a00237e <__udivmoddi4+0x2aa>
1a00235c:	428b      	cmp	r3, r1
1a00235e:	d90e      	bls.n	1a00237e <__udivmoddi4+0x2aa>
1a002360:	3802      	subs	r0, #2
1a002362:	4429      	add	r1, r5
1a002364:	1ac9      	subs	r1, r1, r3
1a002366:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
1a00236a:	e714      	b.n	1a002196 <__udivmoddi4+0xc2>
1a00236c:	4541      	cmp	r1, r8
1a00236e:	d2ab      	bcs.n	1a0022c8 <__udivmoddi4+0x1f4>
1a002370:	ebb8 0e02 	subs.w	lr, r8, r2
1a002374:	eb69 020c 	sbc.w	r2, r9, ip
1a002378:	3801      	subs	r0, #1
1a00237a:	4613      	mov	r3, r2
1a00237c:	e7a4      	b.n	1a0022c8 <__udivmoddi4+0x1f4>
1a00237e:	4660      	mov	r0, ip
1a002380:	e7f0      	b.n	1a002364 <__udivmoddi4+0x290>
1a002382:	4618      	mov	r0, r3
1a002384:	e795      	b.n	1a0022b2 <__udivmoddi4+0x1de>
1a002386:	4667      	mov	r7, ip
1a002388:	e7d8      	b.n	1a00233c <__udivmoddi4+0x268>
1a00238a:	4681      	mov	r9, r0
1a00238c:	e77b      	b.n	1a002286 <__udivmoddi4+0x1b2>
1a00238e:	4638      	mov	r0, r7
1a002390:	e745      	b.n	1a00221e <__udivmoddi4+0x14a>
1a002392:	f1ac 0c02 	sub.w	ip, ip, #2
1a002396:	442b      	add	r3, r5
1a002398:	e710      	b.n	1a0021bc <__udivmoddi4+0xe8>
1a00239a:	3802      	subs	r0, #2
1a00239c:	442c      	add	r4, r5
1a00239e:	e721      	b.n	1a0021e4 <__udivmoddi4+0x110>
1a0023a0:	4637      	mov	r7, r6
1a0023a2:	e6e8      	b.n	1a002176 <__udivmoddi4+0xa2>

1a0023a4 <__aeabi_idiv0>:
1a0023a4:	4770      	bx	lr
1a0023a6:	bf00      	nop

1a0023a8 <_malloc_trim_r>:
1a0023a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a0023aa:	4f24      	ldr	r7, [pc, #144]	; (1a00243c <_malloc_trim_r+0x94>)
1a0023ac:	460c      	mov	r4, r1
1a0023ae:	4606      	mov	r6, r0
1a0023b0:	f000 fd0a 	bl	1a002dc8 <__malloc_lock>
1a0023b4:	68bb      	ldr	r3, [r7, #8]
1a0023b6:	685d      	ldr	r5, [r3, #4]
1a0023b8:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
1a0023bc:	310f      	adds	r1, #15
1a0023be:	f025 0503 	bic.w	r5, r5, #3
1a0023c2:	4429      	add	r1, r5
1a0023c4:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
1a0023c8:	f021 010f 	bic.w	r1, r1, #15
1a0023cc:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
1a0023d0:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
1a0023d4:	db07      	blt.n	1a0023e6 <_malloc_trim_r+0x3e>
1a0023d6:	2100      	movs	r1, #0
1a0023d8:	4630      	mov	r0, r6
1a0023da:	f7fe f8bf 	bl	1a00055c <_sbrk_r>
1a0023de:	68bb      	ldr	r3, [r7, #8]
1a0023e0:	442b      	add	r3, r5
1a0023e2:	4298      	cmp	r0, r3
1a0023e4:	d004      	beq.n	1a0023f0 <_malloc_trim_r+0x48>
1a0023e6:	4630      	mov	r0, r6
1a0023e8:	f000 fcf4 	bl	1a002dd4 <__malloc_unlock>
1a0023ec:	2000      	movs	r0, #0
1a0023ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1a0023f0:	4261      	negs	r1, r4
1a0023f2:	4630      	mov	r0, r6
1a0023f4:	f7fe f8b2 	bl	1a00055c <_sbrk_r>
1a0023f8:	3001      	adds	r0, #1
1a0023fa:	d00d      	beq.n	1a002418 <_malloc_trim_r+0x70>
1a0023fc:	4b10      	ldr	r3, [pc, #64]	; (1a002440 <_malloc_trim_r+0x98>)
1a0023fe:	68ba      	ldr	r2, [r7, #8]
1a002400:	6819      	ldr	r1, [r3, #0]
1a002402:	1b2d      	subs	r5, r5, r4
1a002404:	f045 0501 	orr.w	r5, r5, #1
1a002408:	4630      	mov	r0, r6
1a00240a:	1b09      	subs	r1, r1, r4
1a00240c:	6055      	str	r5, [r2, #4]
1a00240e:	6019      	str	r1, [r3, #0]
1a002410:	f000 fce0 	bl	1a002dd4 <__malloc_unlock>
1a002414:	2001      	movs	r0, #1
1a002416:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1a002418:	2100      	movs	r1, #0
1a00241a:	4630      	mov	r0, r6
1a00241c:	f7fe f89e 	bl	1a00055c <_sbrk_r>
1a002420:	68ba      	ldr	r2, [r7, #8]
1a002422:	1a83      	subs	r3, r0, r2
1a002424:	2b0f      	cmp	r3, #15
1a002426:	ddde      	ble.n	1a0023e6 <_malloc_trim_r+0x3e>
1a002428:	4c06      	ldr	r4, [pc, #24]	; (1a002444 <_malloc_trim_r+0x9c>)
1a00242a:	4905      	ldr	r1, [pc, #20]	; (1a002440 <_malloc_trim_r+0x98>)
1a00242c:	6824      	ldr	r4, [r4, #0]
1a00242e:	f043 0301 	orr.w	r3, r3, #1
1a002432:	1b00      	subs	r0, r0, r4
1a002434:	6053      	str	r3, [r2, #4]
1a002436:	6008      	str	r0, [r1, #0]
1a002438:	e7d5      	b.n	1a0023e6 <_malloc_trim_r+0x3e>
1a00243a:	bf00      	nop
1a00243c:	10000478 	.word	0x10000478
1a002440:	10000a18 	.word	0x10000a18
1a002444:	10000880 	.word	0x10000880

1a002448 <_free_r>:
1a002448:	2900      	cmp	r1, #0
1a00244a:	d05d      	beq.n	1a002508 <_free_r+0xc0>
1a00244c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1a00244e:	460f      	mov	r7, r1
1a002450:	4606      	mov	r6, r0
1a002452:	f000 fcb9 	bl	1a002dc8 <__malloc_lock>
1a002456:	f857 cc04 	ldr.w	ip, [r7, #-4]
1a00245a:	4c73      	ldr	r4, [pc, #460]	; (1a002628 <_free_r+0x1e0>)
1a00245c:	f02c 0301 	bic.w	r3, ip, #1
1a002460:	f1a7 0008 	sub.w	r0, r7, #8
1a002464:	18c2      	adds	r2, r0, r3
1a002466:	68a1      	ldr	r1, [r4, #8]
1a002468:	6855      	ldr	r5, [r2, #4]
1a00246a:	4291      	cmp	r1, r2
1a00246c:	f025 0503 	bic.w	r5, r5, #3
1a002470:	d07f      	beq.n	1a002572 <_free_r+0x12a>
1a002472:	f01c 0f01 	tst.w	ip, #1
1a002476:	6055      	str	r5, [r2, #4]
1a002478:	eb02 0105 	add.w	r1, r2, r5
1a00247c:	d133      	bne.n	1a0024e6 <_free_r+0x9e>
1a00247e:	f857 ec08 	ldr.w	lr, [r7, #-8]
1a002482:	6849      	ldr	r1, [r1, #4]
1a002484:	eba0 000e 	sub.w	r0, r0, lr
1a002488:	f104 0c08 	add.w	ip, r4, #8
1a00248c:	6887      	ldr	r7, [r0, #8]
1a00248e:	4567      	cmp	r7, ip
1a002490:	4473      	add	r3, lr
1a002492:	f001 0101 	and.w	r1, r1, #1
1a002496:	d060      	beq.n	1a00255a <_free_r+0x112>
1a002498:	f8d0 e00c 	ldr.w	lr, [r0, #12]
1a00249c:	f8c7 e00c 	str.w	lr, [r7, #12]
1a0024a0:	f8ce 7008 	str.w	r7, [lr, #8]
1a0024a4:	2900      	cmp	r1, #0
1a0024a6:	f000 8089 	beq.w	1a0025bc <_free_r+0x174>
1a0024aa:	f043 0101 	orr.w	r1, r3, #1
1a0024ae:	6041      	str	r1, [r0, #4]
1a0024b0:	6013      	str	r3, [r2, #0]
1a0024b2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
1a0024b6:	d230      	bcs.n	1a00251a <_free_r+0xd2>
1a0024b8:	08db      	lsrs	r3, r3, #3
1a0024ba:	1c59      	adds	r1, r3, #1
1a0024bc:	6865      	ldr	r5, [r4, #4]
1a0024be:	109a      	asrs	r2, r3, #2
1a0024c0:	2301      	movs	r3, #1
1a0024c2:	4093      	lsls	r3, r2
1a0024c4:	432b      	orrs	r3, r5
1a0024c6:	eb04 02c1 	add.w	r2, r4, r1, lsl #3
1a0024ca:	f854 5031 	ldr.w	r5, [r4, r1, lsl #3]
1a0024ce:	6063      	str	r3, [r4, #4]
1a0024d0:	3a08      	subs	r2, #8
1a0024d2:	e9c0 5202 	strd	r5, r2, [r0, #8]
1a0024d6:	f844 0031 	str.w	r0, [r4, r1, lsl #3]
1a0024da:	60e8      	str	r0, [r5, #12]
1a0024dc:	4630      	mov	r0, r6
1a0024de:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
1a0024e2:	f000 bc77 	b.w	1a002dd4 <__malloc_unlock>
1a0024e6:	6849      	ldr	r1, [r1, #4]
1a0024e8:	07c9      	lsls	r1, r1, #31
1a0024ea:	d40e      	bmi.n	1a00250a <_free_r+0xc2>
1a0024ec:	442b      	add	r3, r5
1a0024ee:	f104 0c08 	add.w	ip, r4, #8
1a0024f2:	6891      	ldr	r1, [r2, #8]
1a0024f4:	4561      	cmp	r1, ip
1a0024f6:	f043 0501 	orr.w	r5, r3, #1
1a0024fa:	d067      	beq.n	1a0025cc <_free_r+0x184>
1a0024fc:	68d2      	ldr	r2, [r2, #12]
1a0024fe:	60ca      	str	r2, [r1, #12]
1a002500:	6091      	str	r1, [r2, #8]
1a002502:	6045      	str	r5, [r0, #4]
1a002504:	50c3      	str	r3, [r0, r3]
1a002506:	e7d4      	b.n	1a0024b2 <_free_r+0x6a>
1a002508:	4770      	bx	lr
1a00250a:	f043 0101 	orr.w	r1, r3, #1
1a00250e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
1a002512:	f847 1c04 	str.w	r1, [r7, #-4]
1a002516:	6013      	str	r3, [r2, #0]
1a002518:	d3ce      	bcc.n	1a0024b8 <_free_r+0x70>
1a00251a:	0a5a      	lsrs	r2, r3, #9
1a00251c:	2a04      	cmp	r2, #4
1a00251e:	d842      	bhi.n	1a0025a6 <_free_r+0x15e>
1a002520:	099a      	lsrs	r2, r3, #6
1a002522:	f102 0739 	add.w	r7, r2, #57	; 0x39
1a002526:	00ff      	lsls	r7, r7, #3
1a002528:	f102 0138 	add.w	r1, r2, #56	; 0x38
1a00252c:	19e5      	adds	r5, r4, r7
1a00252e:	59e2      	ldr	r2, [r4, r7]
1a002530:	3d08      	subs	r5, #8
1a002532:	4295      	cmp	r5, r2
1a002534:	d051      	beq.n	1a0025da <_free_r+0x192>
1a002536:	6851      	ldr	r1, [r2, #4]
1a002538:	f021 0103 	bic.w	r1, r1, #3
1a00253c:	4299      	cmp	r1, r3
1a00253e:	d902      	bls.n	1a002546 <_free_r+0xfe>
1a002540:	6892      	ldr	r2, [r2, #8]
1a002542:	4295      	cmp	r5, r2
1a002544:	d1f7      	bne.n	1a002536 <_free_r+0xee>
1a002546:	68d5      	ldr	r5, [r2, #12]
1a002548:	e9c0 2502 	strd	r2, r5, [r0, #8]
1a00254c:	60a8      	str	r0, [r5, #8]
1a00254e:	60d0      	str	r0, [r2, #12]
1a002550:	4630      	mov	r0, r6
1a002552:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
1a002556:	f000 bc3d 	b.w	1a002dd4 <__malloc_unlock>
1a00255a:	2900      	cmp	r1, #0
1a00255c:	d15e      	bne.n	1a00261c <_free_r+0x1d4>
1a00255e:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
1a002562:	442b      	add	r3, r5
1a002564:	f043 0401 	orr.w	r4, r3, #1
1a002568:	60ca      	str	r2, [r1, #12]
1a00256a:	6091      	str	r1, [r2, #8]
1a00256c:	6044      	str	r4, [r0, #4]
1a00256e:	50c3      	str	r3, [r0, r3]
1a002570:	e7b4      	b.n	1a0024dc <_free_r+0x94>
1a002572:	f01c 0f01 	tst.w	ip, #1
1a002576:	442b      	add	r3, r5
1a002578:	d107      	bne.n	1a00258a <_free_r+0x142>
1a00257a:	f857 2c08 	ldr.w	r2, [r7, #-8]
1a00257e:	1a80      	subs	r0, r0, r2
1a002580:	4413      	add	r3, r2
1a002582:	e9d0 1202 	ldrd	r1, r2, [r0, #8]
1a002586:	60ca      	str	r2, [r1, #12]
1a002588:	6091      	str	r1, [r2, #8]
1a00258a:	4a28      	ldr	r2, [pc, #160]	; (1a00262c <_free_r+0x1e4>)
1a00258c:	6812      	ldr	r2, [r2, #0]
1a00258e:	f043 0101 	orr.w	r1, r3, #1
1a002592:	429a      	cmp	r2, r3
1a002594:	6041      	str	r1, [r0, #4]
1a002596:	60a0      	str	r0, [r4, #8]
1a002598:	d8a0      	bhi.n	1a0024dc <_free_r+0x94>
1a00259a:	4b25      	ldr	r3, [pc, #148]	; (1a002630 <_free_r+0x1e8>)
1a00259c:	4630      	mov	r0, r6
1a00259e:	6819      	ldr	r1, [r3, #0]
1a0025a0:	f7ff ff02 	bl	1a0023a8 <_malloc_trim_r>
1a0025a4:	e79a      	b.n	1a0024dc <_free_r+0x94>
1a0025a6:	2a14      	cmp	r2, #20
1a0025a8:	d90a      	bls.n	1a0025c0 <_free_r+0x178>
1a0025aa:	2a54      	cmp	r2, #84	; 0x54
1a0025ac:	d81d      	bhi.n	1a0025ea <_free_r+0x1a2>
1a0025ae:	0b1a      	lsrs	r2, r3, #12
1a0025b0:	f102 076f 	add.w	r7, r2, #111	; 0x6f
1a0025b4:	00ff      	lsls	r7, r7, #3
1a0025b6:	f102 016e 	add.w	r1, r2, #110	; 0x6e
1a0025ba:	e7b7      	b.n	1a00252c <_free_r+0xe4>
1a0025bc:	442b      	add	r3, r5
1a0025be:	e798      	b.n	1a0024f2 <_free_r+0xaa>
1a0025c0:	f102 075c 	add.w	r7, r2, #92	; 0x5c
1a0025c4:	00ff      	lsls	r7, r7, #3
1a0025c6:	f102 015b 	add.w	r1, r2, #91	; 0x5b
1a0025ca:	e7af      	b.n	1a00252c <_free_r+0xe4>
1a0025cc:	e9c4 0004 	strd	r0, r0, [r4, #16]
1a0025d0:	e9c0 cc02 	strd	ip, ip, [r0, #8]
1a0025d4:	6045      	str	r5, [r0, #4]
1a0025d6:	50c3      	str	r3, [r0, r3]
1a0025d8:	e780      	b.n	1a0024dc <_free_r+0x94>
1a0025da:	6863      	ldr	r3, [r4, #4]
1a0025dc:	1089      	asrs	r1, r1, #2
1a0025de:	2701      	movs	r7, #1
1a0025e0:	fa07 f101 	lsl.w	r1, r7, r1
1a0025e4:	4319      	orrs	r1, r3
1a0025e6:	6061      	str	r1, [r4, #4]
1a0025e8:	e7ae      	b.n	1a002548 <_free_r+0x100>
1a0025ea:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
1a0025ee:	d806      	bhi.n	1a0025fe <_free_r+0x1b6>
1a0025f0:	0bda      	lsrs	r2, r3, #15
1a0025f2:	f102 0778 	add.w	r7, r2, #120	; 0x78
1a0025f6:	00ff      	lsls	r7, r7, #3
1a0025f8:	f102 0177 	add.w	r1, r2, #119	; 0x77
1a0025fc:	e796      	b.n	1a00252c <_free_r+0xe4>
1a0025fe:	f240 5154 	movw	r1, #1364	; 0x554
1a002602:	428a      	cmp	r2, r1
1a002604:	d806      	bhi.n	1a002614 <_free_r+0x1cc>
1a002606:	0c9a      	lsrs	r2, r3, #18
1a002608:	f102 077d 	add.w	r7, r2, #125	; 0x7d
1a00260c:	00ff      	lsls	r7, r7, #3
1a00260e:	f102 017c 	add.w	r1, r2, #124	; 0x7c
1a002612:	e78b      	b.n	1a00252c <_free_r+0xe4>
1a002614:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
1a002618:	217e      	movs	r1, #126	; 0x7e
1a00261a:	e787      	b.n	1a00252c <_free_r+0xe4>
1a00261c:	f043 0101 	orr.w	r1, r3, #1
1a002620:	6041      	str	r1, [r0, #4]
1a002622:	6013      	str	r3, [r2, #0]
1a002624:	e75a      	b.n	1a0024dc <_free_r+0x94>
1a002626:	bf00      	nop
1a002628:	10000478 	.word	0x10000478
1a00262c:	10000884 	.word	0x10000884
1a002630:	10000a48 	.word	0x10000a48

1a002634 <__libc_init_array>:
1a002634:	b570      	push	{r4, r5, r6, lr}
1a002636:	4e0d      	ldr	r6, [pc, #52]	; (1a00266c <__libc_init_array+0x38>)
1a002638:	4d0d      	ldr	r5, [pc, #52]	; (1a002670 <__libc_init_array+0x3c>)
1a00263a:	1b76      	subs	r6, r6, r5
1a00263c:	10b6      	asrs	r6, r6, #2
1a00263e:	d006      	beq.n	1a00264e <__libc_init_array+0x1a>
1a002640:	2400      	movs	r4, #0
1a002642:	3401      	adds	r4, #1
1a002644:	f855 3b04 	ldr.w	r3, [r5], #4
1a002648:	4798      	blx	r3
1a00264a:	42a6      	cmp	r6, r4
1a00264c:	d1f9      	bne.n	1a002642 <__libc_init_array+0xe>
1a00264e:	4e09      	ldr	r6, [pc, #36]	; (1a002674 <__libc_init_array+0x40>)
1a002650:	4d09      	ldr	r5, [pc, #36]	; (1a002678 <__libc_init_array+0x44>)
1a002652:	1b76      	subs	r6, r6, r5
1a002654:	f7fd ff81 	bl	1a00055a <_init>
1a002658:	10b6      	asrs	r6, r6, #2
1a00265a:	d006      	beq.n	1a00266a <__libc_init_array+0x36>
1a00265c:	2400      	movs	r4, #0
1a00265e:	3401      	adds	r4, #1
1a002660:	f855 3b04 	ldr.w	r3, [r5], #4
1a002664:	4798      	blx	r3
1a002666:	42a6      	cmp	r6, r4
1a002668:	d1f9      	bne.n	1a00265e <__libc_init_array+0x2a>
1a00266a:	bd70      	pop	{r4, r5, r6, pc}
1a00266c:	1a006b8c 	.word	0x1a006b8c
1a002670:	1a006b8c 	.word	0x1a006b8c
1a002674:	1a006b90 	.word	0x1a006b90
1a002678:	1a006b8c 	.word	0x1a006b8c

1a00267c <__retarget_lock_acquire_recursive>:
1a00267c:	4770      	bx	lr
1a00267e:	bf00      	nop

1a002680 <__retarget_lock_release_recursive>:
1a002680:	4770      	bx	lr
1a002682:	bf00      	nop

1a002684 <_malloc_r>:
1a002684:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a002688:	f101 050b 	add.w	r5, r1, #11
1a00268c:	2d16      	cmp	r5, #22
1a00268e:	b083      	sub	sp, #12
1a002690:	4606      	mov	r6, r0
1a002692:	d823      	bhi.n	1a0026dc <_malloc_r+0x58>
1a002694:	2910      	cmp	r1, #16
1a002696:	f200 80b9 	bhi.w	1a00280c <_malloc_r+0x188>
1a00269a:	f000 fb95 	bl	1a002dc8 <__malloc_lock>
1a00269e:	2510      	movs	r5, #16
1a0026a0:	2318      	movs	r3, #24
1a0026a2:	2002      	movs	r0, #2
1a0026a4:	4fba      	ldr	r7, [pc, #744]	; (1a002990 <_malloc_r+0x30c>)
1a0026a6:	443b      	add	r3, r7
1a0026a8:	f1a3 0208 	sub.w	r2, r3, #8
1a0026ac:	685c      	ldr	r4, [r3, #4]
1a0026ae:	4294      	cmp	r4, r2
1a0026b0:	f000 80b9 	beq.w	1a002826 <_malloc_r+0x1a2>
1a0026b4:	6863      	ldr	r3, [r4, #4]
1a0026b6:	f023 0303 	bic.w	r3, r3, #3
1a0026ba:	4423      	add	r3, r4
1a0026bc:	e9d4 5102 	ldrd	r5, r1, [r4, #8]
1a0026c0:	685a      	ldr	r2, [r3, #4]
1a0026c2:	60e9      	str	r1, [r5, #12]
1a0026c4:	f042 0201 	orr.w	r2, r2, #1
1a0026c8:	4630      	mov	r0, r6
1a0026ca:	608d      	str	r5, [r1, #8]
1a0026cc:	605a      	str	r2, [r3, #4]
1a0026ce:	f000 fb81 	bl	1a002dd4 <__malloc_unlock>
1a0026d2:	3408      	adds	r4, #8
1a0026d4:	4620      	mov	r0, r4
1a0026d6:	b003      	add	sp, #12
1a0026d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a0026dc:	f035 0507 	bics.w	r5, r5, #7
1a0026e0:	f100 8094 	bmi.w	1a00280c <_malloc_r+0x188>
1a0026e4:	42a9      	cmp	r1, r5
1a0026e6:	f200 8091 	bhi.w	1a00280c <_malloc_r+0x188>
1a0026ea:	f000 fb6d 	bl	1a002dc8 <__malloc_lock>
1a0026ee:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
1a0026f2:	f0c0 81a2 	bcc.w	1a002a3a <_malloc_r+0x3b6>
1a0026f6:	0a6b      	lsrs	r3, r5, #9
1a0026f8:	f000 808f 	beq.w	1a00281a <_malloc_r+0x196>
1a0026fc:	2b04      	cmp	r3, #4
1a0026fe:	f200 8178 	bhi.w	1a0029f2 <_malloc_r+0x36e>
1a002702:	09ab      	lsrs	r3, r5, #6
1a002704:	f103 0039 	add.w	r0, r3, #57	; 0x39
1a002708:	f103 0c38 	add.w	ip, r3, #56	; 0x38
1a00270c:	00c3      	lsls	r3, r0, #3
1a00270e:	4fa0      	ldr	r7, [pc, #640]	; (1a002990 <_malloc_r+0x30c>)
1a002710:	443b      	add	r3, r7
1a002712:	f1a3 0108 	sub.w	r1, r3, #8
1a002716:	685c      	ldr	r4, [r3, #4]
1a002718:	42a1      	cmp	r1, r4
1a00271a:	d106      	bne.n	1a00272a <_malloc_r+0xa6>
1a00271c:	e00c      	b.n	1a002738 <_malloc_r+0xb4>
1a00271e:	2a00      	cmp	r2, #0
1a002720:	f280 8127 	bge.w	1a002972 <_malloc_r+0x2ee>
1a002724:	68e4      	ldr	r4, [r4, #12]
1a002726:	42a1      	cmp	r1, r4
1a002728:	d006      	beq.n	1a002738 <_malloc_r+0xb4>
1a00272a:	6863      	ldr	r3, [r4, #4]
1a00272c:	f023 0303 	bic.w	r3, r3, #3
1a002730:	1b5a      	subs	r2, r3, r5
1a002732:	2a0f      	cmp	r2, #15
1a002734:	ddf3      	ble.n	1a00271e <_malloc_r+0x9a>
1a002736:	4660      	mov	r0, ip
1a002738:	693c      	ldr	r4, [r7, #16]
1a00273a:	f8df c268 	ldr.w	ip, [pc, #616]	; 1a0029a4 <_malloc_r+0x320>
1a00273e:	4564      	cmp	r4, ip
1a002740:	d07c      	beq.n	1a00283c <_malloc_r+0x1b8>
1a002742:	6863      	ldr	r3, [r4, #4]
1a002744:	f023 0303 	bic.w	r3, r3, #3
1a002748:	1b5a      	subs	r2, r3, r5
1a00274a:	2a0f      	cmp	r2, #15
1a00274c:	f300 8183 	bgt.w	1a002a56 <_malloc_r+0x3d2>
1a002750:	2a00      	cmp	r2, #0
1a002752:	e9c7 cc04 	strd	ip, ip, [r7, #16]
1a002756:	f280 8174 	bge.w	1a002a42 <_malloc_r+0x3be>
1a00275a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
1a00275e:	f080 8125 	bcs.w	1a0029ac <_malloc_r+0x328>
1a002762:	08db      	lsrs	r3, r3, #3
1a002764:	1c59      	adds	r1, r3, #1
1a002766:	687a      	ldr	r2, [r7, #4]
1a002768:	f857 8031 	ldr.w	r8, [r7, r1, lsl #3]
1a00276c:	f8c4 8008 	str.w	r8, [r4, #8]
1a002770:	f04f 0e01 	mov.w	lr, #1
1a002774:	109b      	asrs	r3, r3, #2
1a002776:	fa0e f303 	lsl.w	r3, lr, r3
1a00277a:	eb07 0ec1 	add.w	lr, r7, r1, lsl #3
1a00277e:	4313      	orrs	r3, r2
1a002780:	f1ae 0208 	sub.w	r2, lr, #8
1a002784:	60e2      	str	r2, [r4, #12]
1a002786:	607b      	str	r3, [r7, #4]
1a002788:	f847 4031 	str.w	r4, [r7, r1, lsl #3]
1a00278c:	f8c8 400c 	str.w	r4, [r8, #12]
1a002790:	1082      	asrs	r2, r0, #2
1a002792:	2401      	movs	r4, #1
1a002794:	4094      	lsls	r4, r2
1a002796:	429c      	cmp	r4, r3
1a002798:	d856      	bhi.n	1a002848 <_malloc_r+0x1c4>
1a00279a:	421c      	tst	r4, r3
1a00279c:	d106      	bne.n	1a0027ac <_malloc_r+0x128>
1a00279e:	f020 0003 	bic.w	r0, r0, #3
1a0027a2:	0064      	lsls	r4, r4, #1
1a0027a4:	421c      	tst	r4, r3
1a0027a6:	f100 0004 	add.w	r0, r0, #4
1a0027aa:	d0fa      	beq.n	1a0027a2 <_malloc_r+0x11e>
1a0027ac:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
1a0027b0:	46ce      	mov	lr, r9
1a0027b2:	4680      	mov	r8, r0
1a0027b4:	f8de 300c 	ldr.w	r3, [lr, #12]
1a0027b8:	459e      	cmp	lr, r3
1a0027ba:	d107      	bne.n	1a0027cc <_malloc_r+0x148>
1a0027bc:	e125      	b.n	1a002a0a <_malloc_r+0x386>
1a0027be:	2a00      	cmp	r2, #0
1a0027c0:	f280 812c 	bge.w	1a002a1c <_malloc_r+0x398>
1a0027c4:	68db      	ldr	r3, [r3, #12]
1a0027c6:	459e      	cmp	lr, r3
1a0027c8:	f000 811f 	beq.w	1a002a0a <_malloc_r+0x386>
1a0027cc:	6859      	ldr	r1, [r3, #4]
1a0027ce:	f021 0103 	bic.w	r1, r1, #3
1a0027d2:	1b4a      	subs	r2, r1, r5
1a0027d4:	2a0f      	cmp	r2, #15
1a0027d6:	ddf2      	ble.n	1a0027be <_malloc_r+0x13a>
1a0027d8:	e9d3 8e02 	ldrd	r8, lr, [r3, #8]
1a0027dc:	195c      	adds	r4, r3, r5
1a0027de:	f045 0501 	orr.w	r5, r5, #1
1a0027e2:	605d      	str	r5, [r3, #4]
1a0027e4:	f042 0501 	orr.w	r5, r2, #1
1a0027e8:	f8c8 e00c 	str.w	lr, [r8, #12]
1a0027ec:	4630      	mov	r0, r6
1a0027ee:	f8ce 8008 	str.w	r8, [lr, #8]
1a0027f2:	e9c7 4404 	strd	r4, r4, [r7, #16]
1a0027f6:	e9c4 cc02 	strd	ip, ip, [r4, #8]
1a0027fa:	6065      	str	r5, [r4, #4]
1a0027fc:	505a      	str	r2, [r3, r1]
1a0027fe:	9300      	str	r3, [sp, #0]
1a002800:	f000 fae8 	bl	1a002dd4 <__malloc_unlock>
1a002804:	9b00      	ldr	r3, [sp, #0]
1a002806:	f103 0408 	add.w	r4, r3, #8
1a00280a:	e002      	b.n	1a002812 <_malloc_r+0x18e>
1a00280c:	230c      	movs	r3, #12
1a00280e:	6033      	str	r3, [r6, #0]
1a002810:	2400      	movs	r4, #0
1a002812:	4620      	mov	r0, r4
1a002814:	b003      	add	sp, #12
1a002816:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a00281a:	f44f 7300 	mov.w	r3, #512	; 0x200
1a00281e:	2040      	movs	r0, #64	; 0x40
1a002820:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
1a002824:	e773      	b.n	1a00270e <_malloc_r+0x8a>
1a002826:	68dc      	ldr	r4, [r3, #12]
1a002828:	42a3      	cmp	r3, r4
1a00282a:	bf08      	it	eq
1a00282c:	3002      	addeq	r0, #2
1a00282e:	f47f af41 	bne.w	1a0026b4 <_malloc_r+0x30>
1a002832:	693c      	ldr	r4, [r7, #16]
1a002834:	f8df c16c 	ldr.w	ip, [pc, #364]	; 1a0029a4 <_malloc_r+0x320>
1a002838:	4564      	cmp	r4, ip
1a00283a:	d182      	bne.n	1a002742 <_malloc_r+0xbe>
1a00283c:	687b      	ldr	r3, [r7, #4]
1a00283e:	1082      	asrs	r2, r0, #2
1a002840:	2401      	movs	r4, #1
1a002842:	4094      	lsls	r4, r2
1a002844:	429c      	cmp	r4, r3
1a002846:	d9a8      	bls.n	1a00279a <_malloc_r+0x116>
1a002848:	68bc      	ldr	r4, [r7, #8]
1a00284a:	6863      	ldr	r3, [r4, #4]
1a00284c:	f023 0803 	bic.w	r8, r3, #3
1a002850:	45a8      	cmp	r8, r5
1a002852:	d303      	bcc.n	1a00285c <_malloc_r+0x1d8>
1a002854:	eba8 0305 	sub.w	r3, r8, r5
1a002858:	2b0f      	cmp	r3, #15
1a00285a:	dc7a      	bgt.n	1a002952 <_malloc_r+0x2ce>
1a00285c:	f8df 9148 	ldr.w	r9, [pc, #328]	; 1a0029a8 <_malloc_r+0x324>
1a002860:	4b4c      	ldr	r3, [pc, #304]	; (1a002994 <_malloc_r+0x310>)
1a002862:	f8d9 2000 	ldr.w	r2, [r9]
1a002866:	681b      	ldr	r3, [r3, #0]
1a002868:	3201      	adds	r2, #1
1a00286a:	442b      	add	r3, r5
1a00286c:	eb04 0a08 	add.w	sl, r4, r8
1a002870:	f000 813c 	beq.w	1a002aec <_malloc_r+0x468>
1a002874:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
1a002878:	330f      	adds	r3, #15
1a00287a:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
1a00287e:	f02b 0b0f 	bic.w	fp, fp, #15
1a002882:	4659      	mov	r1, fp
1a002884:	4630      	mov	r0, r6
1a002886:	f7fd fe69 	bl	1a00055c <_sbrk_r>
1a00288a:	1c41      	adds	r1, r0, #1
1a00288c:	4602      	mov	r2, r0
1a00288e:	f000 80fc 	beq.w	1a002a8a <_malloc_r+0x406>
1a002892:	4582      	cmp	sl, r0
1a002894:	f200 80f7 	bhi.w	1a002a86 <_malloc_r+0x402>
1a002898:	4b3f      	ldr	r3, [pc, #252]	; (1a002998 <_malloc_r+0x314>)
1a00289a:	6818      	ldr	r0, [r3, #0]
1a00289c:	4458      	add	r0, fp
1a00289e:	6018      	str	r0, [r3, #0]
1a0028a0:	4601      	mov	r1, r0
1a0028a2:	f000 8157 	beq.w	1a002b54 <_malloc_r+0x4d0>
1a0028a6:	f8d9 0000 	ldr.w	r0, [r9]
1a0028aa:	9301      	str	r3, [sp, #4]
1a0028ac:	3001      	adds	r0, #1
1a0028ae:	bf1b      	ittet	ne
1a0028b0:	eba2 0a0a 	subne.w	sl, r2, sl
1a0028b4:	4451      	addne	r1, sl
1a0028b6:	f8c9 2000 	streq.w	r2, [r9]
1a0028ba:	6019      	strne	r1, [r3, #0]
1a0028bc:	f012 0a07 	ands.w	sl, r2, #7
1a0028c0:	f000 8120 	beq.w	1a002b04 <_malloc_r+0x480>
1a0028c4:	f1ca 0108 	rsb	r1, sl, #8
1a0028c8:	440a      	add	r2, r1
1a0028ca:	f5ca 5180 	rsb	r1, sl, #4096	; 0x1000
1a0028ce:	4493      	add	fp, r2
1a0028d0:	3108      	adds	r1, #8
1a0028d2:	eba1 010b 	sub.w	r1, r1, fp
1a0028d6:	f3c1 090b 	ubfx	r9, r1, #0, #12
1a0028da:	4649      	mov	r1, r9
1a0028dc:	4630      	mov	r0, r6
1a0028de:	9200      	str	r2, [sp, #0]
1a0028e0:	f7fd fe3c 	bl	1a00055c <_sbrk_r>
1a0028e4:	1c42      	adds	r2, r0, #1
1a0028e6:	e9dd 2300 	ldrd	r2, r3, [sp]
1a0028ea:	f000 8158 	beq.w	1a002b9e <_malloc_r+0x51a>
1a0028ee:	1a80      	subs	r0, r0, r2
1a0028f0:	eb00 0b09 	add.w	fp, r0, r9
1a0028f4:	6818      	ldr	r0, [r3, #0]
1a0028f6:	60ba      	str	r2, [r7, #8]
1a0028f8:	f04b 0101 	orr.w	r1, fp, #1
1a0028fc:	4448      	add	r0, r9
1a0028fe:	42bc      	cmp	r4, r7
1a002900:	6051      	str	r1, [r2, #4]
1a002902:	6018      	str	r0, [r3, #0]
1a002904:	f000 8132 	beq.w	1a002b6c <_malloc_r+0x4e8>
1a002908:	f1b8 0f0f 	cmp.w	r8, #15
1a00290c:	f240 8130 	bls.w	1a002b70 <_malloc_r+0x4ec>
1a002910:	6861      	ldr	r1, [r4, #4]
1a002912:	f1a8 0c0c 	sub.w	ip, r8, #12
1a002916:	f02c 0c07 	bic.w	ip, ip, #7
1a00291a:	f001 0101 	and.w	r1, r1, #1
1a00291e:	eb04 0e0c 	add.w	lr, r4, ip
1a002922:	ea41 010c 	orr.w	r1, r1, ip
1a002926:	f04f 0805 	mov.w	r8, #5
1a00292a:	f1bc 0f0f 	cmp.w	ip, #15
1a00292e:	6061      	str	r1, [r4, #4]
1a002930:	e9ce 8801 	strd	r8, r8, [lr, #4]
1a002934:	f200 813b 	bhi.w	1a002bae <_malloc_r+0x52a>
1a002938:	6851      	ldr	r1, [r2, #4]
1a00293a:	4614      	mov	r4, r2
1a00293c:	4b17      	ldr	r3, [pc, #92]	; (1a00299c <_malloc_r+0x318>)
1a00293e:	681a      	ldr	r2, [r3, #0]
1a002940:	4282      	cmp	r2, r0
1a002942:	bf38      	it	cc
1a002944:	6018      	strcc	r0, [r3, #0]
1a002946:	4b16      	ldr	r3, [pc, #88]	; (1a0029a0 <_malloc_r+0x31c>)
1a002948:	681a      	ldr	r2, [r3, #0]
1a00294a:	4282      	cmp	r2, r0
1a00294c:	bf38      	it	cc
1a00294e:	6018      	strcc	r0, [r3, #0]
1a002950:	e09d      	b.n	1a002a8e <_malloc_r+0x40a>
1a002952:	1962      	adds	r2, r4, r5
1a002954:	f043 0301 	orr.w	r3, r3, #1
1a002958:	f045 0501 	orr.w	r5, r5, #1
1a00295c:	6065      	str	r5, [r4, #4]
1a00295e:	4630      	mov	r0, r6
1a002960:	60ba      	str	r2, [r7, #8]
1a002962:	6053      	str	r3, [r2, #4]
1a002964:	f000 fa36 	bl	1a002dd4 <__malloc_unlock>
1a002968:	3408      	adds	r4, #8
1a00296a:	4620      	mov	r0, r4
1a00296c:	b003      	add	sp, #12
1a00296e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a002972:	4423      	add	r3, r4
1a002974:	68e1      	ldr	r1, [r4, #12]
1a002976:	685a      	ldr	r2, [r3, #4]
1a002978:	68a5      	ldr	r5, [r4, #8]
1a00297a:	f042 0201 	orr.w	r2, r2, #1
1a00297e:	60e9      	str	r1, [r5, #12]
1a002980:	4630      	mov	r0, r6
1a002982:	608d      	str	r5, [r1, #8]
1a002984:	605a      	str	r2, [r3, #4]
1a002986:	f000 fa25 	bl	1a002dd4 <__malloc_unlock>
1a00298a:	3408      	adds	r4, #8
1a00298c:	e741      	b.n	1a002812 <_malloc_r+0x18e>
1a00298e:	bf00      	nop
1a002990:	10000478 	.word	0x10000478
1a002994:	10000a48 	.word	0x10000a48
1a002998:	10000a18 	.word	0x10000a18
1a00299c:	10000a40 	.word	0x10000a40
1a0029a0:	10000a44 	.word	0x10000a44
1a0029a4:	10000480 	.word	0x10000480
1a0029a8:	10000880 	.word	0x10000880
1a0029ac:	0a5a      	lsrs	r2, r3, #9
1a0029ae:	2a04      	cmp	r2, #4
1a0029b0:	d963      	bls.n	1a002a7a <_malloc_r+0x3f6>
1a0029b2:	2a14      	cmp	r2, #20
1a0029b4:	f200 80b7 	bhi.w	1a002b26 <_malloc_r+0x4a2>
1a0029b8:	f102 015c 	add.w	r1, r2, #92	; 0x5c
1a0029bc:	00c9      	lsls	r1, r1, #3
1a0029be:	325b      	adds	r2, #91	; 0x5b
1a0029c0:	eb07 0e01 	add.w	lr, r7, r1
1a0029c4:	5879      	ldr	r1, [r7, r1]
1a0029c6:	f1ae 0e08 	sub.w	lr, lr, #8
1a0029ca:	458e      	cmp	lr, r1
1a0029cc:	f000 8091 	beq.w	1a002af2 <_malloc_r+0x46e>
1a0029d0:	684a      	ldr	r2, [r1, #4]
1a0029d2:	f022 0203 	bic.w	r2, r2, #3
1a0029d6:	429a      	cmp	r2, r3
1a0029d8:	d902      	bls.n	1a0029e0 <_malloc_r+0x35c>
1a0029da:	6889      	ldr	r1, [r1, #8]
1a0029dc:	458e      	cmp	lr, r1
1a0029de:	d1f7      	bne.n	1a0029d0 <_malloc_r+0x34c>
1a0029e0:	f8d1 e00c 	ldr.w	lr, [r1, #12]
1a0029e4:	687b      	ldr	r3, [r7, #4]
1a0029e6:	e9c4 1e02 	strd	r1, lr, [r4, #8]
1a0029ea:	f8ce 4008 	str.w	r4, [lr, #8]
1a0029ee:	60cc      	str	r4, [r1, #12]
1a0029f0:	e6ce      	b.n	1a002790 <_malloc_r+0x10c>
1a0029f2:	2b14      	cmp	r3, #20
1a0029f4:	d959      	bls.n	1a002aaa <_malloc_r+0x426>
1a0029f6:	2b54      	cmp	r3, #84	; 0x54
1a0029f8:	f200 809d 	bhi.w	1a002b36 <_malloc_r+0x4b2>
1a0029fc:	0b2b      	lsrs	r3, r5, #12
1a0029fe:	f103 006f 	add.w	r0, r3, #111	; 0x6f
1a002a02:	f103 0c6e 	add.w	ip, r3, #110	; 0x6e
1a002a06:	00c3      	lsls	r3, r0, #3
1a002a08:	e681      	b.n	1a00270e <_malloc_r+0x8a>
1a002a0a:	f108 0801 	add.w	r8, r8, #1
1a002a0e:	f018 0f03 	tst.w	r8, #3
1a002a12:	f10e 0e08 	add.w	lr, lr, #8
1a002a16:	f47f aecd 	bne.w	1a0027b4 <_malloc_r+0x130>
1a002a1a:	e051      	b.n	1a002ac0 <_malloc_r+0x43c>
1a002a1c:	4419      	add	r1, r3
1a002a1e:	461c      	mov	r4, r3
1a002a20:	684a      	ldr	r2, [r1, #4]
1a002a22:	68db      	ldr	r3, [r3, #12]
1a002a24:	f854 5f08 	ldr.w	r5, [r4, #8]!
1a002a28:	f042 0201 	orr.w	r2, r2, #1
1a002a2c:	604a      	str	r2, [r1, #4]
1a002a2e:	4630      	mov	r0, r6
1a002a30:	60eb      	str	r3, [r5, #12]
1a002a32:	609d      	str	r5, [r3, #8]
1a002a34:	f000 f9ce 	bl	1a002dd4 <__malloc_unlock>
1a002a38:	e6eb      	b.n	1a002812 <_malloc_r+0x18e>
1a002a3a:	08e8      	lsrs	r0, r5, #3
1a002a3c:	f105 0308 	add.w	r3, r5, #8
1a002a40:	e630      	b.n	1a0026a4 <_malloc_r+0x20>
1a002a42:	4423      	add	r3, r4
1a002a44:	4630      	mov	r0, r6
1a002a46:	685a      	ldr	r2, [r3, #4]
1a002a48:	f042 0201 	orr.w	r2, r2, #1
1a002a4c:	605a      	str	r2, [r3, #4]
1a002a4e:	3408      	adds	r4, #8
1a002a50:	f000 f9c0 	bl	1a002dd4 <__malloc_unlock>
1a002a54:	e6dd      	b.n	1a002812 <_malloc_r+0x18e>
1a002a56:	1961      	adds	r1, r4, r5
1a002a58:	f045 0e01 	orr.w	lr, r5, #1
1a002a5c:	f042 0501 	orr.w	r5, r2, #1
1a002a60:	f8c4 e004 	str.w	lr, [r4, #4]
1a002a64:	4630      	mov	r0, r6
1a002a66:	e9c7 1104 	strd	r1, r1, [r7, #16]
1a002a6a:	e9c1 cc02 	strd	ip, ip, [r1, #8]
1a002a6e:	604d      	str	r5, [r1, #4]
1a002a70:	50e2      	str	r2, [r4, r3]
1a002a72:	f000 f9af 	bl	1a002dd4 <__malloc_unlock>
1a002a76:	3408      	adds	r4, #8
1a002a78:	e6cb      	b.n	1a002812 <_malloc_r+0x18e>
1a002a7a:	099a      	lsrs	r2, r3, #6
1a002a7c:	f102 0139 	add.w	r1, r2, #57	; 0x39
1a002a80:	00c9      	lsls	r1, r1, #3
1a002a82:	3238      	adds	r2, #56	; 0x38
1a002a84:	e79c      	b.n	1a0029c0 <_malloc_r+0x33c>
1a002a86:	42bc      	cmp	r4, r7
1a002a88:	d05f      	beq.n	1a002b4a <_malloc_r+0x4c6>
1a002a8a:	68bc      	ldr	r4, [r7, #8]
1a002a8c:	6861      	ldr	r1, [r4, #4]
1a002a8e:	f021 0b03 	bic.w	fp, r1, #3
1a002a92:	45ab      	cmp	fp, r5
1a002a94:	ebab 0305 	sub.w	r3, fp, r5
1a002a98:	d302      	bcc.n	1a002aa0 <_malloc_r+0x41c>
1a002a9a:	2b0f      	cmp	r3, #15
1a002a9c:	f73f af59 	bgt.w	1a002952 <_malloc_r+0x2ce>
1a002aa0:	4630      	mov	r0, r6
1a002aa2:	f000 f997 	bl	1a002dd4 <__malloc_unlock>
1a002aa6:	2400      	movs	r4, #0
1a002aa8:	e6b3      	b.n	1a002812 <_malloc_r+0x18e>
1a002aaa:	f103 005c 	add.w	r0, r3, #92	; 0x5c
1a002aae:	f103 0c5b 	add.w	ip, r3, #91	; 0x5b
1a002ab2:	00c3      	lsls	r3, r0, #3
1a002ab4:	e62b      	b.n	1a00270e <_malloc_r+0x8a>
1a002ab6:	f859 3908 	ldr.w	r3, [r9], #-8
1a002aba:	454b      	cmp	r3, r9
1a002abc:	f040 8096 	bne.w	1a002bec <_malloc_r+0x568>
1a002ac0:	f010 0f03 	tst.w	r0, #3
1a002ac4:	f100 30ff 	add.w	r0, r0, #4294967295
1a002ac8:	d1f5      	bne.n	1a002ab6 <_malloc_r+0x432>
1a002aca:	687b      	ldr	r3, [r7, #4]
1a002acc:	ea23 0304 	bic.w	r3, r3, r4
1a002ad0:	607b      	str	r3, [r7, #4]
1a002ad2:	0064      	lsls	r4, r4, #1
1a002ad4:	429c      	cmp	r4, r3
1a002ad6:	f63f aeb7 	bhi.w	1a002848 <_malloc_r+0x1c4>
1a002ada:	b91c      	cbnz	r4, 1a002ae4 <_malloc_r+0x460>
1a002adc:	e6b4      	b.n	1a002848 <_malloc_r+0x1c4>
1a002ade:	0064      	lsls	r4, r4, #1
1a002ae0:	f108 0804 	add.w	r8, r8, #4
1a002ae4:	421c      	tst	r4, r3
1a002ae6:	d0fa      	beq.n	1a002ade <_malloc_r+0x45a>
1a002ae8:	4640      	mov	r0, r8
1a002aea:	e65f      	b.n	1a0027ac <_malloc_r+0x128>
1a002aec:	f103 0b10 	add.w	fp, r3, #16
1a002af0:	e6c7      	b.n	1a002882 <_malloc_r+0x1fe>
1a002af2:	687b      	ldr	r3, [r7, #4]
1a002af4:	1092      	asrs	r2, r2, #2
1a002af6:	f04f 0801 	mov.w	r8, #1
1a002afa:	fa08 f202 	lsl.w	r2, r8, r2
1a002afe:	4313      	orrs	r3, r2
1a002b00:	607b      	str	r3, [r7, #4]
1a002b02:	e770      	b.n	1a0029e6 <_malloc_r+0x362>
1a002b04:	eb02 000b 	add.w	r0, r2, fp
1a002b08:	4240      	negs	r0, r0
1a002b0a:	f3c0 090b 	ubfx	r9, r0, #0, #12
1a002b0e:	4649      	mov	r1, r9
1a002b10:	4630      	mov	r0, r6
1a002b12:	9200      	str	r2, [sp, #0]
1a002b14:	f7fd fd22 	bl	1a00055c <_sbrk_r>
1a002b18:	1c43      	adds	r3, r0, #1
1a002b1a:	e9dd 2300 	ldrd	r2, r3, [sp]
1a002b1e:	f47f aee6 	bne.w	1a0028ee <_malloc_r+0x26a>
1a002b22:	46d1      	mov	r9, sl
1a002b24:	e6e6      	b.n	1a0028f4 <_malloc_r+0x270>
1a002b26:	2a54      	cmp	r2, #84	; 0x54
1a002b28:	d825      	bhi.n	1a002b76 <_malloc_r+0x4f2>
1a002b2a:	0b1a      	lsrs	r2, r3, #12
1a002b2c:	f102 016f 	add.w	r1, r2, #111	; 0x6f
1a002b30:	00c9      	lsls	r1, r1, #3
1a002b32:	326e      	adds	r2, #110	; 0x6e
1a002b34:	e744      	b.n	1a0029c0 <_malloc_r+0x33c>
1a002b36:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
1a002b3a:	d825      	bhi.n	1a002b88 <_malloc_r+0x504>
1a002b3c:	0beb      	lsrs	r3, r5, #15
1a002b3e:	f103 0078 	add.w	r0, r3, #120	; 0x78
1a002b42:	f103 0c77 	add.w	ip, r3, #119	; 0x77
1a002b46:	00c3      	lsls	r3, r0, #3
1a002b48:	e5e1      	b.n	1a00270e <_malloc_r+0x8a>
1a002b4a:	4b29      	ldr	r3, [pc, #164]	; (1a002bf0 <_malloc_r+0x56c>)
1a002b4c:	6819      	ldr	r1, [r3, #0]
1a002b4e:	4459      	add	r1, fp
1a002b50:	6019      	str	r1, [r3, #0]
1a002b52:	e6a8      	b.n	1a0028a6 <_malloc_r+0x222>
1a002b54:	f3ca 0c0b 	ubfx	ip, sl, #0, #12
1a002b58:	f1bc 0f00 	cmp.w	ip, #0
1a002b5c:	f47f aea3 	bne.w	1a0028a6 <_malloc_r+0x222>
1a002b60:	44c3      	add	fp, r8
1a002b62:	68bc      	ldr	r4, [r7, #8]
1a002b64:	f04b 0101 	orr.w	r1, fp, #1
1a002b68:	6061      	str	r1, [r4, #4]
1a002b6a:	e6e7      	b.n	1a00293c <_malloc_r+0x2b8>
1a002b6c:	4614      	mov	r4, r2
1a002b6e:	e6e5      	b.n	1a00293c <_malloc_r+0x2b8>
1a002b70:	2301      	movs	r3, #1
1a002b72:	6053      	str	r3, [r2, #4]
1a002b74:	e794      	b.n	1a002aa0 <_malloc_r+0x41c>
1a002b76:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
1a002b7a:	d823      	bhi.n	1a002bc4 <_malloc_r+0x540>
1a002b7c:	0bda      	lsrs	r2, r3, #15
1a002b7e:	f102 0178 	add.w	r1, r2, #120	; 0x78
1a002b82:	00c9      	lsls	r1, r1, #3
1a002b84:	3277      	adds	r2, #119	; 0x77
1a002b86:	e71b      	b.n	1a0029c0 <_malloc_r+0x33c>
1a002b88:	f240 5254 	movw	r2, #1364	; 0x554
1a002b8c:	4293      	cmp	r3, r2
1a002b8e:	d823      	bhi.n	1a002bd8 <_malloc_r+0x554>
1a002b90:	0cab      	lsrs	r3, r5, #18
1a002b92:	f103 007d 	add.w	r0, r3, #125	; 0x7d
1a002b96:	f103 0c7c 	add.w	ip, r3, #124	; 0x7c
1a002b9a:	00c3      	lsls	r3, r0, #3
1a002b9c:	e5b7      	b.n	1a00270e <_malloc_r+0x8a>
1a002b9e:	f1aa 0a08 	sub.w	sl, sl, #8
1a002ba2:	44d3      	add	fp, sl
1a002ba4:	ebab 0b02 	sub.w	fp, fp, r2
1a002ba8:	f04f 0900 	mov.w	r9, #0
1a002bac:	e6a2      	b.n	1a0028f4 <_malloc_r+0x270>
1a002bae:	f104 0108 	add.w	r1, r4, #8
1a002bb2:	4630      	mov	r0, r6
1a002bb4:	9300      	str	r3, [sp, #0]
1a002bb6:	f7ff fc47 	bl	1a002448 <_free_r>
1a002bba:	68bc      	ldr	r4, [r7, #8]
1a002bbc:	9b00      	ldr	r3, [sp, #0]
1a002bbe:	6861      	ldr	r1, [r4, #4]
1a002bc0:	6818      	ldr	r0, [r3, #0]
1a002bc2:	e6bb      	b.n	1a00293c <_malloc_r+0x2b8>
1a002bc4:	f240 5154 	movw	r1, #1364	; 0x554
1a002bc8:	428a      	cmp	r2, r1
1a002bca:	d80b      	bhi.n	1a002be4 <_malloc_r+0x560>
1a002bcc:	0c9a      	lsrs	r2, r3, #18
1a002bce:	f102 017d 	add.w	r1, r2, #125	; 0x7d
1a002bd2:	00c9      	lsls	r1, r1, #3
1a002bd4:	327c      	adds	r2, #124	; 0x7c
1a002bd6:	e6f3      	b.n	1a0029c0 <_malloc_r+0x33c>
1a002bd8:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
1a002bdc:	207f      	movs	r0, #127	; 0x7f
1a002bde:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
1a002be2:	e594      	b.n	1a00270e <_malloc_r+0x8a>
1a002be4:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
1a002be8:	227e      	movs	r2, #126	; 0x7e
1a002bea:	e6e9      	b.n	1a0029c0 <_malloc_r+0x33c>
1a002bec:	687b      	ldr	r3, [r7, #4]
1a002bee:	e770      	b.n	1a002ad2 <_malloc_r+0x44e>
1a002bf0:	10000a18 	.word	0x10000a18

1a002bf4 <memcpy>:
1a002bf4:	4684      	mov	ip, r0
1a002bf6:	ea41 0300 	orr.w	r3, r1, r0
1a002bfa:	f013 0303 	ands.w	r3, r3, #3
1a002bfe:	d16d      	bne.n	1a002cdc <memcpy+0xe8>
1a002c00:	3a40      	subs	r2, #64	; 0x40
1a002c02:	d341      	bcc.n	1a002c88 <memcpy+0x94>
1a002c04:	f851 3b04 	ldr.w	r3, [r1], #4
1a002c08:	f840 3b04 	str.w	r3, [r0], #4
1a002c0c:	f851 3b04 	ldr.w	r3, [r1], #4
1a002c10:	f840 3b04 	str.w	r3, [r0], #4
1a002c14:	f851 3b04 	ldr.w	r3, [r1], #4
1a002c18:	f840 3b04 	str.w	r3, [r0], #4
1a002c1c:	f851 3b04 	ldr.w	r3, [r1], #4
1a002c20:	f840 3b04 	str.w	r3, [r0], #4
1a002c24:	f851 3b04 	ldr.w	r3, [r1], #4
1a002c28:	f840 3b04 	str.w	r3, [r0], #4
1a002c2c:	f851 3b04 	ldr.w	r3, [r1], #4
1a002c30:	f840 3b04 	str.w	r3, [r0], #4
1a002c34:	f851 3b04 	ldr.w	r3, [r1], #4
1a002c38:	f840 3b04 	str.w	r3, [r0], #4
1a002c3c:	f851 3b04 	ldr.w	r3, [r1], #4
1a002c40:	f840 3b04 	str.w	r3, [r0], #4
1a002c44:	f851 3b04 	ldr.w	r3, [r1], #4
1a002c48:	f840 3b04 	str.w	r3, [r0], #4
1a002c4c:	f851 3b04 	ldr.w	r3, [r1], #4
1a002c50:	f840 3b04 	str.w	r3, [r0], #4
1a002c54:	f851 3b04 	ldr.w	r3, [r1], #4
1a002c58:	f840 3b04 	str.w	r3, [r0], #4
1a002c5c:	f851 3b04 	ldr.w	r3, [r1], #4
1a002c60:	f840 3b04 	str.w	r3, [r0], #4
1a002c64:	f851 3b04 	ldr.w	r3, [r1], #4
1a002c68:	f840 3b04 	str.w	r3, [r0], #4
1a002c6c:	f851 3b04 	ldr.w	r3, [r1], #4
1a002c70:	f840 3b04 	str.w	r3, [r0], #4
1a002c74:	f851 3b04 	ldr.w	r3, [r1], #4
1a002c78:	f840 3b04 	str.w	r3, [r0], #4
1a002c7c:	f851 3b04 	ldr.w	r3, [r1], #4
1a002c80:	f840 3b04 	str.w	r3, [r0], #4
1a002c84:	3a40      	subs	r2, #64	; 0x40
1a002c86:	d2bd      	bcs.n	1a002c04 <memcpy+0x10>
1a002c88:	3230      	adds	r2, #48	; 0x30
1a002c8a:	d311      	bcc.n	1a002cb0 <memcpy+0xbc>
1a002c8c:	f851 3b04 	ldr.w	r3, [r1], #4
1a002c90:	f840 3b04 	str.w	r3, [r0], #4
1a002c94:	f851 3b04 	ldr.w	r3, [r1], #4
1a002c98:	f840 3b04 	str.w	r3, [r0], #4
1a002c9c:	f851 3b04 	ldr.w	r3, [r1], #4
1a002ca0:	f840 3b04 	str.w	r3, [r0], #4
1a002ca4:	f851 3b04 	ldr.w	r3, [r1], #4
1a002ca8:	f840 3b04 	str.w	r3, [r0], #4
1a002cac:	3a10      	subs	r2, #16
1a002cae:	d2ed      	bcs.n	1a002c8c <memcpy+0x98>
1a002cb0:	320c      	adds	r2, #12
1a002cb2:	d305      	bcc.n	1a002cc0 <memcpy+0xcc>
1a002cb4:	f851 3b04 	ldr.w	r3, [r1], #4
1a002cb8:	f840 3b04 	str.w	r3, [r0], #4
1a002cbc:	3a04      	subs	r2, #4
1a002cbe:	d2f9      	bcs.n	1a002cb4 <memcpy+0xc0>
1a002cc0:	3204      	adds	r2, #4
1a002cc2:	d008      	beq.n	1a002cd6 <memcpy+0xe2>
1a002cc4:	07d2      	lsls	r2, r2, #31
1a002cc6:	bf1c      	itt	ne
1a002cc8:	f811 3b01 	ldrbne.w	r3, [r1], #1
1a002ccc:	f800 3b01 	strbne.w	r3, [r0], #1
1a002cd0:	d301      	bcc.n	1a002cd6 <memcpy+0xe2>
1a002cd2:	880b      	ldrh	r3, [r1, #0]
1a002cd4:	8003      	strh	r3, [r0, #0]
1a002cd6:	4660      	mov	r0, ip
1a002cd8:	4770      	bx	lr
1a002cda:	bf00      	nop
1a002cdc:	2a08      	cmp	r2, #8
1a002cde:	d313      	bcc.n	1a002d08 <memcpy+0x114>
1a002ce0:	078b      	lsls	r3, r1, #30
1a002ce2:	d08d      	beq.n	1a002c00 <memcpy+0xc>
1a002ce4:	f010 0303 	ands.w	r3, r0, #3
1a002ce8:	d08a      	beq.n	1a002c00 <memcpy+0xc>
1a002cea:	f1c3 0304 	rsb	r3, r3, #4
1a002cee:	1ad2      	subs	r2, r2, r3
1a002cf0:	07db      	lsls	r3, r3, #31
1a002cf2:	bf1c      	itt	ne
1a002cf4:	f811 3b01 	ldrbne.w	r3, [r1], #1
1a002cf8:	f800 3b01 	strbne.w	r3, [r0], #1
1a002cfc:	d380      	bcc.n	1a002c00 <memcpy+0xc>
1a002cfe:	f831 3b02 	ldrh.w	r3, [r1], #2
1a002d02:	f820 3b02 	strh.w	r3, [r0], #2
1a002d06:	e77b      	b.n	1a002c00 <memcpy+0xc>
1a002d08:	3a04      	subs	r2, #4
1a002d0a:	d3d9      	bcc.n	1a002cc0 <memcpy+0xcc>
1a002d0c:	3a01      	subs	r2, #1
1a002d0e:	f811 3b01 	ldrb.w	r3, [r1], #1
1a002d12:	f800 3b01 	strb.w	r3, [r0], #1
1a002d16:	d2f9      	bcs.n	1a002d0c <memcpy+0x118>
1a002d18:	780b      	ldrb	r3, [r1, #0]
1a002d1a:	7003      	strb	r3, [r0, #0]
1a002d1c:	784b      	ldrb	r3, [r1, #1]
1a002d1e:	7043      	strb	r3, [r0, #1]
1a002d20:	788b      	ldrb	r3, [r1, #2]
1a002d22:	7083      	strb	r3, [r0, #2]
1a002d24:	4660      	mov	r0, ip
1a002d26:	4770      	bx	lr

1a002d28 <memset>:
1a002d28:	b4f0      	push	{r4, r5, r6, r7}
1a002d2a:	0786      	lsls	r6, r0, #30
1a002d2c:	d046      	beq.n	1a002dbc <memset+0x94>
1a002d2e:	1e54      	subs	r4, r2, #1
1a002d30:	2a00      	cmp	r2, #0
1a002d32:	d03c      	beq.n	1a002dae <memset+0x86>
1a002d34:	b2ca      	uxtb	r2, r1
1a002d36:	4603      	mov	r3, r0
1a002d38:	e002      	b.n	1a002d40 <memset+0x18>
1a002d3a:	f114 34ff 	adds.w	r4, r4, #4294967295
1a002d3e:	d336      	bcc.n	1a002dae <memset+0x86>
1a002d40:	f803 2b01 	strb.w	r2, [r3], #1
1a002d44:	079d      	lsls	r5, r3, #30
1a002d46:	d1f8      	bne.n	1a002d3a <memset+0x12>
1a002d48:	2c03      	cmp	r4, #3
1a002d4a:	d929      	bls.n	1a002da0 <memset+0x78>
1a002d4c:	b2cd      	uxtb	r5, r1
1a002d4e:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
1a002d52:	2c0f      	cmp	r4, #15
1a002d54:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
1a002d58:	d933      	bls.n	1a002dc2 <memset+0x9a>
1a002d5a:	f1a4 0610 	sub.w	r6, r4, #16
1a002d5e:	0936      	lsrs	r6, r6, #4
1a002d60:	f103 0720 	add.w	r7, r3, #32
1a002d64:	eb07 1706 	add.w	r7, r7, r6, lsl #4
1a002d68:	f103 0210 	add.w	r2, r3, #16
1a002d6c:	e942 5504 	strd	r5, r5, [r2, #-16]
1a002d70:	e942 5502 	strd	r5, r5, [r2, #-8]
1a002d74:	3210      	adds	r2, #16
1a002d76:	42ba      	cmp	r2, r7
1a002d78:	d1f8      	bne.n	1a002d6c <memset+0x44>
1a002d7a:	1c72      	adds	r2, r6, #1
1a002d7c:	f014 0f0c 	tst.w	r4, #12
1a002d80:	eb03 1202 	add.w	r2, r3, r2, lsl #4
1a002d84:	f004 060f 	and.w	r6, r4, #15
1a002d88:	d013      	beq.n	1a002db2 <memset+0x8a>
1a002d8a:	1f33      	subs	r3, r6, #4
1a002d8c:	f023 0303 	bic.w	r3, r3, #3
1a002d90:	3304      	adds	r3, #4
1a002d92:	4413      	add	r3, r2
1a002d94:	f842 5b04 	str.w	r5, [r2], #4
1a002d98:	4293      	cmp	r3, r2
1a002d9a:	d1fb      	bne.n	1a002d94 <memset+0x6c>
1a002d9c:	f006 0403 	and.w	r4, r6, #3
1a002da0:	b12c      	cbz	r4, 1a002dae <memset+0x86>
1a002da2:	b2c9      	uxtb	r1, r1
1a002da4:	441c      	add	r4, r3
1a002da6:	f803 1b01 	strb.w	r1, [r3], #1
1a002daa:	429c      	cmp	r4, r3
1a002dac:	d1fb      	bne.n	1a002da6 <memset+0x7e>
1a002dae:	bcf0      	pop	{r4, r5, r6, r7}
1a002db0:	4770      	bx	lr
1a002db2:	4634      	mov	r4, r6
1a002db4:	4613      	mov	r3, r2
1a002db6:	2c00      	cmp	r4, #0
1a002db8:	d1f3      	bne.n	1a002da2 <memset+0x7a>
1a002dba:	e7f8      	b.n	1a002dae <memset+0x86>
1a002dbc:	4614      	mov	r4, r2
1a002dbe:	4603      	mov	r3, r0
1a002dc0:	e7c2      	b.n	1a002d48 <memset+0x20>
1a002dc2:	461a      	mov	r2, r3
1a002dc4:	4626      	mov	r6, r4
1a002dc6:	e7e0      	b.n	1a002d8a <memset+0x62>

1a002dc8 <__malloc_lock>:
1a002dc8:	4801      	ldr	r0, [pc, #4]	; (1a002dd0 <__malloc_lock+0x8>)
1a002dca:	f7ff bc57 	b.w	1a00267c <__retarget_lock_acquire_recursive>
1a002dce:	bf00      	nop
1a002dd0:	10000a64 	.word	0x10000a64

1a002dd4 <__malloc_unlock>:
1a002dd4:	4801      	ldr	r0, [pc, #4]	; (1a002ddc <__malloc_unlock+0x8>)
1a002dd6:	f7ff bc53 	b.w	1a002680 <__retarget_lock_release_recursive>
1a002dda:	bf00      	nop
1a002ddc:	10000a64 	.word	0x10000a64

1a002de0 <sprintf>:
1a002de0:	b40e      	push	{r1, r2, r3}
1a002de2:	b530      	push	{r4, r5, lr}
1a002de4:	b09c      	sub	sp, #112	; 0x70
1a002de6:	ab1f      	add	r3, sp, #124	; 0x7c
1a002de8:	4c0c      	ldr	r4, [pc, #48]	; (1a002e1c <sprintf+0x3c>)
1a002dea:	4d0d      	ldr	r5, [pc, #52]	; (1a002e20 <sprintf+0x40>)
1a002dec:	f853 2b04 	ldr.w	r2, [r3], #4
1a002df0:	9301      	str	r3, [sp, #4]
1a002df2:	4601      	mov	r1, r0
1a002df4:	9102      	str	r1, [sp, #8]
1a002df6:	9106      	str	r1, [sp, #24]
1a002df8:	6820      	ldr	r0, [r4, #0]
1a002dfa:	a902      	add	r1, sp, #8
1a002dfc:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
1a002e00:	9407      	str	r4, [sp, #28]
1a002e02:	e9cd 4504 	strd	r4, r5, [sp, #16]
1a002e06:	f000 f88b 	bl	1a002f20 <_svfprintf_r>
1a002e0a:	9b02      	ldr	r3, [sp, #8]
1a002e0c:	2200      	movs	r2, #0
1a002e0e:	701a      	strb	r2, [r3, #0]
1a002e10:	b01c      	add	sp, #112	; 0x70
1a002e12:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
1a002e16:	b003      	add	sp, #12
1a002e18:	4770      	bx	lr
1a002e1a:	bf00      	nop
1a002e1c:	10000048 	.word	0x10000048
1a002e20:	ffff0208 	.word	0xffff0208
1a002e24:	ffffffff 	.word	0xffffffff
1a002e28:	ffffffff 	.word	0xffffffff
1a002e2c:	ffffffff 	.word	0xffffffff
1a002e30:	ffffffff 	.word	0xffffffff
1a002e34:	ffffffff 	.word	0xffffffff
1a002e38:	ffffffff 	.word	0xffffffff
1a002e3c:	ffffffff 	.word	0xffffffff

1a002e40 <strlen>:
1a002e40:	f890 f000 	pld	[r0]
1a002e44:	e96d 4502 	strd	r4, r5, [sp, #-8]!
1a002e48:	f020 0107 	bic.w	r1, r0, #7
1a002e4c:	f06f 0c00 	mvn.w	ip, #0
1a002e50:	f010 0407 	ands.w	r4, r0, #7
1a002e54:	f891 f020 	pld	[r1, #32]
1a002e58:	f040 8049 	bne.w	1a002eee <strlen+0xae>
1a002e5c:	f04f 0400 	mov.w	r4, #0
1a002e60:	f06f 0007 	mvn.w	r0, #7
1a002e64:	e9d1 2300 	ldrd	r2, r3, [r1]
1a002e68:	f891 f040 	pld	[r1, #64]	; 0x40
1a002e6c:	f100 0008 	add.w	r0, r0, #8
1a002e70:	fa82 f24c 	uadd8	r2, r2, ip
1a002e74:	faa4 f28c 	sel	r2, r4, ip
1a002e78:	fa83 f34c 	uadd8	r3, r3, ip
1a002e7c:	faa2 f38c 	sel	r3, r2, ip
1a002e80:	bb4b      	cbnz	r3, 1a002ed6 <strlen+0x96>
1a002e82:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
1a002e86:	fa82 f24c 	uadd8	r2, r2, ip
1a002e8a:	f100 0008 	add.w	r0, r0, #8
1a002e8e:	faa4 f28c 	sel	r2, r4, ip
1a002e92:	fa83 f34c 	uadd8	r3, r3, ip
1a002e96:	faa2 f38c 	sel	r3, r2, ip
1a002e9a:	b9e3      	cbnz	r3, 1a002ed6 <strlen+0x96>
1a002e9c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
1a002ea0:	fa82 f24c 	uadd8	r2, r2, ip
1a002ea4:	f100 0008 	add.w	r0, r0, #8
1a002ea8:	faa4 f28c 	sel	r2, r4, ip
1a002eac:	fa83 f34c 	uadd8	r3, r3, ip
1a002eb0:	faa2 f38c 	sel	r3, r2, ip
1a002eb4:	b97b      	cbnz	r3, 1a002ed6 <strlen+0x96>
1a002eb6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
1a002eba:	f101 0120 	add.w	r1, r1, #32
1a002ebe:	fa82 f24c 	uadd8	r2, r2, ip
1a002ec2:	f100 0008 	add.w	r0, r0, #8
1a002ec6:	faa4 f28c 	sel	r2, r4, ip
1a002eca:	fa83 f34c 	uadd8	r3, r3, ip
1a002ece:	faa2 f38c 	sel	r3, r2, ip
1a002ed2:	2b00      	cmp	r3, #0
1a002ed4:	d0c6      	beq.n	1a002e64 <strlen+0x24>
1a002ed6:	2a00      	cmp	r2, #0
1a002ed8:	bf04      	itt	eq
1a002eda:	3004      	addeq	r0, #4
1a002edc:	461a      	moveq	r2, r3
1a002ede:	ba12      	rev	r2, r2
1a002ee0:	fab2 f282 	clz	r2, r2
1a002ee4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
1a002ee8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
1a002eec:	4770      	bx	lr
1a002eee:	e9d1 2300 	ldrd	r2, r3, [r1]
1a002ef2:	f004 0503 	and.w	r5, r4, #3
1a002ef6:	f1c4 0000 	rsb	r0, r4, #0
1a002efa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
1a002efe:	f014 0f04 	tst.w	r4, #4
1a002f02:	f891 f040 	pld	[r1, #64]	; 0x40
1a002f06:	fa0c f505 	lsl.w	r5, ip, r5
1a002f0a:	ea62 0205 	orn	r2, r2, r5
1a002f0e:	bf1c      	itt	ne
1a002f10:	ea63 0305 	ornne	r3, r3, r5
1a002f14:	4662      	movne	r2, ip
1a002f16:	f04f 0400 	mov.w	r4, #0
1a002f1a:	e7a9      	b.n	1a002e70 <strlen+0x30>
1a002f1c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff

1a002f20 <_svfprintf_r>:
1a002f20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a002f24:	b0d5      	sub	sp, #340	; 0x154
1a002f26:	460c      	mov	r4, r1
1a002f28:	9107      	str	r1, [sp, #28]
1a002f2a:	4693      	mov	fp, r2
1a002f2c:	9309      	str	r3, [sp, #36]	; 0x24
1a002f2e:	9006      	str	r0, [sp, #24]
1a002f30:	f002 fcd0 	bl	1a0058d4 <_localeconv_r>
1a002f34:	6803      	ldr	r3, [r0, #0]
1a002f36:	9315      	str	r3, [sp, #84]	; 0x54
1a002f38:	4618      	mov	r0, r3
1a002f3a:	f7ff ff81 	bl	1a002e40 <strlen>
1a002f3e:	89a3      	ldrh	r3, [r4, #12]
1a002f40:	9013      	str	r0, [sp, #76]	; 0x4c
1a002f42:	061d      	lsls	r5, r3, #24
1a002f44:	d503      	bpl.n	1a002f4e <_svfprintf_r+0x2e>
1a002f46:	6923      	ldr	r3, [r4, #16]
1a002f48:	2b00      	cmp	r3, #0
1a002f4a:	f001 8018 	beq.w	1a003f7e <_svfprintf_r+0x105e>
1a002f4e:	2300      	movs	r3, #0
1a002f50:	465e      	mov	r6, fp
1a002f52:	ed9f 7b91 	vldr	d7, [pc, #580]	; 1a003198 <_svfprintf_r+0x278>
1a002f56:	9312      	str	r3, [sp, #72]	; 0x48
1a002f58:	e9cd 3329 	strd	r3, r3, [sp, #164]	; 0xa4
1a002f5c:	9314      	str	r3, [sp, #80]	; 0x50
1a002f5e:	9316      	str	r3, [sp, #88]	; 0x58
1a002f60:	e9cd 3318 	strd	r3, r3, [sp, #96]	; 0x60
1a002f64:	9317      	str	r3, [sp, #92]	; 0x5c
1a002f66:	9304      	str	r3, [sp, #16]
1a002f68:	ab2b      	add	r3, sp, #172	; 0xac
1a002f6a:	9328      	str	r3, [sp, #160]	; 0xa0
1a002f6c:	4699      	mov	r9, r3
1a002f6e:	7833      	ldrb	r3, [r6, #0]
1a002f70:	ed8d 7b10 	vstr	d7, [sp, #64]	; 0x40
1a002f74:	2b00      	cmp	r3, #0
1a002f76:	f000 8177 	beq.w	1a003268 <_svfprintf_r+0x348>
1a002f7a:	2b25      	cmp	r3, #37	; 0x25
1a002f7c:	f000 86c4 	beq.w	1a003d08 <_svfprintf_r+0xde8>
1a002f80:	4635      	mov	r5, r6
1a002f82:	e003      	b.n	1a002f8c <_svfprintf_r+0x6c>
1a002f84:	2b25      	cmp	r3, #37	; 0x25
1a002f86:	f000 8096 	beq.w	1a0030b6 <_svfprintf_r+0x196>
1a002f8a:	4625      	mov	r5, r4
1a002f8c:	786b      	ldrb	r3, [r5, #1]
1a002f8e:	1c6c      	adds	r4, r5, #1
1a002f90:	2b00      	cmp	r3, #0
1a002f92:	d1f7      	bne.n	1a002f84 <_svfprintf_r+0x64>
1a002f94:	1ba7      	subs	r7, r4, r6
1a002f96:	f000 8167 	beq.w	1a003268 <_svfprintf_r+0x348>
1a002f9a:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
1a002f9e:	3301      	adds	r3, #1
1a002fa0:	443a      	add	r2, r7
1a002fa2:	2b07      	cmp	r3, #7
1a002fa4:	f8c9 6000 	str.w	r6, [r9]
1a002fa8:	f8c9 7004 	str.w	r7, [r9, #4]
1a002fac:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
1a002fb0:	f300 8084 	bgt.w	1a0030bc <_svfprintf_r+0x19c>
1a002fb4:	f109 0908 	add.w	r9, r9, #8
1a002fb8:	9a04      	ldr	r2, [sp, #16]
1a002fba:	786b      	ldrb	r3, [r5, #1]
1a002fbc:	443a      	add	r2, r7
1a002fbe:	9204      	str	r2, [sp, #16]
1a002fc0:	2b00      	cmp	r3, #0
1a002fc2:	f000 8151 	beq.w	1a003268 <_svfprintf_r+0x348>
1a002fc6:	2300      	movs	r3, #0
1a002fc8:	f894 8001 	ldrb.w	r8, [r4, #1]
1a002fcc:	9305      	str	r3, [sp, #20]
1a002fce:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
1a002fd2:	9302      	str	r3, [sp, #8]
1a002fd4:	f104 0b01 	add.w	fp, r4, #1
1a002fd8:	f04f 3aff 	mov.w	sl, #4294967295
1a002fdc:	272b      	movs	r7, #43	; 0x2b
1a002fde:	2120      	movs	r1, #32
1a002fe0:	f10b 0b01 	add.w	fp, fp, #1
1a002fe4:	f1a8 0320 	sub.w	r3, r8, #32
1a002fe8:	2b5a      	cmp	r3, #90	; 0x5a
1a002fea:	f200 836c 	bhi.w	1a0036c6 <_svfprintf_r+0x7a6>
1a002fee:	e8df f013 	tbh	[pc, r3, lsl #1]
1a002ff2:	034b      	.short	0x034b
1a002ff4:	036a036a 	.word	0x036a036a
1a002ff8:	036a0344 	.word	0x036a0344
1a002ffc:	036a036a 	.word	0x036a036a
1a003000:	036a0321 	.word	0x036a0321
1a003004:	0215036a 	.word	0x0215036a
1a003008:	036a0210 	.word	0x036a0210
1a00300c:	01f600cb 	.word	0x01f600cb
1a003010:	01ef036a 	.word	0x01ef036a
1a003014:	00a800a8 	.word	0x00a800a8
1a003018:	00a800a8 	.word	0x00a800a8
1a00301c:	00a800a8 	.word	0x00a800a8
1a003020:	00a800a8 	.word	0x00a800a8
1a003024:	036a00a8 	.word	0x036a00a8
1a003028:	036a036a 	.word	0x036a036a
1a00302c:	036a036a 	.word	0x036a036a
1a003030:	036a036a 	.word	0x036a036a
1a003034:	036a02df 	.word	0x036a02df
1a003038:	01960223 	.word	0x01960223
1a00303c:	02df02df 	.word	0x02df02df
1a003040:	036a02df 	.word	0x036a02df
1a003044:	036a036a 	.word	0x036a036a
1a003048:	018f036a 	.word	0x018f036a
1a00304c:	036a036a 	.word	0x036a036a
1a003050:	036a017e 	.word	0x036a017e
1a003054:	036a036a 	.word	0x036a036a
1a003058:	036a0152 	.word	0x036a0152
1a00305c:	036a01ca 	.word	0x036a01ca
1a003060:	00b7036a 	.word	0x00b7036a
1a003064:	036a036a 	.word	0x036a036a
1a003068:	036a036a 	.word	0x036a036a
1a00306c:	036a036a 	.word	0x036a036a
1a003070:	036a036a 	.word	0x036a036a
1a003074:	036a02df 	.word	0x036a02df
1a003078:	01d90223 	.word	0x01d90223
1a00307c:	02df02df 	.word	0x02df02df
1a003080:	01bf02df 	.word	0x01bf02df
1a003084:	005b01d9 	.word	0x005b01d9
1a003088:	0147036a 	.word	0x0147036a
1a00308c:	011e036a 	.word	0x011e036a
1a003090:	00db010c 	.word	0x00db010c
1a003094:	036a005b 	.word	0x036a005b
1a003098:	005f0152 	.word	0x005f0152
1a00309c:	036a0355 	.word	0x036a0355
1a0030a0:	0089036a 	.word	0x0089036a
1a0030a4:	005f036a 	.word	0x005f036a
1a0030a8:	9b02      	ldr	r3, [sp, #8]
1a0030aa:	f043 0320 	orr.w	r3, r3, #32
1a0030ae:	9302      	str	r3, [sp, #8]
1a0030b0:	f89b 8000 	ldrb.w	r8, [fp]
1a0030b4:	e794      	b.n	1a002fe0 <_svfprintf_r+0xc0>
1a0030b6:	1ba7      	subs	r7, r4, r6
1a0030b8:	d085      	beq.n	1a002fc6 <_svfprintf_r+0xa6>
1a0030ba:	e76e      	b.n	1a002f9a <_svfprintf_r+0x7a>
1a0030bc:	aa28      	add	r2, sp, #160	; 0xa0
1a0030be:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1a0030c2:	f003 f9f5 	bl	1a0064b0 <__ssprint_r>
1a0030c6:	b980      	cbnz	r0, 1a0030ea <_svfprintf_r+0x1ca>
1a0030c8:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
1a0030cc:	e774      	b.n	1a002fb8 <_svfprintf_r+0x98>
1a0030ce:	aa28      	add	r2, sp, #160	; 0xa0
1a0030d0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1a0030d4:	f003 f9ec 	bl	1a0064b0 <__ssprint_r>
1a0030d8:	2800      	cmp	r0, #0
1a0030da:	f000 8221 	beq.w	1a003520 <_svfprintf_r+0x600>
1a0030de:	9b08      	ldr	r3, [sp, #32]
1a0030e0:	b11b      	cbz	r3, 1a0030ea <_svfprintf_r+0x1ca>
1a0030e2:	9908      	ldr	r1, [sp, #32]
1a0030e4:	9806      	ldr	r0, [sp, #24]
1a0030e6:	f7ff f9af 	bl	1a002448 <_free_r>
1a0030ea:	9b07      	ldr	r3, [sp, #28]
1a0030ec:	899b      	ldrh	r3, [r3, #12]
1a0030ee:	f013 0f40 	tst.w	r3, #64	; 0x40
1a0030f2:	9b04      	ldr	r3, [sp, #16]
1a0030f4:	bf18      	it	ne
1a0030f6:	f04f 33ff 	movne.w	r3, #4294967295
1a0030fa:	9304      	str	r3, [sp, #16]
1a0030fc:	9804      	ldr	r0, [sp, #16]
1a0030fe:	b055      	add	sp, #340	; 0x154
1a003100:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a003104:	4b26      	ldr	r3, [pc, #152]	; (1a0031a0 <_svfprintf_r+0x280>)
1a003106:	9314      	str	r3, [sp, #80]	; 0x50
1a003108:	9b02      	ldr	r3, [sp, #8]
1a00310a:	0699      	lsls	r1, r3, #26
1a00310c:	d52d      	bpl.n	1a00316a <_svfprintf_r+0x24a>
1a00310e:	9c09      	ldr	r4, [sp, #36]	; 0x24
1a003110:	3407      	adds	r4, #7
1a003112:	f024 0307 	bic.w	r3, r4, #7
1a003116:	e8f3 4502 	ldrd	r4, r5, [r3], #8
1a00311a:	9309      	str	r3, [sp, #36]	; 0x24
1a00311c:	9a02      	ldr	r2, [sp, #8]
1a00311e:	07d6      	lsls	r6, r2, #31
1a003120:	d50a      	bpl.n	1a003138 <_svfprintf_r+0x218>
1a003122:	ea54 0305 	orrs.w	r3, r4, r5
1a003126:	d007      	beq.n	1a003138 <_svfprintf_r+0x218>
1a003128:	2330      	movs	r3, #48	; 0x30
1a00312a:	f042 0202 	orr.w	r2, r2, #2
1a00312e:	f88d 8085 	strb.w	r8, [sp, #133]	; 0x85
1a003132:	9202      	str	r2, [sp, #8]
1a003134:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
1a003138:	9b02      	ldr	r3, [sp, #8]
1a00313a:	f423 6780 	bic.w	r7, r3, #1024	; 0x400
1a00313e:	2302      	movs	r3, #2
1a003140:	e044      	b.n	1a0031cc <_svfprintf_r+0x2ac>
1a003142:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
1a003146:	2200      	movs	r2, #0
1a003148:	f81b 8b01 	ldrb.w	r8, [fp], #1
1a00314c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
1a003150:	eb03 0242 	add.w	r2, r3, r2, lsl #1
1a003154:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
1a003158:	2b09      	cmp	r3, #9
1a00315a:	d9f5      	bls.n	1a003148 <_svfprintf_r+0x228>
1a00315c:	9205      	str	r2, [sp, #20]
1a00315e:	e741      	b.n	1a002fe4 <_svfprintf_r+0xc4>
1a003160:	4b10      	ldr	r3, [pc, #64]	; (1a0031a4 <_svfprintf_r+0x284>)
1a003162:	9314      	str	r3, [sp, #80]	; 0x50
1a003164:	9b02      	ldr	r3, [sp, #8]
1a003166:	0699      	lsls	r1, r3, #26
1a003168:	d4d1      	bmi.n	1a00310e <_svfprintf_r+0x1ee>
1a00316a:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a00316c:	f853 4b04 	ldr.w	r4, [r3], #4
1a003170:	9309      	str	r3, [sp, #36]	; 0x24
1a003172:	9b02      	ldr	r3, [sp, #8]
1a003174:	06da      	lsls	r2, r3, #27
1a003176:	f100 85ef 	bmi.w	1a003d58 <_svfprintf_r+0xe38>
1a00317a:	9b02      	ldr	r3, [sp, #8]
1a00317c:	065b      	lsls	r3, r3, #25
1a00317e:	f140 85e7 	bpl.w	1a003d50 <_svfprintf_r+0xe30>
1a003182:	b2a4      	uxth	r4, r4
1a003184:	2500      	movs	r5, #0
1a003186:	e7c9      	b.n	1a00311c <_svfprintf_r+0x1fc>
1a003188:	f89b 8000 	ldrb.w	r8, [fp]
1a00318c:	9b02      	ldr	r3, [sp, #8]
1a00318e:	f043 0304 	orr.w	r3, r3, #4
1a003192:	9302      	str	r3, [sp, #8]
1a003194:	e724      	b.n	1a002fe0 <_svfprintf_r+0xc0>
1a003196:	bf00      	nop
	...
1a0031a0:	1a006a1c 	.word	0x1a006a1c
1a0031a4:	1a006a30 	.word	0x1a006a30
1a0031a8:	9c09      	ldr	r4, [sp, #36]	; 0x24
1a0031aa:	f647 0230 	movw	r2, #30768	; 0x7830
1a0031ae:	f854 3b04 	ldr.w	r3, [r4], #4
1a0031b2:	f8ad 2084 	strh.w	r2, [sp, #132]	; 0x84
1a0031b6:	9a02      	ldr	r2, [sp, #8]
1a0031b8:	9409      	str	r4, [sp, #36]	; 0x24
1a0031ba:	461c      	mov	r4, r3
1a0031bc:	4b9d      	ldr	r3, [pc, #628]	; (1a003434 <_svfprintf_r+0x514>)
1a0031be:	9314      	str	r3, [sp, #80]	; 0x50
1a0031c0:	f042 0702 	orr.w	r7, r2, #2
1a0031c4:	2500      	movs	r5, #0
1a0031c6:	2302      	movs	r3, #2
1a0031c8:	f04f 0878 	mov.w	r8, #120	; 0x78
1a0031cc:	2200      	movs	r2, #0
1a0031ce:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
1a0031d2:	f1ba 3fff 	cmp.w	sl, #4294967295
1a0031d6:	f000 829b 	beq.w	1a003710 <_svfprintf_r+0x7f0>
1a0031da:	f027 0280 	bic.w	r2, r7, #128	; 0x80
1a0031de:	9202      	str	r2, [sp, #8]
1a0031e0:	ea54 0205 	orrs.w	r2, r4, r5
1a0031e4:	f040 8293 	bne.w	1a00370e <_svfprintf_r+0x7ee>
1a0031e8:	f1ba 0f00 	cmp.w	sl, #0
1a0031ec:	f040 8490 	bne.w	1a003b10 <_svfprintf_r+0xbf0>
1a0031f0:	2b00      	cmp	r3, #0
1a0031f2:	f040 80b8 	bne.w	1a003366 <_svfprintf_r+0x446>
1a0031f6:	f017 0701 	ands.w	r7, r7, #1
1a0031fa:	f000 85a7 	beq.w	1a003d4c <_svfprintf_r+0xe2c>
1a0031fe:	2330      	movs	r3, #48	; 0x30
1a003200:	f88d 314f 	strb.w	r3, [sp, #335]	; 0x14f
1a003204:	f20d 164f 	addw	r6, sp, #335	; 0x14f
1a003208:	e274      	b.n	1a0036f4 <_svfprintf_r+0x7d4>
1a00320a:	9f02      	ldr	r7, [sp, #8]
1a00320c:	06be      	lsls	r6, r7, #26
1a00320e:	d474      	bmi.n	1a0032fa <_svfprintf_r+0x3da>
1a003210:	9b02      	ldr	r3, [sp, #8]
1a003212:	9a09      	ldr	r2, [sp, #36]	; 0x24
1a003214:	06dd      	lsls	r5, r3, #27
1a003216:	f852 4b04 	ldr.w	r4, [r2], #4
1a00321a:	f101 8399 	bmi.w	1a004950 <_svfprintf_r+0x1a30>
1a00321e:	9f02      	ldr	r7, [sp, #8]
1a003220:	0678      	lsls	r0, r7, #25
1a003222:	f141 8070 	bpl.w	1a004306 <_svfprintf_r+0x13e6>
1a003226:	9209      	str	r2, [sp, #36]	; 0x24
1a003228:	b2a4      	uxth	r4, r4
1a00322a:	2500      	movs	r5, #0
1a00322c:	e06c      	b.n	1a003308 <_svfprintf_r+0x3e8>
1a00322e:	9902      	ldr	r1, [sp, #8]
1a003230:	9a09      	ldr	r2, [sp, #36]	; 0x24
1a003232:	068c      	lsls	r4, r1, #26
1a003234:	f102 0304 	add.w	r3, r2, #4
1a003238:	f100 8591 	bmi.w	1a003d5e <_svfprintf_r+0xe3e>
1a00323c:	9a02      	ldr	r2, [sp, #8]
1a00323e:	06d0      	lsls	r0, r2, #27
1a003240:	f100 87ee 	bmi.w	1a004220 <_svfprintf_r+0x1300>
1a003244:	9a02      	ldr	r2, [sp, #8]
1a003246:	0651      	lsls	r1, r2, #25
1a003248:	f101 80a6 	bmi.w	1a004398 <_svfprintf_r+0x1478>
1a00324c:	9a02      	ldr	r2, [sp, #8]
1a00324e:	0592      	lsls	r2, r2, #22
1a003250:	f140 87e6 	bpl.w	1a004220 <_svfprintf_r+0x1300>
1a003254:	9a09      	ldr	r2, [sp, #36]	; 0x24
1a003256:	9309      	str	r3, [sp, #36]	; 0x24
1a003258:	6812      	ldr	r2, [r2, #0]
1a00325a:	9b04      	ldr	r3, [sp, #16]
1a00325c:	7013      	strb	r3, [r2, #0]
1a00325e:	465e      	mov	r6, fp
1a003260:	7833      	ldrb	r3, [r6, #0]
1a003262:	2b00      	cmp	r3, #0
1a003264:	f47f ae89 	bne.w	1a002f7a <_svfprintf_r+0x5a>
1a003268:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
1a00326a:	2b00      	cmp	r3, #0
1a00326c:	f43f af3d 	beq.w	1a0030ea <_svfprintf_r+0x1ca>
1a003270:	9c07      	ldr	r4, [sp, #28]
1a003272:	9806      	ldr	r0, [sp, #24]
1a003274:	aa28      	add	r2, sp, #160	; 0xa0
1a003276:	4621      	mov	r1, r4
1a003278:	f003 f91a 	bl	1a0064b0 <__ssprint_r>
1a00327c:	89a3      	ldrh	r3, [r4, #12]
1a00327e:	e736      	b.n	1a0030ee <_svfprintf_r+0x1ce>
1a003280:	f89b 8000 	ldrb.w	r8, [fp]
1a003284:	9b02      	ldr	r3, [sp, #8]
1a003286:	f1b8 0f6c 	cmp.w	r8, #108	; 0x6c
1a00328a:	f000 8663 	beq.w	1a003f54 <_svfprintf_r+0x1034>
1a00328e:	f043 0310 	orr.w	r3, r3, #16
1a003292:	9302      	str	r3, [sp, #8]
1a003294:	e6a4      	b.n	1a002fe0 <_svfprintf_r+0xc0>
1a003296:	9c09      	ldr	r4, [sp, #36]	; 0x24
1a003298:	f854 6b04 	ldr.w	r6, [r4], #4
1a00329c:	2500      	movs	r5, #0
1a00329e:	f88d 5083 	strb.w	r5, [sp, #131]	; 0x83
1a0032a2:	2e00      	cmp	r6, #0
1a0032a4:	f000 867a 	beq.w	1a003f9c <_svfprintf_r+0x107c>
1a0032a8:	f1ba 3fff 	cmp.w	sl, #4294967295
1a0032ac:	f000 87f9 	beq.w	1a0042a2 <_svfprintf_r+0x1382>
1a0032b0:	4652      	mov	r2, sl
1a0032b2:	4629      	mov	r1, r5
1a0032b4:	4630      	mov	r0, r6
1a0032b6:	f002 fb13 	bl	1a0058e0 <memchr>
1a0032ba:	9008      	str	r0, [sp, #32]
1a0032bc:	2800      	cmp	r0, #0
1a0032be:	f001 8150 	beq.w	1a004562 <_svfprintf_r+0x1642>
1a0032c2:	9b08      	ldr	r3, [sp, #32]
1a0032c4:	46aa      	mov	sl, r5
1a0032c6:	1b9f      	subs	r7, r3, r6
1a0032c8:	e9cd aa0e 	strd	sl, sl, [sp, #56]	; 0x38
1a0032cc:	ea27 73e7 	bic.w	r3, r7, r7, asr #31
1a0032d0:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
1a0032d4:	9409      	str	r4, [sp, #36]	; 0x24
1a0032d6:	9303      	str	r3, [sp, #12]
1a0032d8:	f8cd a020 	str.w	sl, [sp, #32]
1a0032dc:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
1a0032e0:	2a00      	cmp	r2, #0
1a0032e2:	f000 80bb 	beq.w	1a00345c <_svfprintf_r+0x53c>
1a0032e6:	9b03      	ldr	r3, [sp, #12]
1a0032e8:	3301      	adds	r3, #1
1a0032ea:	9303      	str	r3, [sp, #12]
1a0032ec:	e0b6      	b.n	1a00345c <_svfprintf_r+0x53c>
1a0032ee:	9b02      	ldr	r3, [sp, #8]
1a0032f0:	f043 0710 	orr.w	r7, r3, #16
1a0032f4:	069b      	lsls	r3, r3, #26
1a0032f6:	f140 8617 	bpl.w	1a003f28 <_svfprintf_r+0x1008>
1a0032fa:	9c09      	ldr	r4, [sp, #36]	; 0x24
1a0032fc:	3407      	adds	r4, #7
1a0032fe:	f024 0307 	bic.w	r3, r4, #7
1a003302:	e8f3 4502 	ldrd	r4, r5, [r3], #8
1a003306:	9309      	str	r3, [sp, #36]	; 0x24
1a003308:	f427 6780 	bic.w	r7, r7, #1024	; 0x400
1a00330c:	2300      	movs	r3, #0
1a00330e:	e75d      	b.n	1a0031cc <_svfprintf_r+0x2ac>
1a003310:	9b02      	ldr	r3, [sp, #8]
1a003312:	f89b 8000 	ldrb.w	r8, [fp]
1a003316:	f043 0308 	orr.w	r3, r3, #8
1a00331a:	9302      	str	r3, [sp, #8]
1a00331c:	e660      	b.n	1a002fe0 <_svfprintf_r+0xc0>
1a00331e:	9b02      	ldr	r3, [sp, #8]
1a003320:	069c      	lsls	r4, r3, #26
1a003322:	f043 0710 	orr.w	r7, r3, #16
1a003326:	f140 85f1 	bpl.w	1a003f0c <_svfprintf_r+0xfec>
1a00332a:	9c09      	ldr	r4, [sp, #36]	; 0x24
1a00332c:	3407      	adds	r4, #7
1a00332e:	f024 0307 	bic.w	r3, r4, #7
1a003332:	4619      	mov	r1, r3
1a003334:	e8f1 2302 	ldrd	r2, r3, [r1], #8
1a003338:	9109      	str	r1, [sp, #36]	; 0x24
1a00333a:	4614      	mov	r4, r2
1a00333c:	461d      	mov	r5, r3
1a00333e:	2a00      	cmp	r2, #0
1a003340:	f173 0300 	sbcs.w	r3, r3, #0
1a003344:	f2c0 84d7 	blt.w	1a003cf6 <_svfprintf_r+0xdd6>
1a003348:	f1ba 3fff 	cmp.w	sl, #4294967295
1a00334c:	f000 81c7 	beq.w	1a0036de <_svfprintf_r+0x7be>
1a003350:	f027 0380 	bic.w	r3, r7, #128	; 0x80
1a003354:	9302      	str	r3, [sp, #8]
1a003356:	ea54 0305 	orrs.w	r3, r4, r5
1a00335a:	f040 81bf 	bne.w	1a0036dc <_svfprintf_r+0x7bc>
1a00335e:	f1ba 0f00 	cmp.w	sl, #0
1a003362:	f041 803f 	bne.w	1a0043e4 <_svfprintf_r+0x14c4>
1a003366:	f04f 0a00 	mov.w	sl, #0
1a00336a:	4657      	mov	r7, sl
1a00336c:	ae54      	add	r6, sp, #336	; 0x150
1a00336e:	e1c1      	b.n	1a0036f4 <_svfprintf_r+0x7d4>
1a003370:	f89b 8000 	ldrb.w	r8, [fp]
1a003374:	9b02      	ldr	r3, [sp, #8]
1a003376:	f1b8 0f68 	cmp.w	r8, #104	; 0x68
1a00337a:	f000 85e2 	beq.w	1a003f42 <_svfprintf_r+0x1022>
1a00337e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a003382:	9302      	str	r3, [sp, #8]
1a003384:	e62c      	b.n	1a002fe0 <_svfprintf_r+0xc0>
1a003386:	9b02      	ldr	r3, [sp, #8]
1a003388:	069a      	lsls	r2, r3, #26
1a00338a:	f043 0710 	orr.w	r7, r3, #16
1a00338e:	f140 84f1 	bpl.w	1a003d74 <_svfprintf_r+0xe54>
1a003392:	9c09      	ldr	r4, [sp, #36]	; 0x24
1a003394:	3407      	adds	r4, #7
1a003396:	f024 0307 	bic.w	r3, r4, #7
1a00339a:	e8f3 4502 	ldrd	r4, r5, [r3], #8
1a00339e:	9309      	str	r3, [sp, #36]	; 0x24
1a0033a0:	2301      	movs	r3, #1
1a0033a2:	e713      	b.n	1a0031cc <_svfprintf_r+0x2ac>
1a0033a4:	9f02      	ldr	r7, [sp, #8]
1a0033a6:	06b8      	lsls	r0, r7, #26
1a0033a8:	d4bf      	bmi.n	1a00332a <_svfprintf_r+0x40a>
1a0033aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a0033ac:	1d1a      	adds	r2, r3, #4
1a0033ae:	9b02      	ldr	r3, [sp, #8]
1a0033b0:	06d9      	lsls	r1, r3, #27
1a0033b2:	f101 82d0 	bmi.w	1a004956 <_svfprintf_r+0x1a36>
1a0033b6:	9f02      	ldr	r7, [sp, #8]
1a0033b8:	463b      	mov	r3, r7
1a0033ba:	065b      	lsls	r3, r3, #25
1a0033bc:	f140 8796 	bpl.w	1a0042ec <_svfprintf_r+0x13cc>
1a0033c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a0033c2:	9209      	str	r2, [sp, #36]	; 0x24
1a0033c4:	f9b3 4000 	ldrsh.w	r4, [r3]
1a0033c8:	17e5      	asrs	r5, r4, #31
1a0033ca:	4622      	mov	r2, r4
1a0033cc:	462b      	mov	r3, r5
1a0033ce:	e7b6      	b.n	1a00333e <_svfprintf_r+0x41e>
1a0033d0:	9b02      	ldr	r3, [sp, #8]
1a0033d2:	f89b 8000 	ldrb.w	r8, [fp]
1a0033d6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
1a0033da:	9302      	str	r3, [sp, #8]
1a0033dc:	e600      	b.n	1a002fe0 <_svfprintf_r+0xc0>
1a0033de:	465a      	mov	r2, fp
1a0033e0:	f812 8b01 	ldrb.w	r8, [r2], #1
1a0033e4:	f1b8 0f2a 	cmp.w	r8, #42	; 0x2a
1a0033e8:	f001 828e 	beq.w	1a004908 <_svfprintf_r+0x19e8>
1a0033ec:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
1a0033f0:	2b09      	cmp	r3, #9
1a0033f2:	4693      	mov	fp, r2
1a0033f4:	f04f 0a00 	mov.w	sl, #0
1a0033f8:	f63f adf4 	bhi.w	1a002fe4 <_svfprintf_r+0xc4>
1a0033fc:	f81b 8b01 	ldrb.w	r8, [fp], #1
1a003400:	eb0a 0a8a 	add.w	sl, sl, sl, lsl #2
1a003404:	eb03 0a4a 	add.w	sl, r3, sl, lsl #1
1a003408:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
1a00340c:	2b09      	cmp	r3, #9
1a00340e:	d9f5      	bls.n	1a0033fc <_svfprintf_r+0x4dc>
1a003410:	e5e8      	b.n	1a002fe4 <_svfprintf_r+0xc4>
1a003412:	f88d 7083 	strb.w	r7, [sp, #131]	; 0x83
1a003416:	f89b 8000 	ldrb.w	r8, [fp]
1a00341a:	e5e1      	b.n	1a002fe0 <_svfprintf_r+0xc0>
1a00341c:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a00341e:	f89b 8000 	ldrb.w	r8, [fp]
1a003422:	f853 2b04 	ldr.w	r2, [r3], #4
1a003426:	9205      	str	r2, [sp, #20]
1a003428:	2a00      	cmp	r2, #0
1a00342a:	f2c0 8585 	blt.w	1a003f38 <_svfprintf_r+0x1018>
1a00342e:	9309      	str	r3, [sp, #36]	; 0x24
1a003430:	e5d6      	b.n	1a002fe0 <_svfprintf_r+0xc0>
1a003432:	bf00      	nop
1a003434:	1a006a1c 	.word	0x1a006a1c
1a003438:	9c09      	ldr	r4, [sp, #36]	; 0x24
1a00343a:	2300      	movs	r3, #0
1a00343c:	f854 2b04 	ldr.w	r2, [r4], #4
1a003440:	f88d 20ec 	strb.w	r2, [sp, #236]	; 0xec
1a003444:	2701      	movs	r7, #1
1a003446:	461a      	mov	r2, r3
1a003448:	9703      	str	r7, [sp, #12]
1a00344a:	9409      	str	r4, [sp, #36]	; 0x24
1a00344c:	e9cd 220e 	strd	r2, r2, [sp, #56]	; 0x38
1a003450:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
1a003454:	9208      	str	r2, [sp, #32]
1a003456:	4692      	mov	sl, r2
1a003458:	920c      	str	r2, [sp, #48]	; 0x30
1a00345a:	ae3b      	add	r6, sp, #236	; 0xec
1a00345c:	9b02      	ldr	r3, [sp, #8]
1a00345e:	f013 0302 	ands.w	r3, r3, #2
1a003462:	930a      	str	r3, [sp, #40]	; 0x28
1a003464:	d002      	beq.n	1a00346c <_svfprintf_r+0x54c>
1a003466:	9b03      	ldr	r3, [sp, #12]
1a003468:	3302      	adds	r3, #2
1a00346a:	9303      	str	r3, [sp, #12]
1a00346c:	9b02      	ldr	r3, [sp, #8]
1a00346e:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a003470:	f013 0384 	ands.w	r3, r3, #132	; 0x84
1a003474:	930b      	str	r3, [sp, #44]	; 0x2c
1a003476:	d104      	bne.n	1a003482 <_svfprintf_r+0x562>
1a003478:	9b05      	ldr	r3, [sp, #20]
1a00347a:	9903      	ldr	r1, [sp, #12]
1a00347c:	1a5d      	subs	r5, r3, r1
1a00347e:	2d00      	cmp	r5, #0
1a003480:	dc5a      	bgt.n	1a003538 <_svfprintf_r+0x618>
1a003482:	b172      	cbz	r2, 1a0034a2 <_svfprintf_r+0x582>
1a003484:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a003486:	3201      	adds	r2, #1
1a003488:	3401      	adds	r4, #1
1a00348a:	f10d 0083 	add.w	r0, sp, #131	; 0x83
1a00348e:	2101      	movs	r1, #1
1a003490:	2a07      	cmp	r2, #7
1a003492:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a003496:	e9c9 0100 	strd	r0, r1, [r9]
1a00349a:	f300 82e9 	bgt.w	1a003a70 <_svfprintf_r+0xb50>
1a00349e:	f109 0908 	add.w	r9, r9, #8
1a0034a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a0034a4:	b16b      	cbz	r3, 1a0034c2 <_svfprintf_r+0x5a2>
1a0034a6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a0034a8:	3301      	adds	r3, #1
1a0034aa:	3402      	adds	r4, #2
1a0034ac:	a921      	add	r1, sp, #132	; 0x84
1a0034ae:	2202      	movs	r2, #2
1a0034b0:	2b07      	cmp	r3, #7
1a0034b2:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
1a0034b6:	e9c9 1200 	strd	r1, r2, [r9]
1a0034ba:	f300 82e5 	bgt.w	1a003a88 <_svfprintf_r+0xb68>
1a0034be:	f109 0908 	add.w	r9, r9, #8
1a0034c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1a0034c4:	2b80      	cmp	r3, #128	; 0x80
1a0034c6:	f000 81f8 	beq.w	1a0038ba <_svfprintf_r+0x99a>
1a0034ca:	ebaa 0507 	sub.w	r5, sl, r7
1a0034ce:	2d00      	cmp	r5, #0
1a0034d0:	f300 8236 	bgt.w	1a003940 <_svfprintf_r+0xa20>
1a0034d4:	9b02      	ldr	r3, [sp, #8]
1a0034d6:	05da      	lsls	r2, r3, #23
1a0034d8:	f100 8185 	bmi.w	1a0037e6 <_svfprintf_r+0x8c6>
1a0034dc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a0034de:	f8c9 6000 	str.w	r6, [r9]
1a0034e2:	3301      	adds	r3, #1
1a0034e4:	443c      	add	r4, r7
1a0034e6:	2b07      	cmp	r3, #7
1a0034e8:	942a      	str	r4, [sp, #168]	; 0xa8
1a0034ea:	f8c9 7004 	str.w	r7, [r9, #4]
1a0034ee:	9329      	str	r3, [sp, #164]	; 0xa4
1a0034f0:	f300 82b2 	bgt.w	1a003a58 <_svfprintf_r+0xb38>
1a0034f4:	f109 0908 	add.w	r9, r9, #8
1a0034f8:	9b02      	ldr	r3, [sp, #8]
1a0034fa:	0759      	lsls	r1, r3, #29
1a0034fc:	d505      	bpl.n	1a00350a <_svfprintf_r+0x5ea>
1a0034fe:	9b05      	ldr	r3, [sp, #20]
1a003500:	9a03      	ldr	r2, [sp, #12]
1a003502:	1a9d      	subs	r5, r3, r2
1a003504:	2d00      	cmp	r5, #0
1a003506:	f300 82cb 	bgt.w	1a003aa0 <_svfprintf_r+0xb80>
1a00350a:	e9dd 3204 	ldrd	r3, r2, [sp, #16]
1a00350e:	9903      	ldr	r1, [sp, #12]
1a003510:	428a      	cmp	r2, r1
1a003512:	bfac      	ite	ge
1a003514:	189b      	addge	r3, r3, r2
1a003516:	185b      	addlt	r3, r3, r1
1a003518:	9304      	str	r3, [sp, #16]
1a00351a:	2c00      	cmp	r4, #0
1a00351c:	f47f add7 	bne.w	1a0030ce <_svfprintf_r+0x1ae>
1a003520:	2300      	movs	r3, #0
1a003522:	9329      	str	r3, [sp, #164]	; 0xa4
1a003524:	9b08      	ldr	r3, [sp, #32]
1a003526:	b11b      	cbz	r3, 1a003530 <_svfprintf_r+0x610>
1a003528:	9908      	ldr	r1, [sp, #32]
1a00352a:	9806      	ldr	r0, [sp, #24]
1a00352c:	f7fe ff8c 	bl	1a002448 <_free_r>
1a003530:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
1a003534:	465e      	mov	r6, fp
1a003536:	e693      	b.n	1a003260 <_svfprintf_r+0x340>
1a003538:	2d10      	cmp	r5, #16
1a00353a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a00353c:	dd29      	ble.n	1a003592 <_svfprintf_r+0x672>
1a00353e:	4620      	mov	r0, r4
1a003540:	4649      	mov	r1, r9
1a003542:	2310      	movs	r3, #16
1a003544:	46b1      	mov	r9, r6
1a003546:	971e      	str	r7, [sp, #120]	; 0x78
1a003548:	9c06      	ldr	r4, [sp, #24]
1a00354a:	9e07      	ldr	r6, [sp, #28]
1a00354c:	e004      	b.n	1a003558 <_svfprintf_r+0x638>
1a00354e:	3d10      	subs	r5, #16
1a003550:	2d10      	cmp	r5, #16
1a003552:	f101 0108 	add.w	r1, r1, #8
1a003556:	dd18      	ble.n	1a00358a <_svfprintf_r+0x66a>
1a003558:	3201      	adds	r2, #1
1a00355a:	4fc4      	ldr	r7, [pc, #784]	; (1a00386c <_svfprintf_r+0x94c>)
1a00355c:	3010      	adds	r0, #16
1a00355e:	2a07      	cmp	r2, #7
1a003560:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
1a003564:	e9c1 7300 	strd	r7, r3, [r1]
1a003568:	ddf1      	ble.n	1a00354e <_svfprintf_r+0x62e>
1a00356a:	aa28      	add	r2, sp, #160	; 0xa0
1a00356c:	4631      	mov	r1, r6
1a00356e:	4620      	mov	r0, r4
1a003570:	f002 ff9e 	bl	1a0064b0 <__ssprint_r>
1a003574:	2800      	cmp	r0, #0
1a003576:	f47f adb2 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a00357a:	3d10      	subs	r5, #16
1a00357c:	2d10      	cmp	r5, #16
1a00357e:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
1a003582:	a92b      	add	r1, sp, #172	; 0xac
1a003584:	f04f 0310 	mov.w	r3, #16
1a003588:	dce6      	bgt.n	1a003558 <_svfprintf_r+0x638>
1a00358a:	9f1e      	ldr	r7, [sp, #120]	; 0x78
1a00358c:	464e      	mov	r6, r9
1a00358e:	4604      	mov	r4, r0
1a003590:	4689      	mov	r9, r1
1a003592:	3201      	adds	r2, #1
1a003594:	4bb5      	ldr	r3, [pc, #724]	; (1a00386c <_svfprintf_r+0x94c>)
1a003596:	442c      	add	r4, r5
1a003598:	2a07      	cmp	r2, #7
1a00359a:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a00359e:	e9c9 3500 	strd	r3, r5, [r9]
1a0035a2:	f300 85c9 	bgt.w	1a004138 <_svfprintf_r+0x1218>
1a0035a6:	f109 0908 	add.w	r9, r9, #8
1a0035aa:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
1a0035ae:	e768      	b.n	1a003482 <_svfprintf_r+0x562>
1a0035b0:	9c09      	ldr	r4, [sp, #36]	; 0x24
1a0035b2:	3407      	adds	r4, #7
1a0035b4:	f024 0307 	bic.w	r3, r4, #7
1a0035b8:	ecb3 7b02 	vldmia	r3!, {d7}
1a0035bc:	ec55 4b17 	vmov	r4, r5, d7
1a0035c0:	9309      	str	r3, [sp, #36]	; 0x24
1a0035c2:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
1a0035c6:	931b      	str	r3, [sp, #108]	; 0x6c
1a0035c8:	ed8d 7a1a 	vstr	s14, [sp, #104]	; 0x68
1a0035cc:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
1a0035d0:	f04f 32ff 	mov.w	r2, #4294967295
1a0035d4:	4ba6      	ldr	r3, [pc, #664]	; (1a003870 <_svfprintf_r+0x950>)
1a0035d6:	ed8d 7b10 	vstr	d7, [sp, #64]	; 0x40
1a0035da:	f7fe fd25 	bl	1a002028 <__aeabi_dcmpun>
1a0035de:	2800      	cmp	r0, #0
1a0035e0:	f040 83d1 	bne.w	1a003d86 <_svfprintf_r+0xe66>
1a0035e4:	f04f 32ff 	mov.w	r2, #4294967295
1a0035e8:	4ba1      	ldr	r3, [pc, #644]	; (1a003870 <_svfprintf_r+0x950>)
1a0035ea:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
1a0035ee:	f7fe fcfd 	bl	1a001fec <__aeabi_dcmple>
1a0035f2:	2800      	cmp	r0, #0
1a0035f4:	f040 83c7 	bne.w	1a003d86 <_svfprintf_r+0xe66>
1a0035f8:	2200      	movs	r2, #0
1a0035fa:	2300      	movs	r3, #0
1a0035fc:	4620      	mov	r0, r4
1a0035fe:	4629      	mov	r1, r5
1a003600:	f7fe fcea 	bl	1a001fd8 <__aeabi_dcmplt>
1a003604:	2800      	cmp	r0, #0
1a003606:	f040 86a0 	bne.w	1a00434a <_svfprintf_r+0x142a>
1a00360a:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
1a00360e:	4e99      	ldr	r6, [pc, #612]	; (1a003874 <_svfprintf_r+0x954>)
1a003610:	4b99      	ldr	r3, [pc, #612]	; (1a003878 <_svfprintf_r+0x958>)
1a003612:	9802      	ldr	r0, [sp, #8]
1a003614:	2100      	movs	r1, #0
1a003616:	2703      	movs	r7, #3
1a003618:	f020 0080 	bic.w	r0, r0, #128	; 0x80
1a00361c:	9703      	str	r7, [sp, #12]
1a00361e:	9108      	str	r1, [sp, #32]
1a003620:	9002      	str	r0, [sp, #8]
1a003622:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
1a003626:	bfc8      	it	gt
1a003628:	461e      	movgt	r6, r3
1a00362a:	468a      	mov	sl, r1
1a00362c:	910c      	str	r1, [sp, #48]	; 0x30
1a00362e:	e9cd 110e 	strd	r1, r1, [sp, #56]	; 0x38
1a003632:	e655      	b.n	1a0032e0 <_svfprintf_r+0x3c0>
1a003634:	9d06      	ldr	r5, [sp, #24]
1a003636:	4628      	mov	r0, r5
1a003638:	f002 f94c 	bl	1a0058d4 <_localeconv_r>
1a00363c:	6843      	ldr	r3, [r0, #4]
1a00363e:	9317      	str	r3, [sp, #92]	; 0x5c
1a003640:	4618      	mov	r0, r3
1a003642:	f7ff fbfd 	bl	1a002e40 <strlen>
1a003646:	9019      	str	r0, [sp, #100]	; 0x64
1a003648:	4604      	mov	r4, r0
1a00364a:	4628      	mov	r0, r5
1a00364c:	f002 f942 	bl	1a0058d4 <_localeconv_r>
1a003650:	6883      	ldr	r3, [r0, #8]
1a003652:	9318      	str	r3, [sp, #96]	; 0x60
1a003654:	2120      	movs	r1, #32
1a003656:	2c00      	cmp	r4, #0
1a003658:	f43f ad2a 	beq.w	1a0030b0 <_svfprintf_r+0x190>
1a00365c:	9b18      	ldr	r3, [sp, #96]	; 0x60
1a00365e:	f89b 8000 	ldrb.w	r8, [fp]
1a003662:	2b00      	cmp	r3, #0
1a003664:	f43f acbc 	beq.w	1a002fe0 <_svfprintf_r+0xc0>
1a003668:	781b      	ldrb	r3, [r3, #0]
1a00366a:	2b00      	cmp	r3, #0
1a00366c:	f43f acb8 	beq.w	1a002fe0 <_svfprintf_r+0xc0>
1a003670:	9b02      	ldr	r3, [sp, #8]
1a003672:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
1a003676:	9302      	str	r3, [sp, #8]
1a003678:	e4b2      	b.n	1a002fe0 <_svfprintf_r+0xc0>
1a00367a:	9b02      	ldr	r3, [sp, #8]
1a00367c:	f89b 8000 	ldrb.w	r8, [fp]
1a003680:	f043 0301 	orr.w	r3, r3, #1
1a003684:	9302      	str	r3, [sp, #8]
1a003686:	e4ab      	b.n	1a002fe0 <_svfprintf_r+0xc0>
1a003688:	f89d 3083 	ldrb.w	r3, [sp, #131]	; 0x83
1a00368c:	f89b 8000 	ldrb.w	r8, [fp]
1a003690:	2b00      	cmp	r3, #0
1a003692:	f47f aca5 	bne.w	1a002fe0 <_svfprintf_r+0xc0>
1a003696:	f88d 1083 	strb.w	r1, [sp, #131]	; 0x83
1a00369a:	e4a1      	b.n	1a002fe0 <_svfprintf_r+0xc0>
1a00369c:	9f02      	ldr	r7, [sp, #8]
1a00369e:	463b      	mov	r3, r7
1a0036a0:	069b      	lsls	r3, r3, #26
1a0036a2:	f53f ae76 	bmi.w	1a003392 <_svfprintf_r+0x472>
1a0036a6:	9b02      	ldr	r3, [sp, #8]
1a0036a8:	9a09      	ldr	r2, [sp, #36]	; 0x24
1a0036aa:	06de      	lsls	r6, r3, #27
1a0036ac:	f852 4b04 	ldr.w	r4, [r2], #4
1a0036b0:	f101 814b 	bmi.w	1a00494a <_svfprintf_r+0x1a2a>
1a0036b4:	9f02      	ldr	r7, [sp, #8]
1a0036b6:	067d      	lsls	r5, r7, #25
1a0036b8:	f140 862f 	bpl.w	1a00431a <_svfprintf_r+0x13fa>
1a0036bc:	9209      	str	r2, [sp, #36]	; 0x24
1a0036be:	b2a4      	uxth	r4, r4
1a0036c0:	2500      	movs	r5, #0
1a0036c2:	2301      	movs	r3, #1
1a0036c4:	e582      	b.n	1a0031cc <_svfprintf_r+0x2ac>
1a0036c6:	f1b8 0f00 	cmp.w	r8, #0
1a0036ca:	f43f adcd 	beq.w	1a003268 <_svfprintf_r+0x348>
1a0036ce:	2300      	movs	r3, #0
1a0036d0:	2701      	movs	r7, #1
1a0036d2:	461a      	mov	r2, r3
1a0036d4:	9703      	str	r7, [sp, #12]
1a0036d6:	f88d 80ec 	strb.w	r8, [sp, #236]	; 0xec
1a0036da:	e6b7      	b.n	1a00344c <_svfprintf_r+0x52c>
1a0036dc:	9f02      	ldr	r7, [sp, #8]
1a0036de:	2d00      	cmp	r5, #0
1a0036e0:	bf08      	it	eq
1a0036e2:	2c0a      	cmpeq	r4, #10
1a0036e4:	d239      	bcs.n	1a00375a <_svfprintf_r+0x83a>
1a0036e6:	3430      	adds	r4, #48	; 0x30
1a0036e8:	9702      	str	r7, [sp, #8]
1a0036ea:	f88d 414f 	strb.w	r4, [sp, #335]	; 0x14f
1a0036ee:	2701      	movs	r7, #1
1a0036f0:	f20d 164f 	addw	r6, sp, #335	; 0x14f
1a0036f4:	2300      	movs	r3, #0
1a0036f6:	4557      	cmp	r7, sl
1a0036f8:	9308      	str	r3, [sp, #32]
1a0036fa:	930c      	str	r3, [sp, #48]	; 0x30
1a0036fc:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
1a003700:	463b      	mov	r3, r7
1a003702:	bfb8      	it	lt
1a003704:	4653      	movlt	r3, sl
1a003706:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
1a00370a:	9303      	str	r3, [sp, #12]
1a00370c:	e5e8      	b.n	1a0032e0 <_svfprintf_r+0x3c0>
1a00370e:	9f02      	ldr	r7, [sp, #8]
1a003710:	2b01      	cmp	r3, #1
1a003712:	d0e4      	beq.n	1a0036de <_svfprintf_r+0x7be>
1a003714:	2b02      	cmp	r3, #2
1a003716:	f000 8202 	beq.w	1a003b1e <_svfprintf_r+0xbfe>
1a00371a:	a954      	add	r1, sp, #336	; 0x150
1a00371c:	e000      	b.n	1a003720 <_svfprintf_r+0x800>
1a00371e:	4631      	mov	r1, r6
1a003720:	08e2      	lsrs	r2, r4, #3
1a003722:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
1a003726:	08e8      	lsrs	r0, r5, #3
1a003728:	f004 0307 	and.w	r3, r4, #7
1a00372c:	4605      	mov	r5, r0
1a00372e:	4614      	mov	r4, r2
1a003730:	3330      	adds	r3, #48	; 0x30
1a003732:	ea54 0205 	orrs.w	r2, r4, r5
1a003736:	f801 3c01 	strb.w	r3, [r1, #-1]
1a00373a:	f101 36ff 	add.w	r6, r1, #4294967295
1a00373e:	d1ee      	bne.n	1a00371e <_svfprintf_r+0x7fe>
1a003740:	07f8      	lsls	r0, r7, #31
1a003742:	d54c      	bpl.n	1a0037de <_svfprintf_r+0x8be>
1a003744:	2b30      	cmp	r3, #48	; 0x30
1a003746:	d04a      	beq.n	1a0037de <_svfprintf_r+0x8be>
1a003748:	2330      	movs	r3, #48	; 0x30
1a00374a:	3902      	subs	r1, #2
1a00374c:	f806 3c01 	strb.w	r3, [r6, #-1]
1a003750:	ab54      	add	r3, sp, #336	; 0x150
1a003752:	9702      	str	r7, [sp, #8]
1a003754:	460e      	mov	r6, r1
1a003756:	1a5f      	subs	r7, r3, r1
1a003758:	e7cc      	b.n	1a0036f4 <_svfprintf_r+0x7d4>
1a00375a:	f407 6380 	and.w	r3, r7, #1024	; 0x400
1a00375e:	2200      	movs	r2, #0
1a003760:	f8cd b008 	str.w	fp, [sp, #8]
1a003764:	f8cd 800c 	str.w	r8, [sp, #12]
1a003768:	f8cd 9020 	str.w	r9, [sp, #32]
1a00376c:	ae54      	add	r6, sp, #336	; 0x150
1a00376e:	46b9      	mov	r9, r7
1a003770:	4693      	mov	fp, r2
1a003772:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
1a003776:	461f      	mov	r7, r3
1a003778:	e007      	b.n	1a00378a <_svfprintf_r+0x86a>
1a00377a:	f7fe fc93 	bl	1a0020a4 <__aeabi_uldivmod>
1a00377e:	2d00      	cmp	r5, #0
1a003780:	bf08      	it	eq
1a003782:	2c0a      	cmpeq	r4, #10
1a003784:	d320      	bcc.n	1a0037c8 <_svfprintf_r+0x8a8>
1a003786:	4604      	mov	r4, r0
1a003788:	460d      	mov	r5, r1
1a00378a:	220a      	movs	r2, #10
1a00378c:	2300      	movs	r3, #0
1a00378e:	4620      	mov	r0, r4
1a003790:	4629      	mov	r1, r5
1a003792:	f7fe fc87 	bl	1a0020a4 <__aeabi_uldivmod>
1a003796:	f102 0c30 	add.w	ip, r2, #48	; 0x30
1a00379a:	f806 cc01 	strb.w	ip, [r6, #-1]
1a00379e:	4620      	mov	r0, r4
1a0037a0:	4629      	mov	r1, r5
1a0037a2:	220a      	movs	r2, #10
1a0037a4:	2300      	movs	r3, #0
1a0037a6:	f10b 0b01 	add.w	fp, fp, #1
1a0037aa:	3e01      	subs	r6, #1
1a0037ac:	2f00      	cmp	r7, #0
1a0037ae:	d0e4      	beq.n	1a00377a <_svfprintf_r+0x85a>
1a0037b0:	f898 c000 	ldrb.w	ip, [r8]
1a0037b4:	45e3      	cmp	fp, ip
1a0037b6:	d1e0      	bne.n	1a00377a <_svfprintf_r+0x85a>
1a0037b8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
1a0037bc:	d0dd      	beq.n	1a00377a <_svfprintf_r+0x85a>
1a0037be:	429d      	cmp	r5, r3
1a0037c0:	bf08      	it	eq
1a0037c2:	4294      	cmpeq	r4, r2
1a0037c4:	f080 8669 	bcs.w	1a00449a <_svfprintf_r+0x157a>
1a0037c8:	f8cd b048 	str.w	fp, [sp, #72]	; 0x48
1a0037cc:	f8cd 8060 	str.w	r8, [sp, #96]	; 0x60
1a0037d0:	464f      	mov	r7, r9
1a0037d2:	f8dd b008 	ldr.w	fp, [sp, #8]
1a0037d6:	f8dd 800c 	ldr.w	r8, [sp, #12]
1a0037da:	f8dd 9020 	ldr.w	r9, [sp, #32]
1a0037de:	9702      	str	r7, [sp, #8]
1a0037e0:	ab54      	add	r3, sp, #336	; 0x150
1a0037e2:	1b9f      	subs	r7, r3, r6
1a0037e4:	e786      	b.n	1a0036f4 <_svfprintf_r+0x7d4>
1a0037e6:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
1a0037ea:	f340 80e3 	ble.w	1a0039b4 <_svfprintf_r+0xa94>
1a0037ee:	2200      	movs	r2, #0
1a0037f0:	2300      	movs	r3, #0
1a0037f2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
1a0037f6:	f7fe fbe5 	bl	1a001fc4 <__aeabi_dcmpeq>
1a0037fa:	2800      	cmp	r0, #0
1a0037fc:	f000 81a8 	beq.w	1a003b50 <_svfprintf_r+0xc30>
1a003800:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a003802:	4a1e      	ldr	r2, [pc, #120]	; (1a00387c <_svfprintf_r+0x95c>)
1a003804:	f8c9 2000 	str.w	r2, [r9]
1a003808:	3301      	adds	r3, #1
1a00380a:	3401      	adds	r4, #1
1a00380c:	2201      	movs	r2, #1
1a00380e:	2b07      	cmp	r3, #7
1a003810:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
1a003814:	f8c9 2004 	str.w	r2, [r9, #4]
1a003818:	f300 84d1 	bgt.w	1a0041be <_svfprintf_r+0x129e>
1a00381c:	f109 0908 	add.w	r9, r9, #8
1a003820:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a003822:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a003824:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a003826:	4293      	cmp	r3, r2
1a003828:	f280 828a 	bge.w	1a003d40 <_svfprintf_r+0xe20>
1a00382c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a00382e:	9a15      	ldr	r2, [sp, #84]	; 0x54
1a003830:	f8c9 2000 	str.w	r2, [r9]
1a003834:	9a13      	ldr	r2, [sp, #76]	; 0x4c
1a003836:	f8c9 2004 	str.w	r2, [r9, #4]
1a00383a:	3301      	adds	r3, #1
1a00383c:	4414      	add	r4, r2
1a00383e:	2b07      	cmp	r3, #7
1a003840:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
1a003844:	f300 838f 	bgt.w	1a003f66 <_svfprintf_r+0x1046>
1a003848:	f109 0908 	add.w	r9, r9, #8
1a00384c:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a00384e:	1e5d      	subs	r5, r3, #1
1a003850:	2d00      	cmp	r5, #0
1a003852:	f77f ae51 	ble.w	1a0034f8 <_svfprintf_r+0x5d8>
1a003856:	2d10      	cmp	r5, #16
1a003858:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a00385a:	4b09      	ldr	r3, [pc, #36]	; (1a003880 <_svfprintf_r+0x960>)
1a00385c:	f340 84bc 	ble.w	1a0041d8 <_svfprintf_r+0x12b8>
1a003860:	2610      	movs	r6, #16
1a003862:	e9dd 7806 	ldrd	r7, r8, [sp, #24]
1a003866:	469a      	mov	sl, r3
1a003868:	e012      	b.n	1a003890 <_svfprintf_r+0x970>
1a00386a:	bf00      	nop
1a00386c:	1a006a50 	.word	0x1a006a50
1a003870:	7fefffff 	.word	0x7fefffff
1a003874:	1a006a0c 	.word	0x1a006a0c
1a003878:	1a006a10 	.word	0x1a006a10
1a00387c:	1a006a4c 	.word	0x1a006a4c
1a003880:	1a006a60 	.word	0x1a006a60
1a003884:	f109 0908 	add.w	r9, r9, #8
1a003888:	3d10      	subs	r5, #16
1a00388a:	2d10      	cmp	r5, #16
1a00388c:	f340 84a3 	ble.w	1a0041d6 <_svfprintf_r+0x12b6>
1a003890:	3201      	adds	r2, #1
1a003892:	3410      	adds	r4, #16
1a003894:	2a07      	cmp	r2, #7
1a003896:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a00389a:	e9c9 a600 	strd	sl, r6, [r9]
1a00389e:	ddf1      	ble.n	1a003884 <_svfprintf_r+0x964>
1a0038a0:	aa28      	add	r2, sp, #160	; 0xa0
1a0038a2:	4641      	mov	r1, r8
1a0038a4:	4638      	mov	r0, r7
1a0038a6:	f002 fe03 	bl	1a0064b0 <__ssprint_r>
1a0038aa:	2800      	cmp	r0, #0
1a0038ac:	f47f ac17 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a0038b0:	e9dd 2429 	ldrd	r2, r4, [sp, #164]	; 0xa4
1a0038b4:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
1a0038b8:	e7e6      	b.n	1a003888 <_svfprintf_r+0x968>
1a0038ba:	9b05      	ldr	r3, [sp, #20]
1a0038bc:	9a03      	ldr	r2, [sp, #12]
1a0038be:	1a9d      	subs	r5, r3, r2
1a0038c0:	2d00      	cmp	r5, #0
1a0038c2:	f77f ae02 	ble.w	1a0034ca <_svfprintf_r+0x5aa>
1a0038c6:	2d10      	cmp	r5, #16
1a0038c8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a0038ca:	4b9f      	ldr	r3, [pc, #636]	; (1a003b48 <_svfprintf_r+0xc28>)
1a0038cc:	dd28      	ble.n	1a003920 <_svfprintf_r+0xa00>
1a0038ce:	4620      	mov	r0, r4
1a0038d0:	970a      	str	r7, [sp, #40]	; 0x28
1a0038d2:	4649      	mov	r1, r9
1a0038d4:	9c06      	ldr	r4, [sp, #24]
1a0038d6:	46b1      	mov	r9, r6
1a0038d8:	461f      	mov	r7, r3
1a0038da:	9e07      	ldr	r6, [sp, #28]
1a0038dc:	e004      	b.n	1a0038e8 <_svfprintf_r+0x9c8>
1a0038de:	3d10      	subs	r5, #16
1a0038e0:	2d10      	cmp	r5, #16
1a0038e2:	f101 0108 	add.w	r1, r1, #8
1a0038e6:	dd16      	ble.n	1a003916 <_svfprintf_r+0x9f6>
1a0038e8:	3201      	adds	r2, #1
1a0038ea:	3010      	adds	r0, #16
1a0038ec:	2310      	movs	r3, #16
1a0038ee:	2a07      	cmp	r2, #7
1a0038f0:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
1a0038f4:	600f      	str	r7, [r1, #0]
1a0038f6:	604b      	str	r3, [r1, #4]
1a0038f8:	ddf1      	ble.n	1a0038de <_svfprintf_r+0x9be>
1a0038fa:	aa28      	add	r2, sp, #160	; 0xa0
1a0038fc:	4631      	mov	r1, r6
1a0038fe:	4620      	mov	r0, r4
1a003900:	f002 fdd6 	bl	1a0064b0 <__ssprint_r>
1a003904:	2800      	cmp	r0, #0
1a003906:	f47f abea 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a00390a:	3d10      	subs	r5, #16
1a00390c:	2d10      	cmp	r5, #16
1a00390e:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
1a003912:	a92b      	add	r1, sp, #172	; 0xac
1a003914:	dce8      	bgt.n	1a0038e8 <_svfprintf_r+0x9c8>
1a003916:	463b      	mov	r3, r7
1a003918:	9f0a      	ldr	r7, [sp, #40]	; 0x28
1a00391a:	464e      	mov	r6, r9
1a00391c:	4604      	mov	r4, r0
1a00391e:	4689      	mov	r9, r1
1a003920:	3201      	adds	r2, #1
1a003922:	442c      	add	r4, r5
1a003924:	2a07      	cmp	r2, #7
1a003926:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a00392a:	e9c9 3500 	strd	r3, r5, [r9]
1a00392e:	f300 846a 	bgt.w	1a004206 <_svfprintf_r+0x12e6>
1a003932:	ebaa 0507 	sub.w	r5, sl, r7
1a003936:	2d00      	cmp	r5, #0
1a003938:	f109 0908 	add.w	r9, r9, #8
1a00393c:	f77f adca 	ble.w	1a0034d4 <_svfprintf_r+0x5b4>
1a003940:	2d10      	cmp	r5, #16
1a003942:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a003944:	4b80      	ldr	r3, [pc, #512]	; (1a003b48 <_svfprintf_r+0xc28>)
1a003946:	dd29      	ble.n	1a00399c <_svfprintf_r+0xa7c>
1a003948:	4620      	mov	r0, r4
1a00394a:	970a      	str	r7, [sp, #40]	; 0x28
1a00394c:	4649      	mov	r1, r9
1a00394e:	f04f 0a10 	mov.w	sl, #16
1a003952:	46b1      	mov	r9, r6
1a003954:	9c06      	ldr	r4, [sp, #24]
1a003956:	9e07      	ldr	r6, [sp, #28]
1a003958:	461f      	mov	r7, r3
1a00395a:	e004      	b.n	1a003966 <_svfprintf_r+0xa46>
1a00395c:	3d10      	subs	r5, #16
1a00395e:	2d10      	cmp	r5, #16
1a003960:	f101 0108 	add.w	r1, r1, #8
1a003964:	dd15      	ble.n	1a003992 <_svfprintf_r+0xa72>
1a003966:	3201      	adds	r2, #1
1a003968:	3010      	adds	r0, #16
1a00396a:	2a07      	cmp	r2, #7
1a00396c:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
1a003970:	e9c1 7a00 	strd	r7, sl, [r1]
1a003974:	ddf2      	ble.n	1a00395c <_svfprintf_r+0xa3c>
1a003976:	aa28      	add	r2, sp, #160	; 0xa0
1a003978:	4631      	mov	r1, r6
1a00397a:	4620      	mov	r0, r4
1a00397c:	f002 fd98 	bl	1a0064b0 <__ssprint_r>
1a003980:	2800      	cmp	r0, #0
1a003982:	f47f abac 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a003986:	3d10      	subs	r5, #16
1a003988:	2d10      	cmp	r5, #16
1a00398a:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
1a00398e:	a92b      	add	r1, sp, #172	; 0xac
1a003990:	dce9      	bgt.n	1a003966 <_svfprintf_r+0xa46>
1a003992:	463b      	mov	r3, r7
1a003994:	9f0a      	ldr	r7, [sp, #40]	; 0x28
1a003996:	464e      	mov	r6, r9
1a003998:	4604      	mov	r4, r0
1a00399a:	4689      	mov	r9, r1
1a00399c:	3201      	adds	r2, #1
1a00399e:	442c      	add	r4, r5
1a0039a0:	2a07      	cmp	r2, #7
1a0039a2:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a0039a6:	e9c9 3500 	strd	r3, r5, [r9]
1a0039aa:	f300 8197 	bgt.w	1a003cdc <_svfprintf_r+0xdbc>
1a0039ae:	f109 0908 	add.w	r9, r9, #8
1a0039b2:	e58f      	b.n	1a0034d4 <_svfprintf_r+0x5b4>
1a0039b4:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a0039b6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a0039b8:	2a01      	cmp	r2, #1
1a0039ba:	f104 0401 	add.w	r4, r4, #1
1a0039be:	f103 0501 	add.w	r5, r3, #1
1a0039c2:	f109 0708 	add.w	r7, r9, #8
1a0039c6:	f340 8148 	ble.w	1a003c5a <_svfprintf_r+0xd3a>
1a0039ca:	2301      	movs	r3, #1
1a0039cc:	2d07      	cmp	r5, #7
1a0039ce:	f8c9 6000 	str.w	r6, [r9]
1a0039d2:	e9cd 5429 	strd	r5, r4, [sp, #164]	; 0xa4
1a0039d6:	f8c9 3004 	str.w	r3, [r9, #4]
1a0039da:	f300 8198 	bgt.w	1a003d0e <_svfprintf_r+0xdee>
1a0039de:	9b13      	ldr	r3, [sp, #76]	; 0x4c
1a0039e0:	9a15      	ldr	r2, [sp, #84]	; 0x54
1a0039e2:	1c69      	adds	r1, r5, #1
1a0039e4:	441c      	add	r4, r3
1a0039e6:	2907      	cmp	r1, #7
1a0039e8:	910b      	str	r1, [sp, #44]	; 0x2c
1a0039ea:	e9cd 1429 	strd	r1, r4, [sp, #164]	; 0xa4
1a0039ee:	e9c7 2300 	strd	r2, r3, [r7]
1a0039f2:	f300 8198 	bgt.w	1a003d26 <_svfprintf_r+0xe06>
1a0039f6:	3708      	adds	r7, #8
1a0039f8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
1a0039fa:	9d12      	ldr	r5, [sp, #72]	; 0x48
1a0039fc:	f102 0a01 	add.w	sl, r2, #1
1a003a00:	2300      	movs	r3, #0
1a003a02:	2200      	movs	r2, #0
1a003a04:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
1a003a08:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
1a003a0c:	f107 0908 	add.w	r9, r7, #8
1a003a10:	f105 38ff 	add.w	r8, r5, #4294967295
1a003a14:	f7fe fad6 	bl	1a001fc4 <__aeabi_dcmpeq>
1a003a18:	2800      	cmp	r0, #0
1a003a1a:	f040 8131 	bne.w	1a003c80 <_svfprintf_r+0xd60>
1a003a1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a003a20:	f8c7 8004 	str.w	r8, [r7, #4]
1a003a24:	3601      	adds	r6, #1
1a003a26:	4444      	add	r4, r8
1a003a28:	2b07      	cmp	r3, #7
1a003a2a:	603e      	str	r6, [r7, #0]
1a003a2c:	942a      	str	r4, [sp, #168]	; 0xa8
1a003a2e:	9329      	str	r3, [sp, #164]	; 0xa4
1a003a30:	f300 8367 	bgt.w	1a004102 <_svfprintf_r+0x11e2>
1a003a34:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
1a003a36:	f107 0310 	add.w	r3, r7, #16
1a003a3a:	3202      	adds	r2, #2
1a003a3c:	464f      	mov	r7, r9
1a003a3e:	920a      	str	r2, [sp, #40]	; 0x28
1a003a40:	4699      	mov	r9, r3
1a003a42:	9a16      	ldr	r2, [sp, #88]	; 0x58
1a003a44:	607a      	str	r2, [r7, #4]
1a003a46:	4414      	add	r4, r2
1a003a48:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1a003a4a:	942a      	str	r4, [sp, #168]	; 0xa8
1a003a4c:	ab24      	add	r3, sp, #144	; 0x90
1a003a4e:	2a07      	cmp	r2, #7
1a003a50:	9229      	str	r2, [sp, #164]	; 0xa4
1a003a52:	603b      	str	r3, [r7, #0]
1a003a54:	f77f ad50 	ble.w	1a0034f8 <_svfprintf_r+0x5d8>
1a003a58:	aa28      	add	r2, sp, #160	; 0xa0
1a003a5a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1a003a5e:	f002 fd27 	bl	1a0064b0 <__ssprint_r>
1a003a62:	2800      	cmp	r0, #0
1a003a64:	f47f ab3b 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a003a68:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a003a6a:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
1a003a6e:	e543      	b.n	1a0034f8 <_svfprintf_r+0x5d8>
1a003a70:	aa28      	add	r2, sp, #160	; 0xa0
1a003a72:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1a003a76:	f002 fd1b 	bl	1a0064b0 <__ssprint_r>
1a003a7a:	2800      	cmp	r0, #0
1a003a7c:	f47f ab2f 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a003a80:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a003a82:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
1a003a86:	e50c      	b.n	1a0034a2 <_svfprintf_r+0x582>
1a003a88:	aa28      	add	r2, sp, #160	; 0xa0
1a003a8a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1a003a8e:	f002 fd0f 	bl	1a0064b0 <__ssprint_r>
1a003a92:	2800      	cmp	r0, #0
1a003a94:	f47f ab23 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a003a98:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a003a9a:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
1a003a9e:	e510      	b.n	1a0034c2 <_svfprintf_r+0x5a2>
1a003aa0:	2d10      	cmp	r5, #16
1a003aa2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a003aa4:	dd20      	ble.n	1a003ae8 <_svfprintf_r+0xbc8>
1a003aa6:	2610      	movs	r6, #16
1a003aa8:	e9dd 7806 	ldrd	r7, r8, [sp, #24]
1a003aac:	e004      	b.n	1a003ab8 <_svfprintf_r+0xb98>
1a003aae:	3d10      	subs	r5, #16
1a003ab0:	2d10      	cmp	r5, #16
1a003ab2:	f109 0908 	add.w	r9, r9, #8
1a003ab6:	dd17      	ble.n	1a003ae8 <_svfprintf_r+0xbc8>
1a003ab8:	3301      	adds	r3, #1
1a003aba:	4a24      	ldr	r2, [pc, #144]	; (1a003b4c <_svfprintf_r+0xc2c>)
1a003abc:	3410      	adds	r4, #16
1a003abe:	2b07      	cmp	r3, #7
1a003ac0:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
1a003ac4:	e9c9 2600 	strd	r2, r6, [r9]
1a003ac8:	ddf1      	ble.n	1a003aae <_svfprintf_r+0xb8e>
1a003aca:	aa28      	add	r2, sp, #160	; 0xa0
1a003acc:	4641      	mov	r1, r8
1a003ace:	4638      	mov	r0, r7
1a003ad0:	f002 fcee 	bl	1a0064b0 <__ssprint_r>
1a003ad4:	2800      	cmp	r0, #0
1a003ad6:	f47f ab02 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a003ada:	3d10      	subs	r5, #16
1a003adc:	2d10      	cmp	r5, #16
1a003ade:	e9dd 3429 	ldrd	r3, r4, [sp, #164]	; 0xa4
1a003ae2:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
1a003ae6:	dce7      	bgt.n	1a003ab8 <_svfprintf_r+0xb98>
1a003ae8:	3301      	adds	r3, #1
1a003aea:	4a18      	ldr	r2, [pc, #96]	; (1a003b4c <_svfprintf_r+0xc2c>)
1a003aec:	442c      	add	r4, r5
1a003aee:	2b07      	cmp	r3, #7
1a003af0:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
1a003af4:	e9c9 2500 	strd	r2, r5, [r9]
1a003af8:	f77f ad07 	ble.w	1a00350a <_svfprintf_r+0x5ea>
1a003afc:	aa28      	add	r2, sp, #160	; 0xa0
1a003afe:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1a003b02:	f002 fcd5 	bl	1a0064b0 <__ssprint_r>
1a003b06:	2800      	cmp	r0, #0
1a003b08:	f47f aae9 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a003b0c:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a003b0e:	e4fc      	b.n	1a00350a <_svfprintf_r+0x5ea>
1a003b10:	2b01      	cmp	r3, #1
1a003b12:	f000 8467 	beq.w	1a0043e4 <_svfprintf_r+0x14c4>
1a003b16:	2b02      	cmp	r3, #2
1a003b18:	9f02      	ldr	r7, [sp, #8]
1a003b1a:	f47f adfe 	bne.w	1a00371a <_svfprintf_r+0x7fa>
1a003b1e:	9814      	ldr	r0, [sp, #80]	; 0x50
1a003b20:	ae54      	add	r6, sp, #336	; 0x150
1a003b22:	0923      	lsrs	r3, r4, #4
1a003b24:	f004 010f 	and.w	r1, r4, #15
1a003b28:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
1a003b2c:	092a      	lsrs	r2, r5, #4
1a003b2e:	461c      	mov	r4, r3
1a003b30:	4615      	mov	r5, r2
1a003b32:	5c43      	ldrb	r3, [r0, r1]
1a003b34:	f806 3d01 	strb.w	r3, [r6, #-1]!
1a003b38:	ea54 0305 	orrs.w	r3, r4, r5
1a003b3c:	d1f1      	bne.n	1a003b22 <_svfprintf_r+0xc02>
1a003b3e:	ab54      	add	r3, sp, #336	; 0x150
1a003b40:	9702      	str	r7, [sp, #8]
1a003b42:	1b9f      	subs	r7, r3, r6
1a003b44:	e5d6      	b.n	1a0036f4 <_svfprintf_r+0x7d4>
1a003b46:	bf00      	nop
1a003b48:	1a006a60 	.word	0x1a006a60
1a003b4c:	1a006a50 	.word	0x1a006a50
1a003b50:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a003b52:	2b00      	cmp	r3, #0
1a003b54:	f340 82ff 	ble.w	1a004156 <_svfprintf_r+0x1236>
1a003b58:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a003b5a:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a003b5c:	4293      	cmp	r3, r2
1a003b5e:	bfa8      	it	ge
1a003b60:	4613      	movge	r3, r2
1a003b62:	2b00      	cmp	r3, #0
1a003b64:	461d      	mov	r5, r3
1a003b66:	dd0d      	ble.n	1a003b84 <_svfprintf_r+0xc64>
1a003b68:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a003b6a:	f8c9 6000 	str.w	r6, [r9]
1a003b6e:	3301      	adds	r3, #1
1a003b70:	442c      	add	r4, r5
1a003b72:	2b07      	cmp	r3, #7
1a003b74:	942a      	str	r4, [sp, #168]	; 0xa8
1a003b76:	f8c9 5004 	str.w	r5, [r9, #4]
1a003b7a:	9329      	str	r3, [sp, #164]	; 0xa4
1a003b7c:	f300 8480 	bgt.w	1a004480 <_svfprintf_r+0x1560>
1a003b80:	f109 0908 	add.w	r9, r9, #8
1a003b84:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a003b86:	2d00      	cmp	r5, #0
1a003b88:	bfa8      	it	ge
1a003b8a:	1b5b      	subge	r3, r3, r5
1a003b8c:	2b00      	cmp	r3, #0
1a003b8e:	461d      	mov	r5, r3
1a003b90:	f300 8213 	bgt.w	1a003fba <_svfprintf_r+0x109a>
1a003b94:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a003b96:	4433      	add	r3, r6
1a003b98:	469a      	mov	sl, r3
1a003b9a:	9b02      	ldr	r3, [sp, #8]
1a003b9c:	055f      	lsls	r7, r3, #21
1a003b9e:	f100 8233 	bmi.w	1a004008 <_svfprintf_r+0x10e8>
1a003ba2:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a003ba4:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a003ba6:	4293      	cmp	r3, r2
1a003ba8:	db03      	blt.n	1a003bb2 <_svfprintf_r+0xc92>
1a003baa:	9a02      	ldr	r2, [sp, #8]
1a003bac:	07d5      	lsls	r5, r2, #31
1a003bae:	f140 83de 	bpl.w	1a00436e <_svfprintf_r+0x144e>
1a003bb2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a003bb4:	9915      	ldr	r1, [sp, #84]	; 0x54
1a003bb6:	f8c9 1000 	str.w	r1, [r9]
1a003bba:	9913      	ldr	r1, [sp, #76]	; 0x4c
1a003bbc:	f8c9 1004 	str.w	r1, [r9, #4]
1a003bc0:	3201      	adds	r2, #1
1a003bc2:	440c      	add	r4, r1
1a003bc4:	2a07      	cmp	r2, #7
1a003bc6:	942a      	str	r4, [sp, #168]	; 0xa8
1a003bc8:	9229      	str	r2, [sp, #164]	; 0xa4
1a003bca:	f300 847c 	bgt.w	1a0044c6 <_svfprintf_r+0x15a6>
1a003bce:	f109 0908 	add.w	r9, r9, #8
1a003bd2:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a003bd4:	18b5      	adds	r5, r6, r2
1a003bd6:	eba5 050a 	sub.w	r5, r5, sl
1a003bda:	1ad3      	subs	r3, r2, r3
1a003bdc:	429d      	cmp	r5, r3
1a003bde:	bfa8      	it	ge
1a003be0:	461d      	movge	r5, r3
1a003be2:	2d00      	cmp	r5, #0
1a003be4:	dd0d      	ble.n	1a003c02 <_svfprintf_r+0xce2>
1a003be6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a003be8:	f8c9 a000 	str.w	sl, [r9]
1a003bec:	3201      	adds	r2, #1
1a003bee:	442c      	add	r4, r5
1a003bf0:	2a07      	cmp	r2, #7
1a003bf2:	942a      	str	r4, [sp, #168]	; 0xa8
1a003bf4:	f8c9 5004 	str.w	r5, [r9, #4]
1a003bf8:	9229      	str	r2, [sp, #164]	; 0xa4
1a003bfa:	f300 8579 	bgt.w	1a0046f0 <_svfprintf_r+0x17d0>
1a003bfe:	f109 0908 	add.w	r9, r9, #8
1a003c02:	2d00      	cmp	r5, #0
1a003c04:	bfac      	ite	ge
1a003c06:	1b5d      	subge	r5, r3, r5
1a003c08:	461d      	movlt	r5, r3
1a003c0a:	2d00      	cmp	r5, #0
1a003c0c:	f77f ac74 	ble.w	1a0034f8 <_svfprintf_r+0x5d8>
1a003c10:	2d10      	cmp	r5, #16
1a003c12:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a003c14:	4bc2      	ldr	r3, [pc, #776]	; (1a003f20 <_svfprintf_r+0x1000>)
1a003c16:	f340 82df 	ble.w	1a0041d8 <_svfprintf_r+0x12b8>
1a003c1a:	2610      	movs	r6, #16
1a003c1c:	e9dd 7806 	ldrd	r7, r8, [sp, #24]
1a003c20:	469a      	mov	sl, r3
1a003c22:	e005      	b.n	1a003c30 <_svfprintf_r+0xd10>
1a003c24:	f109 0908 	add.w	r9, r9, #8
1a003c28:	3d10      	subs	r5, #16
1a003c2a:	2d10      	cmp	r5, #16
1a003c2c:	f340 82d3 	ble.w	1a0041d6 <_svfprintf_r+0x12b6>
1a003c30:	3201      	adds	r2, #1
1a003c32:	3410      	adds	r4, #16
1a003c34:	2a07      	cmp	r2, #7
1a003c36:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a003c3a:	e9c9 a600 	strd	sl, r6, [r9]
1a003c3e:	ddf1      	ble.n	1a003c24 <_svfprintf_r+0xd04>
1a003c40:	aa28      	add	r2, sp, #160	; 0xa0
1a003c42:	4641      	mov	r1, r8
1a003c44:	4638      	mov	r0, r7
1a003c46:	f002 fc33 	bl	1a0064b0 <__ssprint_r>
1a003c4a:	2800      	cmp	r0, #0
1a003c4c:	f47f aa47 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a003c50:	e9dd 2429 	ldrd	r2, r4, [sp, #164]	; 0xa4
1a003c54:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
1a003c58:	e7e6      	b.n	1a003c28 <_svfprintf_r+0xd08>
1a003c5a:	9a02      	ldr	r2, [sp, #8]
1a003c5c:	07d0      	lsls	r0, r2, #31
1a003c5e:	f53f aeb4 	bmi.w	1a0039ca <_svfprintf_r+0xaaa>
1a003c62:	2201      	movs	r2, #1
1a003c64:	2d07      	cmp	r5, #7
1a003c66:	f8c9 6000 	str.w	r6, [r9]
1a003c6a:	e9cd 5429 	strd	r5, r4, [sp, #164]	; 0xa4
1a003c6e:	f8c9 2004 	str.w	r2, [r9, #4]
1a003c72:	f300 8246 	bgt.w	1a004102 <_svfprintf_r+0x11e2>
1a003c76:	3302      	adds	r3, #2
1a003c78:	930a      	str	r3, [sp, #40]	; 0x28
1a003c7a:	f109 0910 	add.w	r9, r9, #16
1a003c7e:	e6e0      	b.n	1a003a42 <_svfprintf_r+0xb22>
1a003c80:	f1b8 0f00 	cmp.w	r8, #0
1a003c84:	f77f aedd 	ble.w	1a003a42 <_svfprintf_r+0xb22>
1a003c88:	f1b8 0f10 	cmp.w	r8, #16
1a003c8c:	4ba4      	ldr	r3, [pc, #656]	; (1a003f20 <_svfprintf_r+0x1000>)
1a003c8e:	f340 8639 	ble.w	1a004904 <_svfprintf_r+0x19e4>
1a003c92:	461a      	mov	r2, r3
1a003c94:	4655      	mov	r5, sl
1a003c96:	4623      	mov	r3, r4
1a003c98:	2610      	movs	r6, #16
1a003c9a:	f8dd 9018 	ldr.w	r9, [sp, #24]
1a003c9e:	f8dd a01c 	ldr.w	sl, [sp, #28]
1a003ca2:	4614      	mov	r4, r2
1a003ca4:	e007      	b.n	1a003cb6 <_svfprintf_r+0xd96>
1a003ca6:	3708      	adds	r7, #8
1a003ca8:	f1a8 0810 	sub.w	r8, r8, #16
1a003cac:	f1b8 0f10 	cmp.w	r8, #16
1a003cb0:	f340 8304 	ble.w	1a0042bc <_svfprintf_r+0x139c>
1a003cb4:	3501      	adds	r5, #1
1a003cb6:	3310      	adds	r3, #16
1a003cb8:	2d07      	cmp	r5, #7
1a003cba:	e9cd 5329 	strd	r5, r3, [sp, #164]	; 0xa4
1a003cbe:	e9c7 4600 	strd	r4, r6, [r7]
1a003cc2:	ddf0      	ble.n	1a003ca6 <_svfprintf_r+0xd86>
1a003cc4:	aa28      	add	r2, sp, #160	; 0xa0
1a003cc6:	4651      	mov	r1, sl
1a003cc8:	4648      	mov	r0, r9
1a003cca:	f002 fbf1 	bl	1a0064b0 <__ssprint_r>
1a003cce:	2800      	cmp	r0, #0
1a003cd0:	f47f aa05 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a003cd4:	e9dd 5329 	ldrd	r5, r3, [sp, #164]	; 0xa4
1a003cd8:	af2b      	add	r7, sp, #172	; 0xac
1a003cda:	e7e5      	b.n	1a003ca8 <_svfprintf_r+0xd88>
1a003cdc:	aa28      	add	r2, sp, #160	; 0xa0
1a003cde:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1a003ce2:	f002 fbe5 	bl	1a0064b0 <__ssprint_r>
1a003ce6:	2800      	cmp	r0, #0
1a003ce8:	f47f a9f9 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a003cec:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a003cee:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
1a003cf2:	f7ff bbef 	b.w	1a0034d4 <_svfprintf_r+0x5b4>
1a003cf6:	232d      	movs	r3, #45	; 0x2d
1a003cf8:	4264      	negs	r4, r4
1a003cfa:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
1a003cfe:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
1a003d02:	2301      	movs	r3, #1
1a003d04:	f7ff ba65 	b.w	1a0031d2 <_svfprintf_r+0x2b2>
1a003d08:	4634      	mov	r4, r6
1a003d0a:	f7ff b95c 	b.w	1a002fc6 <_svfprintf_r+0xa6>
1a003d0e:	aa28      	add	r2, sp, #160	; 0xa0
1a003d10:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1a003d14:	f002 fbcc 	bl	1a0064b0 <__ssprint_r>
1a003d18:	2800      	cmp	r0, #0
1a003d1a:	f47f a9e0 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a003d1e:	e9dd 5429 	ldrd	r5, r4, [sp, #164]	; 0xa4
1a003d22:	af2b      	add	r7, sp, #172	; 0xac
1a003d24:	e65b      	b.n	1a0039de <_svfprintf_r+0xabe>
1a003d26:	aa28      	add	r2, sp, #160	; 0xa0
1a003d28:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1a003d2c:	f002 fbc0 	bl	1a0064b0 <__ssprint_r>
1a003d30:	2800      	cmp	r0, #0
1a003d32:	f47f a9d4 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a003d36:	e9dd 3429 	ldrd	r3, r4, [sp, #164]	; 0xa4
1a003d3a:	af2b      	add	r7, sp, #172	; 0xac
1a003d3c:	930b      	str	r3, [sp, #44]	; 0x2c
1a003d3e:	e65b      	b.n	1a0039f8 <_svfprintf_r+0xad8>
1a003d40:	9b02      	ldr	r3, [sp, #8]
1a003d42:	07db      	lsls	r3, r3, #31
1a003d44:	f53f ad72 	bmi.w	1a00382c <_svfprintf_r+0x90c>
1a003d48:	f7ff bbd6 	b.w	1a0034f8 <_svfprintf_r+0x5d8>
1a003d4c:	ae54      	add	r6, sp, #336	; 0x150
1a003d4e:	e4d1      	b.n	1a0036f4 <_svfprintf_r+0x7d4>
1a003d50:	9b02      	ldr	r3, [sp, #8]
1a003d52:	059f      	lsls	r7, r3, #22
1a003d54:	f100 831c 	bmi.w	1a004390 <_svfprintf_r+0x1470>
1a003d58:	2500      	movs	r5, #0
1a003d5a:	f7ff b9df 	b.w	1a00311c <_svfprintf_r+0x1fc>
1a003d5e:	9904      	ldr	r1, [sp, #16]
1a003d60:	6812      	ldr	r2, [r2, #0]
1a003d62:	9309      	str	r3, [sp, #36]	; 0x24
1a003d64:	17cd      	asrs	r5, r1, #31
1a003d66:	4608      	mov	r0, r1
1a003d68:	4629      	mov	r1, r5
1a003d6a:	e9c2 0100 	strd	r0, r1, [r2]
1a003d6e:	465e      	mov	r6, fp
1a003d70:	f7ff ba76 	b.w	1a003260 <_svfprintf_r+0x340>
1a003d74:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a003d76:	1d1a      	adds	r2, r3, #4
1a003d78:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a003d7a:	9209      	str	r2, [sp, #36]	; 0x24
1a003d7c:	681c      	ldr	r4, [r3, #0]
1a003d7e:	2500      	movs	r5, #0
1a003d80:	2301      	movs	r3, #1
1a003d82:	f7ff ba23 	b.w	1a0031cc <_svfprintf_r+0x2ac>
1a003d86:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
1a003d8a:	4602      	mov	r2, r0
1a003d8c:	460b      	mov	r3, r1
1a003d8e:	f7fe f94b 	bl	1a002028 <__aeabi_dcmpun>
1a003d92:	2800      	cmp	r0, #0
1a003d94:	f040 8528 	bne.w	1a0047e8 <_svfprintf_r+0x18c8>
1a003d98:	f1b8 0f61 	cmp.w	r8, #97	; 0x61
1a003d9c:	f000 850d 	beq.w	1a0047ba <_svfprintf_r+0x189a>
1a003da0:	f1b8 0f41 	cmp.w	r8, #65	; 0x41
1a003da4:	f000 83e9 	beq.w	1a00457a <_svfprintf_r+0x165a>
1a003da8:	f028 0320 	bic.w	r3, r8, #32
1a003dac:	f1ba 3fff 	cmp.w	sl, #4294967295
1a003db0:	9303      	str	r3, [sp, #12]
1a003db2:	f000 8307 	beq.w	1a0043c4 <_svfprintf_r+0x14a4>
1a003db6:	2b47      	cmp	r3, #71	; 0x47
1a003db8:	d104      	bne.n	1a003dc4 <_svfprintf_r+0xea4>
1a003dba:	f1ba 0f00 	cmp.w	sl, #0
1a003dbe:	bf08      	it	eq
1a003dc0:	f04f 0a01 	moveq.w	sl, #1
1a003dc4:	e9dd 4510 	ldrd	r4, r5, [sp, #64]	; 0x40
1a003dc8:	9902      	ldr	r1, [sp, #8]
1a003dca:	2d00      	cmp	r5, #0
1a003dcc:	f441 7280 	orr.w	r2, r1, #256	; 0x100
1a003dd0:	f2c0 8476 	blt.w	1a0046c0 <_svfprintf_r+0x17a0>
1a003dd4:	e9cd 451c 	strd	r4, r5, [sp, #112]	; 0x70
1a003dd8:	2300      	movs	r3, #0
1a003dda:	931e      	str	r3, [sp, #120]	; 0x78
1a003ddc:	910a      	str	r1, [sp, #40]	; 0x28
1a003dde:	9308      	str	r3, [sp, #32]
1a003de0:	9202      	str	r2, [sp, #8]
1a003de2:	9b03      	ldr	r3, [sp, #12]
1a003de4:	2b46      	cmp	r3, #70	; 0x46
1a003de6:	f000 837c 	beq.w	1a0044e2 <_svfprintf_r+0x15c2>
1a003dea:	2b45      	cmp	r3, #69	; 0x45
1a003dec:	f000 84d4 	beq.w	1a004798 <_svfprintf_r+0x1878>
1a003df0:	aa26      	add	r2, sp, #152	; 0x98
1a003df2:	ab23      	add	r3, sp, #140	; 0x8c
1a003df4:	e9cd 3200 	strd	r3, r2, [sp]
1a003df8:	2102      	movs	r1, #2
1a003dfa:	ab22      	add	r3, sp, #136	; 0x88
1a003dfc:	4652      	mov	r2, sl
1a003dfe:	ed9d 0b1c 	vldr	d0, [sp, #112]	; 0x70
1a003e02:	9806      	ldr	r0, [sp, #24]
1a003e04:	f000 fe3c 	bl	1a004a80 <_dtoa_r>
1a003e08:	9b03      	ldr	r3, [sp, #12]
1a003e0a:	2b47      	cmp	r3, #71	; 0x47
1a003e0c:	4606      	mov	r6, r0
1a003e0e:	f040 858e 	bne.w	1a00492e <_svfprintf_r+0x1a0e>
1a003e12:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a003e14:	07db      	lsls	r3, r3, #31
1a003e16:	f100 847b 	bmi.w	1a004710 <_svfprintf_r+0x17f0>
1a003e1a:	9f26      	ldr	r7, [sp, #152]	; 0x98
1a003e1c:	1bbb      	subs	r3, r7, r6
1a003e1e:	9312      	str	r3, [sp, #72]	; 0x48
1a003e20:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a003e22:	930e      	str	r3, [sp, #56]	; 0x38
1a003e24:	9b03      	ldr	r3, [sp, #12]
1a003e26:	2b47      	cmp	r3, #71	; 0x47
1a003e28:	f000 82ee 	beq.w	1a004408 <_svfprintf_r+0x14e8>
1a003e2c:	9b03      	ldr	r3, [sp, #12]
1a003e2e:	2b46      	cmp	r3, #70	; 0x46
1a003e30:	f000 8380 	beq.w	1a004534 <_svfprintf_r+0x1614>
1a003e34:	9903      	ldr	r1, [sp, #12]
1a003e36:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a003e38:	2941      	cmp	r1, #65	; 0x41
1a003e3a:	f103 32ff 	add.w	r2, r3, #4294967295
1a003e3e:	fa5f f388 	uxtb.w	r3, r8
1a003e42:	bf03      	ittte	eq
1a003e44:	330f      	addeq	r3, #15
1a003e46:	b2db      	uxtbeq	r3, r3
1a003e48:	2101      	moveq	r1, #1
1a003e4a:	2100      	movne	r1, #0
1a003e4c:	2a00      	cmp	r2, #0
1a003e4e:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
1a003e52:	bfb8      	it	lt
1a003e54:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
1a003e56:	9222      	str	r2, [sp, #136]	; 0x88
1a003e58:	bfb6      	itet	lt
1a003e5a:	f1c3 0201 	rsblt	r2, r3, #1
1a003e5e:	232b      	movge	r3, #43	; 0x2b
1a003e60:	232d      	movlt	r3, #45	; 0x2d
1a003e62:	2a09      	cmp	r2, #9
1a003e64:	f88d 3091 	strb.w	r3, [sp, #145]	; 0x91
1a003e68:	f340 84ae 	ble.w	1a0047c8 <_svfprintf_r+0x18a8>
1a003e6c:	f10d 049f 	add.w	r4, sp, #159	; 0x9f
1a003e70:	4620      	mov	r0, r4
1a003e72:	4d2c      	ldr	r5, [pc, #176]	; (1a003f24 <_svfprintf_r+0x1004>)
1a003e74:	e001      	b.n	1a003e7a <_svfprintf_r+0xf5a>
1a003e76:	4608      	mov	r0, r1
1a003e78:	461a      	mov	r2, r3
1a003e7a:	fb85 3102 	smull	r3, r1, r5, r2
1a003e7e:	17d3      	asrs	r3, r2, #31
1a003e80:	ebc3 03a1 	rsb	r3, r3, r1, asr #2
1a003e84:	eb03 0183 	add.w	r1, r3, r3, lsl #2
1a003e88:	eba2 0141 	sub.w	r1, r2, r1, lsl #1
1a003e8c:	3130      	adds	r1, #48	; 0x30
1a003e8e:	2a63      	cmp	r2, #99	; 0x63
1a003e90:	f800 1c01 	strb.w	r1, [r0, #-1]
1a003e94:	f100 31ff 	add.w	r1, r0, #4294967295
1a003e98:	dced      	bgt.n	1a003e76 <_svfprintf_r+0xf56>
1a003e9a:	3330      	adds	r3, #48	; 0x30
1a003e9c:	1e82      	subs	r2, r0, #2
1a003e9e:	b2db      	uxtb	r3, r3
1a003ea0:	4294      	cmp	r4, r2
1a003ea2:	f801 3c01 	strb.w	r3, [r1, #-1]
1a003ea6:	f240 8545 	bls.w	1a004934 <_svfprintf_r+0x1a14>
1a003eaa:	f10d 0292 	add.w	r2, sp, #146	; 0x92
1a003eae:	e001      	b.n	1a003eb4 <_svfprintf_r+0xf94>
1a003eb0:	f811 3b01 	ldrb.w	r3, [r1], #1
1a003eb4:	f802 3b01 	strb.w	r3, [r2], #1
1a003eb8:	428c      	cmp	r4, r1
1a003eba:	d1f9      	bne.n	1a003eb0 <_svfprintf_r+0xf90>
1a003ebc:	f10d 03a1 	add.w	r3, sp, #161	; 0xa1
1a003ec0:	f10d 0292 	add.w	r2, sp, #146	; 0x92
1a003ec4:	1a1b      	subs	r3, r3, r0
1a003ec6:	4413      	add	r3, r2
1a003ec8:	aa24      	add	r2, sp, #144	; 0x90
1a003eca:	1a9b      	subs	r3, r3, r2
1a003ecc:	9316      	str	r3, [sp, #88]	; 0x58
1a003ece:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a003ed0:	9a16      	ldr	r2, [sp, #88]	; 0x58
1a003ed2:	2b01      	cmp	r3, #1
1a003ed4:	eb03 0702 	add.w	r7, r3, r2
1a003ed8:	f340 84ee 	ble.w	1a0048b8 <_svfprintf_r+0x1998>
1a003edc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
1a003ede:	441f      	add	r7, r3
1a003ee0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a003ee2:	2200      	movs	r2, #0
1a003ee4:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
1a003ee8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
1a003eec:	e9cd 220e 	strd	r2, r2, [sp, #56]	; 0x38
1a003ef0:	9302      	str	r3, [sp, #8]
1a003ef2:	ea27 73e7 	bic.w	r3, r7, r7, asr #31
1a003ef6:	920c      	str	r2, [sp, #48]	; 0x30
1a003ef8:	9303      	str	r3, [sp, #12]
1a003efa:	9b1e      	ldr	r3, [sp, #120]	; 0x78
1a003efc:	2b00      	cmp	r3, #0
1a003efe:	f040 82aa 	bne.w	1a004456 <_svfprintf_r+0x1536>
1a003f02:	469a      	mov	sl, r3
1a003f04:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
1a003f08:	f7ff b9ea 	b.w	1a0032e0 <_svfprintf_r+0x3c0>
1a003f0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a003f0e:	1d1a      	adds	r2, r3, #4
1a003f10:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a003f12:	9209      	str	r2, [sp, #36]	; 0x24
1a003f14:	681c      	ldr	r4, [r3, #0]
1a003f16:	17e5      	asrs	r5, r4, #31
1a003f18:	4622      	mov	r2, r4
1a003f1a:	462b      	mov	r3, r5
1a003f1c:	f7ff ba0f 	b.w	1a00333e <_svfprintf_r+0x41e>
1a003f20:	1a006a60 	.word	0x1a006a60
1a003f24:	66666667 	.word	0x66666667
1a003f28:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a003f2a:	1d1a      	adds	r2, r3, #4
1a003f2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a003f2e:	9209      	str	r2, [sp, #36]	; 0x24
1a003f30:	681c      	ldr	r4, [r3, #0]
1a003f32:	2500      	movs	r5, #0
1a003f34:	f7ff b9e8 	b.w	1a003308 <_svfprintf_r+0x3e8>
1a003f38:	4252      	negs	r2, r2
1a003f3a:	9205      	str	r2, [sp, #20]
1a003f3c:	9309      	str	r3, [sp, #36]	; 0x24
1a003f3e:	f7ff b925 	b.w	1a00318c <_svfprintf_r+0x26c>
1a003f42:	f443 7300 	orr.w	r3, r3, #512	; 0x200
1a003f46:	f89b 8001 	ldrb.w	r8, [fp, #1]
1a003f4a:	9302      	str	r3, [sp, #8]
1a003f4c:	f10b 0b01 	add.w	fp, fp, #1
1a003f50:	f7ff b846 	b.w	1a002fe0 <_svfprintf_r+0xc0>
1a003f54:	f043 0320 	orr.w	r3, r3, #32
1a003f58:	f89b 8001 	ldrb.w	r8, [fp, #1]
1a003f5c:	9302      	str	r3, [sp, #8]
1a003f5e:	f10b 0b01 	add.w	fp, fp, #1
1a003f62:	f7ff b83d 	b.w	1a002fe0 <_svfprintf_r+0xc0>
1a003f66:	aa28      	add	r2, sp, #160	; 0xa0
1a003f68:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1a003f6c:	f002 faa0 	bl	1a0064b0 <__ssprint_r>
1a003f70:	2800      	cmp	r0, #0
1a003f72:	f47f a8b4 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a003f76:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a003f78:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
1a003f7c:	e466      	b.n	1a00384c <_svfprintf_r+0x92c>
1a003f7e:	2140      	movs	r1, #64	; 0x40
1a003f80:	9806      	ldr	r0, [sp, #24]
1a003f82:	f7fe fb7f 	bl	1a002684 <_malloc_r>
1a003f86:	9b07      	ldr	r3, [sp, #28]
1a003f88:	6018      	str	r0, [r3, #0]
1a003f8a:	6118      	str	r0, [r3, #16]
1a003f8c:	2800      	cmp	r0, #0
1a003f8e:	f000 84c6 	beq.w	1a00491e <_svfprintf_r+0x19fe>
1a003f92:	9a07      	ldr	r2, [sp, #28]
1a003f94:	2340      	movs	r3, #64	; 0x40
1a003f96:	6153      	str	r3, [r2, #20]
1a003f98:	f7fe bfd9 	b.w	1a002f4e <_svfprintf_r+0x2e>
1a003f9c:	4657      	mov	r7, sl
1a003f9e:	2f06      	cmp	r7, #6
1a003fa0:	bf28      	it	cs
1a003fa2:	2706      	movcs	r7, #6
1a003fa4:	46b2      	mov	sl, r6
1a003fa6:	960c      	str	r6, [sp, #48]	; 0x30
1a003fa8:	e9cd 660e 	strd	r6, r6, [sp, #56]	; 0x38
1a003fac:	9608      	str	r6, [sp, #32]
1a003fae:	4632      	mov	r2, r6
1a003fb0:	9703      	str	r7, [sp, #12]
1a003fb2:	9409      	str	r4, [sp, #36]	; 0x24
1a003fb4:	4ebe      	ldr	r6, [pc, #760]	; (1a0042b0 <_svfprintf_r+0x1390>)
1a003fb6:	f7ff b993 	b.w	1a0032e0 <_svfprintf_r+0x3c0>
1a003fba:	2d10      	cmp	r5, #16
1a003fbc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a003fbe:	4bbd      	ldr	r3, [pc, #756]	; (1a0042b4 <_svfprintf_r+0x1394>)
1a003fc0:	f340 81b8 	ble.w	1a004334 <_svfprintf_r+0x1414>
1a003fc4:	4619      	mov	r1, r3
1a003fc6:	2710      	movs	r7, #16
1a003fc8:	4623      	mov	r3, r4
1a003fca:	e9dd 8a06 	ldrd	r8, sl, [sp, #24]
1a003fce:	460c      	mov	r4, r1
1a003fd0:	e005      	b.n	1a003fde <_svfprintf_r+0x10be>
1a003fd2:	f109 0908 	add.w	r9, r9, #8
1a003fd6:	3d10      	subs	r5, #16
1a003fd8:	2d10      	cmp	r5, #16
1a003fda:	f340 81a8 	ble.w	1a00432e <_svfprintf_r+0x140e>
1a003fde:	3201      	adds	r2, #1
1a003fe0:	3310      	adds	r3, #16
1a003fe2:	2a07      	cmp	r2, #7
1a003fe4:	e9cd 2329 	strd	r2, r3, [sp, #164]	; 0xa4
1a003fe8:	e9c9 4700 	strd	r4, r7, [r9]
1a003fec:	ddf1      	ble.n	1a003fd2 <_svfprintf_r+0x10b2>
1a003fee:	aa28      	add	r2, sp, #160	; 0xa0
1a003ff0:	4651      	mov	r1, sl
1a003ff2:	4640      	mov	r0, r8
1a003ff4:	f002 fa5c 	bl	1a0064b0 <__ssprint_r>
1a003ff8:	2800      	cmp	r0, #0
1a003ffa:	f47f a870 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a003ffe:	e9dd 2329 	ldrd	r2, r3, [sp, #164]	; 0xa4
1a004002:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
1a004006:	e7e6      	b.n	1a003fd6 <_svfprintf_r+0x10b6>
1a004008:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a00400a:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
1a00400e:	18f3      	adds	r3, r6, r3
1a004010:	930a      	str	r3, [sp, #40]	; 0x28
1a004012:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a004014:	960e      	str	r6, [sp, #56]	; 0x38
1a004016:	464a      	mov	r2, r9
1a004018:	4656      	mov	r6, sl
1a00401a:	4fa6      	ldr	r7, [pc, #664]	; (1a0042b4 <_svfprintf_r+0x1394>)
1a00401c:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
1a004020:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
1a004024:	4621      	mov	r1, r4
1a004026:	e9dd b906 	ldrd	fp, r9, [sp, #24]
1a00402a:	2b00      	cmp	r3, #0
1a00402c:	d033      	beq.n	1a004096 <_svfprintf_r+0x1176>
1a00402e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1a004030:	2b00      	cmp	r3, #0
1a004032:	d134      	bne.n	1a00409e <_svfprintf_r+0x117e>
1a004034:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a004036:	3b01      	subs	r3, #1
1a004038:	f108 38ff 	add.w	r8, r8, #4294967295
1a00403c:	930f      	str	r3, [sp, #60]	; 0x3c
1a00403e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a004040:	9817      	ldr	r0, [sp, #92]	; 0x5c
1a004042:	6010      	str	r0, [r2, #0]
1a004044:	3301      	adds	r3, #1
1a004046:	4451      	add	r1, sl
1a004048:	2b07      	cmp	r3, #7
1a00404a:	912a      	str	r1, [sp, #168]	; 0xa8
1a00404c:	f8c2 a004 	str.w	sl, [r2, #4]
1a004050:	9329      	str	r3, [sp, #164]	; 0xa4
1a004052:	dc66      	bgt.n	1a004122 <_svfprintf_r+0x1202>
1a004054:	3208      	adds	r2, #8
1a004056:	980a      	ldr	r0, [sp, #40]	; 0x28
1a004058:	f898 3000 	ldrb.w	r3, [r8]
1a00405c:	1b85      	subs	r5, r0, r6
1a00405e:	429d      	cmp	r5, r3
1a004060:	bfa8      	it	ge
1a004062:	461d      	movge	r5, r3
1a004064:	2d00      	cmp	r5, #0
1a004066:	dd0c      	ble.n	1a004082 <_svfprintf_r+0x1162>
1a004068:	9b29      	ldr	r3, [sp, #164]	; 0xa4
1a00406a:	6016      	str	r6, [r2, #0]
1a00406c:	3301      	adds	r3, #1
1a00406e:	4429      	add	r1, r5
1a004070:	2b07      	cmp	r3, #7
1a004072:	912a      	str	r1, [sp, #168]	; 0xa8
1a004074:	6055      	str	r5, [r2, #4]
1a004076:	9329      	str	r3, [sp, #164]	; 0xa4
1a004078:	f300 80b8 	bgt.w	1a0041ec <_svfprintf_r+0x12cc>
1a00407c:	f898 3000 	ldrb.w	r3, [r8]
1a004080:	3208      	adds	r2, #8
1a004082:	2d00      	cmp	r5, #0
1a004084:	bfac      	ite	ge
1a004086:	1b5d      	subge	r5, r3, r5
1a004088:	461d      	movlt	r5, r3
1a00408a:	2d00      	cmp	r5, #0
1a00408c:	dc0b      	bgt.n	1a0040a6 <_svfprintf_r+0x1186>
1a00408e:	441e      	add	r6, r3
1a004090:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a004092:	2b00      	cmp	r3, #0
1a004094:	d1cb      	bne.n	1a00402e <_svfprintf_r+0x110e>
1a004096:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1a004098:	2b00      	cmp	r3, #0
1a00409a:	f000 81a6 	beq.w	1a0043ea <_svfprintf_r+0x14ca>
1a00409e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1a0040a0:	3b01      	subs	r3, #1
1a0040a2:	930c      	str	r3, [sp, #48]	; 0x30
1a0040a4:	e7cb      	b.n	1a00403e <_svfprintf_r+0x111e>
1a0040a6:	2d10      	cmp	r5, #16
1a0040a8:	9829      	ldr	r0, [sp, #164]	; 0xa4
1a0040aa:	dd1c      	ble.n	1a0040e6 <_svfprintf_r+0x11c6>
1a0040ac:	2410      	movs	r4, #16
1a0040ae:	e004      	b.n	1a0040ba <_svfprintf_r+0x119a>
1a0040b0:	3d10      	subs	r5, #16
1a0040b2:	2d10      	cmp	r5, #16
1a0040b4:	f102 0208 	add.w	r2, r2, #8
1a0040b8:	dd15      	ble.n	1a0040e6 <_svfprintf_r+0x11c6>
1a0040ba:	3001      	adds	r0, #1
1a0040bc:	3110      	adds	r1, #16
1a0040be:	2807      	cmp	r0, #7
1a0040c0:	e9cd 0129 	strd	r0, r1, [sp, #164]	; 0xa4
1a0040c4:	e9c2 7400 	strd	r7, r4, [r2]
1a0040c8:	ddf2      	ble.n	1a0040b0 <_svfprintf_r+0x1190>
1a0040ca:	aa28      	add	r2, sp, #160	; 0xa0
1a0040cc:	4649      	mov	r1, r9
1a0040ce:	4658      	mov	r0, fp
1a0040d0:	f002 f9ee 	bl	1a0064b0 <__ssprint_r>
1a0040d4:	2800      	cmp	r0, #0
1a0040d6:	f47f a802 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a0040da:	3d10      	subs	r5, #16
1a0040dc:	2d10      	cmp	r5, #16
1a0040de:	e9dd 0129 	ldrd	r0, r1, [sp, #164]	; 0xa4
1a0040e2:	aa2b      	add	r2, sp, #172	; 0xac
1a0040e4:	dce9      	bgt.n	1a0040ba <_svfprintf_r+0x119a>
1a0040e6:	3001      	adds	r0, #1
1a0040e8:	4429      	add	r1, r5
1a0040ea:	2807      	cmp	r0, #7
1a0040ec:	e9cd 0129 	strd	r0, r1, [sp, #164]	; 0xa4
1a0040f0:	e9c2 7500 	strd	r7, r5, [r2]
1a0040f4:	f300 81b6 	bgt.w	1a004464 <_svfprintf_r+0x1544>
1a0040f8:	f898 3000 	ldrb.w	r3, [r8]
1a0040fc:	3208      	adds	r2, #8
1a0040fe:	441e      	add	r6, r3
1a004100:	e7c6      	b.n	1a004090 <_svfprintf_r+0x1170>
1a004102:	aa28      	add	r2, sp, #160	; 0xa0
1a004104:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1a004108:	f002 f9d2 	bl	1a0064b0 <__ssprint_r>
1a00410c:	2800      	cmp	r0, #0
1a00410e:	f47e afe6 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a004112:	e9dd 3429 	ldrd	r3, r4, [sp, #164]	; 0xa4
1a004116:	3301      	adds	r3, #1
1a004118:	930a      	str	r3, [sp, #40]	; 0x28
1a00411a:	f10d 09b4 	add.w	r9, sp, #180	; 0xb4
1a00411e:	af2b      	add	r7, sp, #172	; 0xac
1a004120:	e48f      	b.n	1a003a42 <_svfprintf_r+0xb22>
1a004122:	aa28      	add	r2, sp, #160	; 0xa0
1a004124:	4649      	mov	r1, r9
1a004126:	4658      	mov	r0, fp
1a004128:	f002 f9c2 	bl	1a0064b0 <__ssprint_r>
1a00412c:	2800      	cmp	r0, #0
1a00412e:	f47e afd6 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a004132:	992a      	ldr	r1, [sp, #168]	; 0xa8
1a004134:	aa2b      	add	r2, sp, #172	; 0xac
1a004136:	e78e      	b.n	1a004056 <_svfprintf_r+0x1136>
1a004138:	aa28      	add	r2, sp, #160	; 0xa0
1a00413a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1a00413e:	f002 f9b7 	bl	1a0064b0 <__ssprint_r>
1a004142:	2800      	cmp	r0, #0
1a004144:	f47e afcb 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a004148:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
1a00414c:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a00414e:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
1a004152:	f7ff b996 	b.w	1a003482 <_svfprintf_r+0x562>
1a004156:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a004158:	4957      	ldr	r1, [pc, #348]	; (1a0042b8 <_svfprintf_r+0x1398>)
1a00415a:	f8c9 1000 	str.w	r1, [r9]
1a00415e:	3201      	adds	r2, #1
1a004160:	3401      	adds	r4, #1
1a004162:	2101      	movs	r1, #1
1a004164:	2a07      	cmp	r2, #7
1a004166:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a00416a:	f8c9 1004 	str.w	r1, [r9, #4]
1a00416e:	f300 80f1 	bgt.w	1a004354 <_svfprintf_r+0x1434>
1a004172:	f109 0908 	add.w	r9, r9, #8
1a004176:	2b00      	cmp	r3, #0
1a004178:	d15a      	bne.n	1a004230 <_svfprintf_r+0x1310>
1a00417a:	9b02      	ldr	r3, [sp, #8]
1a00417c:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a00417e:	f003 0301 	and.w	r3, r3, #1
1a004182:	4313      	orrs	r3, r2
1a004184:	f43f a9b8 	beq.w	1a0034f8 <_svfprintf_r+0x5d8>
1a004188:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a00418a:	9b15      	ldr	r3, [sp, #84]	; 0x54
1a00418c:	f8c9 3000 	str.w	r3, [r9]
1a004190:	9b13      	ldr	r3, [sp, #76]	; 0x4c
1a004192:	f8c9 3004 	str.w	r3, [r9, #4]
1a004196:	3201      	adds	r2, #1
1a004198:	441c      	add	r4, r3
1a00419a:	2a07      	cmp	r2, #7
1a00419c:	942a      	str	r4, [sp, #168]	; 0xa8
1a00419e:	9229      	str	r2, [sp, #164]	; 0xa4
1a0041a0:	f300 8102 	bgt.w	1a0043a8 <_svfprintf_r+0x1488>
1a0041a4:	f109 0908 	add.w	r9, r9, #8
1a0041a8:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a0041aa:	3201      	adds	r2, #1
1a0041ac:	441c      	add	r4, r3
1a0041ae:	2a07      	cmp	r2, #7
1a0041b0:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a0041b4:	e9c9 6300 	strd	r6, r3, [r9]
1a0041b8:	f77f a99c 	ble.w	1a0034f4 <_svfprintf_r+0x5d4>
1a0041bc:	e44c      	b.n	1a003a58 <_svfprintf_r+0xb38>
1a0041be:	aa28      	add	r2, sp, #160	; 0xa0
1a0041c0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1a0041c4:	f002 f974 	bl	1a0064b0 <__ssprint_r>
1a0041c8:	2800      	cmp	r0, #0
1a0041ca:	f47e af88 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a0041ce:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
1a0041d2:	f7ff bb25 	b.w	1a003820 <_svfprintf_r+0x900>
1a0041d6:	4653      	mov	r3, sl
1a0041d8:	3201      	adds	r2, #1
1a0041da:	442c      	add	r4, r5
1a0041dc:	2a07      	cmp	r2, #7
1a0041de:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a0041e2:	e9c9 3500 	strd	r3, r5, [r9]
1a0041e6:	f77f a985 	ble.w	1a0034f4 <_svfprintf_r+0x5d4>
1a0041ea:	e435      	b.n	1a003a58 <_svfprintf_r+0xb38>
1a0041ec:	aa28      	add	r2, sp, #160	; 0xa0
1a0041ee:	4649      	mov	r1, r9
1a0041f0:	4658      	mov	r0, fp
1a0041f2:	f002 f95d 	bl	1a0064b0 <__ssprint_r>
1a0041f6:	2800      	cmp	r0, #0
1a0041f8:	f47e af71 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a0041fc:	f898 3000 	ldrb.w	r3, [r8]
1a004200:	992a      	ldr	r1, [sp, #168]	; 0xa8
1a004202:	aa2b      	add	r2, sp, #172	; 0xac
1a004204:	e73d      	b.n	1a004082 <_svfprintf_r+0x1162>
1a004206:	aa28      	add	r2, sp, #160	; 0xa0
1a004208:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1a00420c:	f002 f950 	bl	1a0064b0 <__ssprint_r>
1a004210:	2800      	cmp	r0, #0
1a004212:	f47e af64 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a004216:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a004218:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
1a00421c:	f7ff b955 	b.w	1a0034ca <_svfprintf_r+0x5aa>
1a004220:	9a09      	ldr	r2, [sp, #36]	; 0x24
1a004222:	6812      	ldr	r2, [r2, #0]
1a004224:	9309      	str	r3, [sp, #36]	; 0x24
1a004226:	9b04      	ldr	r3, [sp, #16]
1a004228:	6013      	str	r3, [r2, #0]
1a00422a:	465e      	mov	r6, fp
1a00422c:	f7ff b818 	b.w	1a003260 <_svfprintf_r+0x340>
1a004230:	9a29      	ldr	r2, [sp, #164]	; 0xa4
1a004232:	9915      	ldr	r1, [sp, #84]	; 0x54
1a004234:	f8c9 1000 	str.w	r1, [r9]
1a004238:	9913      	ldr	r1, [sp, #76]	; 0x4c
1a00423a:	f8c9 1004 	str.w	r1, [r9, #4]
1a00423e:	3201      	adds	r2, #1
1a004240:	440c      	add	r4, r1
1a004242:	2a07      	cmp	r2, #7
1a004244:	942a      	str	r4, [sp, #168]	; 0xa8
1a004246:	9229      	str	r2, [sp, #164]	; 0xa4
1a004248:	f300 80ae 	bgt.w	1a0043a8 <_svfprintf_r+0x1488>
1a00424c:	f109 0908 	add.w	r9, r9, #8
1a004250:	2b00      	cmp	r3, #0
1a004252:	daa9      	bge.n	1a0041a8 <_svfprintf_r+0x1288>
1a004254:	425d      	negs	r5, r3
1a004256:	3310      	adds	r3, #16
1a004258:	4b16      	ldr	r3, [pc, #88]	; (1a0042b4 <_svfprintf_r+0x1394>)
1a00425a:	f280 8287 	bge.w	1a00476c <_svfprintf_r+0x184c>
1a00425e:	4619      	mov	r1, r3
1a004260:	2710      	movs	r7, #16
1a004262:	4623      	mov	r3, r4
1a004264:	e9dd 8a06 	ldrd	r8, sl, [sp, #24]
1a004268:	460c      	mov	r4, r1
1a00426a:	e005      	b.n	1a004278 <_svfprintf_r+0x1358>
1a00426c:	f109 0908 	add.w	r9, r9, #8
1a004270:	3d10      	subs	r5, #16
1a004272:	2d10      	cmp	r5, #16
1a004274:	f340 8277 	ble.w	1a004766 <_svfprintf_r+0x1846>
1a004278:	3201      	adds	r2, #1
1a00427a:	3310      	adds	r3, #16
1a00427c:	2a07      	cmp	r2, #7
1a00427e:	e9cd 2329 	strd	r2, r3, [sp, #164]	; 0xa4
1a004282:	e9c9 4700 	strd	r4, r7, [r9]
1a004286:	ddf1      	ble.n	1a00426c <_svfprintf_r+0x134c>
1a004288:	aa28      	add	r2, sp, #160	; 0xa0
1a00428a:	4651      	mov	r1, sl
1a00428c:	4640      	mov	r0, r8
1a00428e:	f002 f90f 	bl	1a0064b0 <__ssprint_r>
1a004292:	2800      	cmp	r0, #0
1a004294:	f47e af23 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a004298:	e9dd 2329 	ldrd	r2, r3, [sp, #164]	; 0xa4
1a00429c:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
1a0042a0:	e7e6      	b.n	1a004270 <_svfprintf_r+0x1350>
1a0042a2:	4630      	mov	r0, r6
1a0042a4:	f7fe fdcc 	bl	1a002e40 <strlen>
1a0042a8:	46aa      	mov	sl, r5
1a0042aa:	4607      	mov	r7, r0
1a0042ac:	f7ff b80c 	b.w	1a0032c8 <_svfprintf_r+0x3a8>
1a0042b0:	1a006a44 	.word	0x1a006a44
1a0042b4:	1a006a60 	.word	0x1a006a60
1a0042b8:	1a006a4c 	.word	0x1a006a4c
1a0042bc:	4622      	mov	r2, r4
1a0042be:	461c      	mov	r4, r3
1a0042c0:	4613      	mov	r3, r2
1a0042c2:	462a      	mov	r2, r5
1a0042c4:	3201      	adds	r2, #1
1a0042c6:	920a      	str	r2, [sp, #40]	; 0x28
1a0042c8:	f107 0208 	add.w	r2, r7, #8
1a0042cc:	e9c7 3800 	strd	r3, r8, [r7]
1a0042d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a0042d2:	9329      	str	r3, [sp, #164]	; 0xa4
1a0042d4:	4444      	add	r4, r8
1a0042d6:	2b07      	cmp	r3, #7
1a0042d8:	942a      	str	r4, [sp, #168]	; 0xa8
1a0042da:	f73f af12 	bgt.w	1a004102 <_svfprintf_r+0x11e2>
1a0042de:	3301      	adds	r3, #1
1a0042e0:	930a      	str	r3, [sp, #40]	; 0x28
1a0042e2:	f102 0908 	add.w	r9, r2, #8
1a0042e6:	4617      	mov	r7, r2
1a0042e8:	f7ff bbab 	b.w	1a003a42 <_svfprintf_r+0xb22>
1a0042ec:	9f02      	ldr	r7, [sp, #8]
1a0042ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a0042f0:	f417 7f00 	tst.w	r7, #512	; 0x200
1a0042f4:	d044      	beq.n	1a004380 <_svfprintf_r+0x1460>
1a0042f6:	f993 4000 	ldrsb.w	r4, [r3]
1a0042fa:	9209      	str	r2, [sp, #36]	; 0x24
1a0042fc:	17e5      	asrs	r5, r4, #31
1a0042fe:	4622      	mov	r2, r4
1a004300:	462b      	mov	r3, r5
1a004302:	f7ff b81c 	b.w	1a00333e <_svfprintf_r+0x41e>
1a004306:	9f02      	ldr	r7, [sp, #8]
1a004308:	05b9      	lsls	r1, r7, #22
1a00430a:	bf47      	ittee	mi
1a00430c:	9209      	strmi	r2, [sp, #36]	; 0x24
1a00430e:	b2e4      	uxtbmi	r4, r4
1a004310:	9f02      	ldrpl	r7, [sp, #8]
1a004312:	9209      	strpl	r2, [sp, #36]	; 0x24
1a004314:	2500      	movs	r5, #0
1a004316:	f7fe bff7 	b.w	1a003308 <_svfprintf_r+0x3e8>
1a00431a:	9f02      	ldr	r7, [sp, #8]
1a00431c:	9209      	str	r2, [sp, #36]	; 0x24
1a00431e:	05b8      	lsls	r0, r7, #22
1a004320:	bf4c      	ite	mi
1a004322:	b2e4      	uxtbmi	r4, r4
1a004324:	9f02      	ldrpl	r7, [sp, #8]
1a004326:	2500      	movs	r5, #0
1a004328:	2301      	movs	r3, #1
1a00432a:	f7fe bf4f 	b.w	1a0031cc <_svfprintf_r+0x2ac>
1a00432e:	4621      	mov	r1, r4
1a004330:	461c      	mov	r4, r3
1a004332:	460b      	mov	r3, r1
1a004334:	3201      	adds	r2, #1
1a004336:	442c      	add	r4, r5
1a004338:	2a07      	cmp	r2, #7
1a00433a:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a00433e:	e9c9 3500 	strd	r3, r5, [r9]
1a004342:	dc42      	bgt.n	1a0043ca <_svfprintf_r+0x14aa>
1a004344:	f109 0908 	add.w	r9, r9, #8
1a004348:	e424      	b.n	1a003b94 <_svfprintf_r+0xc74>
1a00434a:	222d      	movs	r2, #45	; 0x2d
1a00434c:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
1a004350:	f7ff b95d 	b.w	1a00360e <_svfprintf_r+0x6ee>
1a004354:	aa28      	add	r2, sp, #160	; 0xa0
1a004356:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1a00435a:	f002 f8a9 	bl	1a0064b0 <__ssprint_r>
1a00435e:	2800      	cmp	r0, #0
1a004360:	f47e aebd 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a004364:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a004366:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a004368:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
1a00436c:	e703      	b.n	1a004176 <_svfprintf_r+0x1256>
1a00436e:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a004370:	18b5      	adds	r5, r6, r2
1a004372:	eba5 050a 	sub.w	r5, r5, sl
1a004376:	1ad3      	subs	r3, r2, r3
1a004378:	429d      	cmp	r5, r3
1a00437a:	bfa8      	it	ge
1a00437c:	461d      	movge	r5, r3
1a00437e:	e440      	b.n	1a003c02 <_svfprintf_r+0xce2>
1a004380:	681c      	ldr	r4, [r3, #0]
1a004382:	9209      	str	r2, [sp, #36]	; 0x24
1a004384:	17e5      	asrs	r5, r4, #31
1a004386:	9f02      	ldr	r7, [sp, #8]
1a004388:	4622      	mov	r2, r4
1a00438a:	462b      	mov	r3, r5
1a00438c:	f7fe bfd7 	b.w	1a00333e <_svfprintf_r+0x41e>
1a004390:	b2e4      	uxtb	r4, r4
1a004392:	2500      	movs	r5, #0
1a004394:	f7fe bec2 	b.w	1a00311c <_svfprintf_r+0x1fc>
1a004398:	9a09      	ldr	r2, [sp, #36]	; 0x24
1a00439a:	9309      	str	r3, [sp, #36]	; 0x24
1a00439c:	6812      	ldr	r2, [r2, #0]
1a00439e:	9b04      	ldr	r3, [sp, #16]
1a0043a0:	8013      	strh	r3, [r2, #0]
1a0043a2:	465e      	mov	r6, fp
1a0043a4:	f7fe bf5c 	b.w	1a003260 <_svfprintf_r+0x340>
1a0043a8:	aa28      	add	r2, sp, #160	; 0xa0
1a0043aa:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1a0043ae:	f002 f87f 	bl	1a0064b0 <__ssprint_r>
1a0043b2:	2800      	cmp	r0, #0
1a0043b4:	f47e ae93 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a0043b8:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a0043ba:	e9dd 2429 	ldrd	r2, r4, [sp, #164]	; 0xa4
1a0043be:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
1a0043c2:	e745      	b.n	1a004250 <_svfprintf_r+0x1330>
1a0043c4:	f04f 0a06 	mov.w	sl, #6
1a0043c8:	e4fc      	b.n	1a003dc4 <_svfprintf_r+0xea4>
1a0043ca:	aa28      	add	r2, sp, #160	; 0xa0
1a0043cc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1a0043d0:	f002 f86e 	bl	1a0064b0 <__ssprint_r>
1a0043d4:	2800      	cmp	r0, #0
1a0043d6:	f47e ae82 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a0043da:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a0043dc:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
1a0043e0:	f7ff bbd8 	b.w	1a003b94 <_svfprintf_r+0xc74>
1a0043e4:	9f02      	ldr	r7, [sp, #8]
1a0043e6:	f7ff b97e 	b.w	1a0036e6 <_svfprintf_r+0x7c6>
1a0043ea:	46b2      	mov	sl, r6
1a0043ec:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a0043ee:	9e0e      	ldr	r6, [sp, #56]	; 0x38
1a0043f0:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
1a0043f4:	f8cd 8060 	str.w	r8, [sp, #96]	; 0x60
1a0043f8:	18f3      	adds	r3, r6, r3
1a0043fa:	459a      	cmp	sl, r3
1a0043fc:	460c      	mov	r4, r1
1a0043fe:	4691      	mov	r9, r2
1a004400:	bf28      	it	cs
1a004402:	469a      	movcs	sl, r3
1a004404:	f7ff bbcd 	b.w	1a003ba2 <_svfprintf_r+0xc82>
1a004408:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a00440a:	1cda      	adds	r2, r3, #3
1a00440c:	db01      	blt.n	1a004412 <_svfprintf_r+0x14f2>
1a00440e:	459a      	cmp	sl, r3
1a004410:	da05      	bge.n	1a00441e <_svfprintf_r+0x14fe>
1a004412:	f1a8 0802 	sub.w	r8, r8, #2
1a004416:	f028 0320 	bic.w	r3, r8, #32
1a00441a:	9303      	str	r3, [sp, #12]
1a00441c:	e50a      	b.n	1a003e34 <_svfprintf_r+0xf14>
1a00441e:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a004420:	4619      	mov	r1, r3
1a004422:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a004424:	4299      	cmp	r1, r3
1a004426:	f300 8159 	bgt.w	1a0046dc <_svfprintf_r+0x17bc>
1a00442a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1a00442c:	07d7      	lsls	r7, r2, #31
1a00442e:	f140 81c9 	bpl.w	1a0047c4 <_svfprintf_r+0x18a4>
1a004432:	9a13      	ldr	r2, [sp, #76]	; 0x4c
1a004434:	189f      	adds	r7, r3, r2
1a004436:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a004438:	055d      	lsls	r5, r3, #21
1a00443a:	d503      	bpl.n	1a004444 <_svfprintf_r+0x1524>
1a00443c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a00443e:	2b00      	cmp	r3, #0
1a004440:	f300 81f6 	bgt.w	1a004830 <_svfprintf_r+0x1910>
1a004444:	ea27 73e7 	bic.w	r3, r7, r7, asr #31
1a004448:	9303      	str	r3, [sp, #12]
1a00444a:	f04f 0867 	mov.w	r8, #103	; 0x67
1a00444e:	2300      	movs	r3, #0
1a004450:	930c      	str	r3, [sp, #48]	; 0x30
1a004452:	930f      	str	r3, [sp, #60]	; 0x3c
1a004454:	e551      	b.n	1a003efa <_svfprintf_r+0xfda>
1a004456:	222d      	movs	r2, #45	; 0x2d
1a004458:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
1a00445c:	f04f 0a00 	mov.w	sl, #0
1a004460:	f7fe bf41 	b.w	1a0032e6 <_svfprintf_r+0x3c6>
1a004464:	aa28      	add	r2, sp, #160	; 0xa0
1a004466:	4649      	mov	r1, r9
1a004468:	4658      	mov	r0, fp
1a00446a:	f002 f821 	bl	1a0064b0 <__ssprint_r>
1a00446e:	2800      	cmp	r0, #0
1a004470:	f47e ae35 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a004474:	f898 3000 	ldrb.w	r3, [r8]
1a004478:	992a      	ldr	r1, [sp, #168]	; 0xa8
1a00447a:	aa2b      	add	r2, sp, #172	; 0xac
1a00447c:	441e      	add	r6, r3
1a00447e:	e607      	b.n	1a004090 <_svfprintf_r+0x1170>
1a004480:	aa28      	add	r2, sp, #160	; 0xa0
1a004482:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1a004486:	f002 f813 	bl	1a0064b0 <__ssprint_r>
1a00448a:	2800      	cmp	r0, #0
1a00448c:	f47e ae27 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a004490:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a004492:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
1a004496:	f7ff bb75 	b.w	1a003b84 <_svfprintf_r+0xc64>
1a00449a:	9b19      	ldr	r3, [sp, #100]	; 0x64
1a00449c:	9917      	ldr	r1, [sp, #92]	; 0x5c
1a00449e:	1af6      	subs	r6, r6, r3
1a0044a0:	461a      	mov	r2, r3
1a0044a2:	4630      	mov	r0, r6
1a0044a4:	f001 ffca 	bl	1a00643c <strncpy>
1a0044a8:	f898 3001 	ldrb.w	r3, [r8, #1]
1a0044ac:	b10b      	cbz	r3, 1a0044b2 <_svfprintf_r+0x1592>
1a0044ae:	f108 0801 	add.w	r8, r8, #1
1a0044b2:	220a      	movs	r2, #10
1a0044b4:	2300      	movs	r3, #0
1a0044b6:	4620      	mov	r0, r4
1a0044b8:	4629      	mov	r1, r5
1a0044ba:	f04f 0b00 	mov.w	fp, #0
1a0044be:	f7fd fdf1 	bl	1a0020a4 <__aeabi_uldivmod>
1a0044c2:	f7ff b960 	b.w	1a003786 <_svfprintf_r+0x866>
1a0044c6:	aa28      	add	r2, sp, #160	; 0xa0
1a0044c8:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1a0044cc:	f001 fff0 	bl	1a0064b0 <__ssprint_r>
1a0044d0:	2800      	cmp	r0, #0
1a0044d2:	f47e ae04 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a0044d6:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a0044d8:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a0044da:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
1a0044de:	f7ff bb78 	b.w	1a003bd2 <_svfprintf_r+0xcb2>
1a0044e2:	aa26      	add	r2, sp, #152	; 0x98
1a0044e4:	ab23      	add	r3, sp, #140	; 0x8c
1a0044e6:	e9cd 3200 	strd	r3, r2, [sp]
1a0044ea:	2103      	movs	r1, #3
1a0044ec:	ab22      	add	r3, sp, #136	; 0x88
1a0044ee:	4652      	mov	r2, sl
1a0044f0:	ed9d 0b1c 	vldr	d0, [sp, #112]	; 0x70
1a0044f4:	9806      	ldr	r0, [sp, #24]
1a0044f6:	f000 fac3 	bl	1a004a80 <_dtoa_r>
1a0044fa:	7803      	ldrb	r3, [r0, #0]
1a0044fc:	2b30      	cmp	r3, #48	; 0x30
1a0044fe:	4606      	mov	r6, r0
1a004500:	f000 81cd 	beq.w	1a00489e <_svfprintf_r+0x197e>
1a004504:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a004506:	4453      	add	r3, sl
1a004508:	18f4      	adds	r4, r6, r3
1a00450a:	2200      	movs	r2, #0
1a00450c:	2300      	movs	r3, #0
1a00450e:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
1a004512:	f7fd fd57 	bl	1a001fc4 <__aeabi_dcmpeq>
1a004516:	b108      	cbz	r0, 1a00451c <_svfprintf_r+0x15fc>
1a004518:	4627      	mov	r7, r4
1a00451a:	e47f      	b.n	1a003e1c <_svfprintf_r+0xefc>
1a00451c:	9f26      	ldr	r7, [sp, #152]	; 0x98
1a00451e:	42a7      	cmp	r7, r4
1a004520:	f4bf ac7c 	bcs.w	1a003e1c <_svfprintf_r+0xefc>
1a004524:	2230      	movs	r2, #48	; 0x30
1a004526:	1c7b      	adds	r3, r7, #1
1a004528:	9326      	str	r3, [sp, #152]	; 0x98
1a00452a:	703a      	strb	r2, [r7, #0]
1a00452c:	9f26      	ldr	r7, [sp, #152]	; 0x98
1a00452e:	42bc      	cmp	r4, r7
1a004530:	d8f9      	bhi.n	1a004526 <_svfprintf_r+0x1606>
1a004532:	e473      	b.n	1a003e1c <_svfprintf_r+0xefc>
1a004534:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a004536:	9a0e      	ldr	r2, [sp, #56]	; 0x38
1a004538:	f003 0301 	and.w	r3, r3, #1
1a00453c:	2a00      	cmp	r2, #0
1a00453e:	ea43 030a 	orr.w	r3, r3, sl
1a004542:	f340 81bf 	ble.w	1a0048c4 <_svfprintf_r+0x19a4>
1a004546:	2b00      	cmp	r3, #0
1a004548:	f040 819a 	bne.w	1a004880 <_svfprintf_r+0x1960>
1a00454c:	9f0e      	ldr	r7, [sp, #56]	; 0x38
1a00454e:	f04f 0866 	mov.w	r8, #102	; 0x66
1a004552:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a004554:	055a      	lsls	r2, r3, #21
1a004556:	f100 816d 	bmi.w	1a004834 <_svfprintf_r+0x1914>
1a00455a:	ea27 73e7 	bic.w	r3, r7, r7, asr #31
1a00455e:	9303      	str	r3, [sp, #12]
1a004560:	e775      	b.n	1a00444e <_svfprintf_r+0x152e>
1a004562:	4657      	mov	r7, sl
1a004564:	f8cd a00c 	str.w	sl, [sp, #12]
1a004568:	9409      	str	r4, [sp, #36]	; 0x24
1a00456a:	4682      	mov	sl, r0
1a00456c:	900c      	str	r0, [sp, #48]	; 0x30
1a00456e:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
1a004572:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
1a004576:	f7fe beb3 	b.w	1a0032e0 <_svfprintf_r+0x3c0>
1a00457a:	2330      	movs	r3, #48	; 0x30
1a00457c:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
1a004580:	2358      	movs	r3, #88	; 0x58
1a004582:	f88d 3085 	strb.w	r3, [sp, #133]	; 0x85
1a004586:	9b02      	ldr	r3, [sp, #8]
1a004588:	f1ba 0f63 	cmp.w	sl, #99	; 0x63
1a00458c:	f043 0302 	orr.w	r3, r3, #2
1a004590:	930a      	str	r3, [sp, #40]	; 0x28
1a004592:	f300 80dd 	bgt.w	1a004750 <_svfprintf_r+0x1830>
1a004596:	2300      	movs	r3, #0
1a004598:	9308      	str	r3, [sp, #32]
1a00459a:	ae3b      	add	r6, sp, #236	; 0xec
1a00459c:	9a02      	ldr	r2, [sp, #8]
1a00459e:	9b11      	ldr	r3, [sp, #68]	; 0x44
1a0045a0:	f442 7281 	orr.w	r2, r2, #258	; 0x102
1a0045a4:	9202      	str	r2, [sp, #8]
1a0045a6:	2b00      	cmp	r3, #0
1a0045a8:	f028 0220 	bic.w	r2, r8, #32
1a0045ac:	9203      	str	r2, [sp, #12]
1a0045ae:	f2c0 808c 	blt.w	1a0046ca <_svfprintf_r+0x17aa>
1a0045b2:	ed9d 7b10 	vldr	d7, [sp, #64]	; 0x40
1a0045b6:	ed8d 7b1c 	vstr	d7, [sp, #112]	; 0x70
1a0045ba:	2300      	movs	r3, #0
1a0045bc:	931e      	str	r3, [sp, #120]	; 0x78
1a0045be:	f1b8 0f61 	cmp.w	r8, #97	; 0x61
1a0045c2:	f000 811d 	beq.w	1a004800 <_svfprintf_r+0x18e0>
1a0045c6:	f1b8 0f41 	cmp.w	r8, #65	; 0x41
1a0045ca:	f47f ac0a 	bne.w	1a003de2 <_svfprintf_r+0xec2>
1a0045ce:	a822      	add	r0, sp, #136	; 0x88
1a0045d0:	ed9d 0b1c 	vldr	d0, [sp, #112]	; 0x70
1a0045d4:	f001 fefc 	bl	1a0063d0 <frexp>
1a0045d8:	2200      	movs	r2, #0
1a0045da:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
1a0045de:	ec51 0b10 	vmov	r0, r1, d0
1a0045e2:	f7fd fa87 	bl	1a001af4 <__aeabi_dmul>
1a0045e6:	2200      	movs	r2, #0
1a0045e8:	2300      	movs	r3, #0
1a0045ea:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
1a0045ee:	f7fd fce9 	bl	1a001fc4 <__aeabi_dcmpeq>
1a0045f2:	b108      	cbz	r0, 1a0045f8 <_svfprintf_r+0x16d8>
1a0045f4:	2301      	movs	r3, #1
1a0045f6:	9322      	str	r3, [sp, #136]	; 0x88
1a0045f8:	4bb6      	ldr	r3, [pc, #728]	; (1a0048d4 <_svfprintf_r+0x19b4>)
1a0045fa:	930b      	str	r3, [sp, #44]	; 0x2c
1a0045fc:	e9cd b80e 	strd	fp, r8, [sp, #56]	; 0x38
1a004600:	f10a 35ff 	add.w	r5, sl, #4294967295
1a004604:	f8cd a048 	str.w	sl, [sp, #72]	; 0x48
1a004608:	f8cd 907c 	str.w	r9, [sp, #124]	; 0x7c
1a00460c:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
1a004610:	e9dd 890c 	ldrd	r8, r9, [sp, #48]	; 0x30
1a004614:	46b2      	mov	sl, r6
1a004616:	960c      	str	r6, [sp, #48]	; 0x30
1a004618:	e003      	b.n	1a004622 <_svfprintf_r+0x1702>
1a00461a:	f7fd fcd3 	bl	1a001fc4 <__aeabi_dcmpeq>
1a00461e:	bb20      	cbnz	r0, 1a00466a <_svfprintf_r+0x174a>
1a004620:	46ba      	mov	sl, r7
1a004622:	2200      	movs	r2, #0
1a004624:	4bac      	ldr	r3, [pc, #688]	; (1a0048d8 <_svfprintf_r+0x19b8>)
1a004626:	4640      	mov	r0, r8
1a004628:	4649      	mov	r1, r9
1a00462a:	f7fd fa63 	bl	1a001af4 <__aeabi_dmul>
1a00462e:	4689      	mov	r9, r1
1a004630:	4680      	mov	r8, r0
1a004632:	f7fd fd0f 	bl	1a002054 <__aeabi_d2iz>
1a004636:	4606      	mov	r6, r0
1a004638:	f7fd f9f2 	bl	1a001a20 <__aeabi_i2d>
1a00463c:	4602      	mov	r2, r0
1a00463e:	460b      	mov	r3, r1
1a004640:	4640      	mov	r0, r8
1a004642:	4649      	mov	r1, r9
1a004644:	f7fd f89e 	bl	1a001784 <__aeabi_dsub>
1a004648:	4657      	mov	r7, sl
1a00464a:	f81b 4006 	ldrb.w	r4, [fp, r6]
1a00464e:	f807 4b01 	strb.w	r4, [r7], #1
1a004652:	f1b5 3fff 	cmp.w	r5, #4294967295
1a004656:	462c      	mov	r4, r5
1a004658:	4680      	mov	r8, r0
1a00465a:	4689      	mov	r9, r1
1a00465c:	f04f 0200 	mov.w	r2, #0
1a004660:	f04f 0300 	mov.w	r3, #0
1a004664:	f105 35ff 	add.w	r5, r5, #4294967295
1a004668:	d1d7      	bne.n	1a00461a <_svfprintf_r+0x16fa>
1a00466a:	4640      	mov	r0, r8
1a00466c:	4649      	mov	r1, r9
1a00466e:	2200      	movs	r2, #0
1a004670:	4b9a      	ldr	r3, [pc, #616]	; (1a0048dc <_svfprintf_r+0x19bc>)
1a004672:	f8dd b038 	ldr.w	fp, [sp, #56]	; 0x38
1a004676:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
1a00467a:	f8cd a038 	str.w	sl, [sp, #56]	; 0x38
1a00467e:	4635      	mov	r5, r6
1a004680:	f8dd 907c 	ldr.w	r9, [sp, #124]	; 0x7c
1a004684:	9e0c      	ldr	r6, [sp, #48]	; 0x30
1a004686:	f8dd a048 	ldr.w	sl, [sp, #72]	; 0x48
1a00468a:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
1a00468e:	f7fd fcc1 	bl	1a002014 <__aeabi_dcmpgt>
1a004692:	2800      	cmp	r0, #0
1a004694:	d13f      	bne.n	1a004716 <_svfprintf_r+0x17f6>
1a004696:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
1a00469a:	2200      	movs	r2, #0
1a00469c:	4b8f      	ldr	r3, [pc, #572]	; (1a0048dc <_svfprintf_r+0x19bc>)
1a00469e:	f7fd fc91 	bl	1a001fc4 <__aeabi_dcmpeq>
1a0046a2:	b108      	cbz	r0, 1a0046a8 <_svfprintf_r+0x1788>
1a0046a4:	07e9      	lsls	r1, r5, #31
1a0046a6:	d436      	bmi.n	1a004716 <_svfprintf_r+0x17f6>
1a0046a8:	2c00      	cmp	r4, #0
1a0046aa:	f6ff abb7 	blt.w	1a003e1c <_svfprintf_r+0xefc>
1a0046ae:	1c63      	adds	r3, r4, #1
1a0046b0:	443b      	add	r3, r7
1a0046b2:	2230      	movs	r2, #48	; 0x30
1a0046b4:	f807 2b01 	strb.w	r2, [r7], #1
1a0046b8:	42bb      	cmp	r3, r7
1a0046ba:	d1fb      	bne.n	1a0046b4 <_svfprintf_r+0x1794>
1a0046bc:	f7ff bbae 	b.w	1a003e1c <_svfprintf_r+0xefc>
1a0046c0:	9b02      	ldr	r3, [sp, #8]
1a0046c2:	930a      	str	r3, [sp, #40]	; 0x28
1a0046c4:	2300      	movs	r3, #0
1a0046c6:	9308      	str	r3, [sp, #32]
1a0046c8:	9202      	str	r2, [sp, #8]
1a0046ca:	e9dd 1210 	ldrd	r1, r2, [sp, #64]	; 0x40
1a0046ce:	f102 4300 	add.w	r3, r2, #2147483648	; 0x80000000
1a0046d2:	931d      	str	r3, [sp, #116]	; 0x74
1a0046d4:	232d      	movs	r3, #45	; 0x2d
1a0046d6:	911c      	str	r1, [sp, #112]	; 0x70
1a0046d8:	931e      	str	r3, [sp, #120]	; 0x78
1a0046da:	e770      	b.n	1a0045be <_svfprintf_r+0x169e>
1a0046dc:	e9dd 3212 	ldrd	r3, r2, [sp, #72]	; 0x48
1a0046e0:	189f      	adds	r7, r3, r2
1a0046e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a0046e4:	2b00      	cmp	r3, #0
1a0046e6:	f340 80d1 	ble.w	1a00488c <_svfprintf_r+0x196c>
1a0046ea:	f04f 0867 	mov.w	r8, #103	; 0x67
1a0046ee:	e730      	b.n	1a004552 <_svfprintf_r+0x1632>
1a0046f0:	aa28      	add	r2, sp, #160	; 0xa0
1a0046f2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1a0046f6:	f001 fedb 	bl	1a0064b0 <__ssprint_r>
1a0046fa:	2800      	cmp	r0, #0
1a0046fc:	f47e acef 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a004700:	9b22      	ldr	r3, [sp, #136]	; 0x88
1a004702:	9a12      	ldr	r2, [sp, #72]	; 0x48
1a004704:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
1a004706:	1ad3      	subs	r3, r2, r3
1a004708:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
1a00470c:	f7ff ba79 	b.w	1a003c02 <_svfprintf_r+0xce2>
1a004710:	eb06 040a 	add.w	r4, r6, sl
1a004714:	e6f9      	b.n	1a00450a <_svfprintf_r+0x15ea>
1a004716:	9b0e      	ldr	r3, [sp, #56]	; 0x38
1a004718:	9326      	str	r3, [sp, #152]	; 0x98
1a00471a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1a00471c:	f817 2c01 	ldrb.w	r2, [r7, #-1]
1a004720:	7bd9      	ldrb	r1, [r3, #15]
1a004722:	4291      	cmp	r1, r2
1a004724:	463b      	mov	r3, r7
1a004726:	d109      	bne.n	1a00473c <_svfprintf_r+0x181c>
1a004728:	2030      	movs	r0, #48	; 0x30
1a00472a:	f803 0c01 	strb.w	r0, [r3, #-1]
1a00472e:	9b26      	ldr	r3, [sp, #152]	; 0x98
1a004730:	1e5a      	subs	r2, r3, #1
1a004732:	9226      	str	r2, [sp, #152]	; 0x98
1a004734:	f813 2c01 	ldrb.w	r2, [r3, #-1]
1a004738:	4291      	cmp	r1, r2
1a00473a:	d0f6      	beq.n	1a00472a <_svfprintf_r+0x180a>
1a00473c:	2a39      	cmp	r2, #57	; 0x39
1a00473e:	bf0b      	itete	eq
1a004740:	9a0b      	ldreq	r2, [sp, #44]	; 0x2c
1a004742:	3201      	addne	r2, #1
1a004744:	7a92      	ldrbeq	r2, [r2, #10]
1a004746:	b2d2      	uxtbne	r2, r2
1a004748:	f803 2c01 	strb.w	r2, [r3, #-1]
1a00474c:	f7ff bb66 	b.w	1a003e1c <_svfprintf_r+0xefc>
1a004750:	f10a 0101 	add.w	r1, sl, #1
1a004754:	9806      	ldr	r0, [sp, #24]
1a004756:	f7fd ff95 	bl	1a002684 <_malloc_r>
1a00475a:	4606      	mov	r6, r0
1a00475c:	2800      	cmp	r0, #0
1a00475e:	f000 80ed 	beq.w	1a00493c <_svfprintf_r+0x1a1c>
1a004762:	9008      	str	r0, [sp, #32]
1a004764:	e71a      	b.n	1a00459c <_svfprintf_r+0x167c>
1a004766:	4621      	mov	r1, r4
1a004768:	461c      	mov	r4, r3
1a00476a:	460b      	mov	r3, r1
1a00476c:	3201      	adds	r2, #1
1a00476e:	442c      	add	r4, r5
1a004770:	2a07      	cmp	r2, #7
1a004772:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
1a004776:	e9c9 3500 	strd	r3, r5, [r9]
1a00477a:	f77f ad13 	ble.w	1a0041a4 <_svfprintf_r+0x1284>
1a00477e:	aa28      	add	r2, sp, #160	; 0xa0
1a004780:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1a004784:	f001 fe94 	bl	1a0064b0 <__ssprint_r>
1a004788:	2800      	cmp	r0, #0
1a00478a:	f47e aca8 	bne.w	1a0030de <_svfprintf_r+0x1be>
1a00478e:	e9dd 2429 	ldrd	r2, r4, [sp, #164]	; 0xa4
1a004792:	f10d 09ac 	add.w	r9, sp, #172	; 0xac
1a004796:	e507      	b.n	1a0041a8 <_svfprintf_r+0x1288>
1a004798:	f10a 0401 	add.w	r4, sl, #1
1a00479c:	a926      	add	r1, sp, #152	; 0x98
1a00479e:	ab23      	add	r3, sp, #140	; 0x8c
1a0047a0:	e9cd 3100 	strd	r3, r1, [sp]
1a0047a4:	4622      	mov	r2, r4
1a0047a6:	ab22      	add	r3, sp, #136	; 0x88
1a0047a8:	2102      	movs	r1, #2
1a0047aa:	ed9d 0b1c 	vldr	d0, [sp, #112]	; 0x70
1a0047ae:	9806      	ldr	r0, [sp, #24]
1a0047b0:	f000 f966 	bl	1a004a80 <_dtoa_r>
1a0047b4:	4606      	mov	r6, r0
1a0047b6:	4434      	add	r4, r6
1a0047b8:	e6a7      	b.n	1a00450a <_svfprintf_r+0x15ea>
1a0047ba:	2330      	movs	r3, #48	; 0x30
1a0047bc:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
1a0047c0:	2378      	movs	r3, #120	; 0x78
1a0047c2:	e6de      	b.n	1a004582 <_svfprintf_r+0x1662>
1a0047c4:	9f0e      	ldr	r7, [sp, #56]	; 0x38
1a0047c6:	e636      	b.n	1a004436 <_svfprintf_r+0x1516>
1a0047c8:	2900      	cmp	r1, #0
1a0047ca:	f040 8098 	bne.w	1a0048fe <_svfprintf_r+0x19de>
1a0047ce:	2330      	movs	r3, #48	; 0x30
1a0047d0:	f88d 3092 	strb.w	r3, [sp, #146]	; 0x92
1a0047d4:	f10d 0393 	add.w	r3, sp, #147	; 0x93
1a0047d8:	3230      	adds	r2, #48	; 0x30
1a0047da:	f803 2b01 	strb.w	r2, [r3], #1
1a0047de:	aa24      	add	r2, sp, #144	; 0x90
1a0047e0:	1a9b      	subs	r3, r3, r2
1a0047e2:	9316      	str	r3, [sp, #88]	; 0x58
1a0047e4:	f7ff bb73 	b.w	1a003ece <_svfprintf_r+0xfae>
1a0047e8:	9b11      	ldr	r3, [sp, #68]	; 0x44
1a0047ea:	4e3d      	ldr	r6, [pc, #244]	; (1a0048e0 <_svfprintf_r+0x19c0>)
1a0047ec:	2b00      	cmp	r3, #0
1a0047ee:	bfb6      	itet	lt
1a0047f0:	222d      	movlt	r2, #45	; 0x2d
1a0047f2:	f89d 2083 	ldrbge.w	r2, [sp, #131]	; 0x83
1a0047f6:	f88d 2083 	strblt.w	r2, [sp, #131]	; 0x83
1a0047fa:	4b3a      	ldr	r3, [pc, #232]	; (1a0048e4 <_svfprintf_r+0x19c4>)
1a0047fc:	f7fe bf09 	b.w	1a003612 <_svfprintf_r+0x6f2>
1a004800:	a822      	add	r0, sp, #136	; 0x88
1a004802:	ed9d 0b1c 	vldr	d0, [sp, #112]	; 0x70
1a004806:	f001 fde3 	bl	1a0063d0 <frexp>
1a00480a:	2200      	movs	r2, #0
1a00480c:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
1a004810:	ec51 0b10 	vmov	r0, r1, d0
1a004814:	f7fd f96e 	bl	1a001af4 <__aeabi_dmul>
1a004818:	2200      	movs	r2, #0
1a00481a:	2300      	movs	r3, #0
1a00481c:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
1a004820:	f7fd fbd0 	bl	1a001fc4 <__aeabi_dcmpeq>
1a004824:	b108      	cbz	r0, 1a00482a <_svfprintf_r+0x190a>
1a004826:	2301      	movs	r3, #1
1a004828:	9322      	str	r3, [sp, #136]	; 0x88
1a00482a:	4b2f      	ldr	r3, [pc, #188]	; (1a0048e8 <_svfprintf_r+0x19c8>)
1a00482c:	930b      	str	r3, [sp, #44]	; 0x2c
1a00482e:	e6e5      	b.n	1a0045fc <_svfprintf_r+0x16dc>
1a004830:	f04f 0867 	mov.w	r8, #103	; 0x67
1a004834:	9818      	ldr	r0, [sp, #96]	; 0x60
1a004836:	2200      	movs	r2, #0
1a004838:	920c      	str	r2, [sp, #48]	; 0x30
1a00483a:	920f      	str	r2, [sp, #60]	; 0x3c
1a00483c:	7803      	ldrb	r3, [r0, #0]
1a00483e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
1a004840:	2bff      	cmp	r3, #255	; 0xff
1a004842:	d00c      	beq.n	1a00485e <_svfprintf_r+0x193e>
1a004844:	4293      	cmp	r3, r2
1a004846:	da0a      	bge.n	1a00485e <_svfprintf_r+0x193e>
1a004848:	7841      	ldrb	r1, [r0, #1]
1a00484a:	1ad2      	subs	r2, r2, r3
1a00484c:	b1a1      	cbz	r1, 1a004878 <_svfprintf_r+0x1958>
1a00484e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a004850:	3301      	adds	r3, #1
1a004852:	930f      	str	r3, [sp, #60]	; 0x3c
1a004854:	460b      	mov	r3, r1
1a004856:	2bff      	cmp	r3, #255	; 0xff
1a004858:	f100 0001 	add.w	r0, r0, #1
1a00485c:	d1f2      	bne.n	1a004844 <_svfprintf_r+0x1924>
1a00485e:	920e      	str	r2, [sp, #56]	; 0x38
1a004860:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a004862:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1a004864:	9018      	str	r0, [sp, #96]	; 0x60
1a004866:	4413      	add	r3, r2
1a004868:	9a19      	ldr	r2, [sp, #100]	; 0x64
1a00486a:	fb02 7703 	mla	r7, r2, r3, r7
1a00486e:	ea27 73e7 	bic.w	r3, r7, r7, asr #31
1a004872:	9303      	str	r3, [sp, #12]
1a004874:	f7ff bb41 	b.w	1a003efa <_svfprintf_r+0xfda>
1a004878:	990c      	ldr	r1, [sp, #48]	; 0x30
1a00487a:	3101      	adds	r1, #1
1a00487c:	910c      	str	r1, [sp, #48]	; 0x30
1a00487e:	e7df      	b.n	1a004840 <_svfprintf_r+0x1920>
1a004880:	9b13      	ldr	r3, [sp, #76]	; 0x4c
1a004882:	18d7      	adds	r7, r2, r3
1a004884:	4457      	add	r7, sl
1a004886:	f04f 0866 	mov.w	r8, #102	; 0x66
1a00488a:	e662      	b.n	1a004552 <_svfprintf_r+0x1632>
1a00488c:	f1c3 0301 	rsb	r3, r3, #1
1a004890:	441f      	add	r7, r3
1a004892:	ea27 73e7 	bic.w	r3, r7, r7, asr #31
1a004896:	9303      	str	r3, [sp, #12]
1a004898:	f04f 0867 	mov.w	r8, #103	; 0x67
1a00489c:	e5d7      	b.n	1a00444e <_svfprintf_r+0x152e>
1a00489e:	2200      	movs	r2, #0
1a0048a0:	2300      	movs	r3, #0
1a0048a2:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
1a0048a6:	f7fd fb8d 	bl	1a001fc4 <__aeabi_dcmpeq>
1a0048aa:	2800      	cmp	r0, #0
1a0048ac:	f47f ae2a 	bne.w	1a004504 <_svfprintf_r+0x15e4>
1a0048b0:	f1ca 0301 	rsb	r3, sl, #1
1a0048b4:	9322      	str	r3, [sp, #136]	; 0x88
1a0048b6:	e626      	b.n	1a004506 <_svfprintf_r+0x15e6>
1a0048b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a0048ba:	07db      	lsls	r3, r3, #31
1a0048bc:	f57f ab10 	bpl.w	1a003ee0 <_svfprintf_r+0xfc0>
1a0048c0:	f7ff bb0c 	b.w	1a003edc <_svfprintf_r+0xfbc>
1a0048c4:	b993      	cbnz	r3, 1a0048ec <_svfprintf_r+0x19cc>
1a0048c6:	2301      	movs	r3, #1
1a0048c8:	9303      	str	r3, [sp, #12]
1a0048ca:	461f      	mov	r7, r3
1a0048cc:	f04f 0866 	mov.w	r8, #102	; 0x66
1a0048d0:	e5bd      	b.n	1a00444e <_svfprintf_r+0x152e>
1a0048d2:	bf00      	nop
1a0048d4:	1a006a30 	.word	0x1a006a30
1a0048d8:	40300000 	.word	0x40300000
1a0048dc:	3fe00000 	.word	0x3fe00000
1a0048e0:	1a006a14 	.word	0x1a006a14
1a0048e4:	1a006a18 	.word	0x1a006a18
1a0048e8:	1a006a1c 	.word	0x1a006a1c
1a0048ec:	9b13      	ldr	r3, [sp, #76]	; 0x4c
1a0048ee:	1c5f      	adds	r7, r3, #1
1a0048f0:	4457      	add	r7, sl
1a0048f2:	ea27 73e7 	bic.w	r3, r7, r7, asr #31
1a0048f6:	9303      	str	r3, [sp, #12]
1a0048f8:	f04f 0866 	mov.w	r8, #102	; 0x66
1a0048fc:	e5a7      	b.n	1a00444e <_svfprintf_r+0x152e>
1a0048fe:	f10d 0392 	add.w	r3, sp, #146	; 0x92
1a004902:	e769      	b.n	1a0047d8 <_svfprintf_r+0x18b8>
1a004904:	464a      	mov	r2, r9
1a004906:	e4e1      	b.n	1a0042cc <_svfprintf_r+0x13ac>
1a004908:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a00490a:	f89b 8001 	ldrb.w	r8, [fp, #1]
1a00490e:	f853 0b04 	ldr.w	r0, [r3], #4
1a004912:	9309      	str	r3, [sp, #36]	; 0x24
1a004914:	4693      	mov	fp, r2
1a004916:	ea40 7ae0 	orr.w	sl, r0, r0, asr #31
1a00491a:	f7fe bb61 	b.w	1a002fe0 <_svfprintf_r+0xc0>
1a00491e:	9a06      	ldr	r2, [sp, #24]
1a004920:	230c      	movs	r3, #12
1a004922:	6013      	str	r3, [r2, #0]
1a004924:	f04f 33ff 	mov.w	r3, #4294967295
1a004928:	9304      	str	r3, [sp, #16]
1a00492a:	f7fe bbe7 	b.w	1a0030fc <_svfprintf_r+0x1dc>
1a00492e:	4654      	mov	r4, sl
1a004930:	4434      	add	r4, r6
1a004932:	e5ea      	b.n	1a00450a <_svfprintf_r+0x15ea>
1a004934:	2302      	movs	r3, #2
1a004936:	9316      	str	r3, [sp, #88]	; 0x58
1a004938:	f7ff bac9 	b.w	1a003ece <_svfprintf_r+0xfae>
1a00493c:	9a07      	ldr	r2, [sp, #28]
1a00493e:	8993      	ldrh	r3, [r2, #12]
1a004940:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a004944:	8193      	strh	r3, [r2, #12]
1a004946:	f7fe bbd2 	b.w	1a0030ee <_svfprintf_r+0x1ce>
1a00494a:	461f      	mov	r7, r3
1a00494c:	f7ff ba14 	b.w	1a003d78 <_svfprintf_r+0xe58>
1a004950:	461f      	mov	r7, r3
1a004952:	f7ff baeb 	b.w	1a003f2c <_svfprintf_r+0x100c>
1a004956:	461f      	mov	r7, r3
1a004958:	f7ff bada 	b.w	1a003f10 <_svfprintf_r+0xff0>

1a00495c <quorem>:
1a00495c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a004960:	6903      	ldr	r3, [r0, #16]
1a004962:	690f      	ldr	r7, [r1, #16]
1a004964:	42bb      	cmp	r3, r7
1a004966:	b083      	sub	sp, #12
1a004968:	f2c0 8086 	blt.w	1a004a78 <quorem+0x11c>
1a00496c:	3f01      	subs	r7, #1
1a00496e:	f101 0614 	add.w	r6, r1, #20
1a004972:	f100 0a14 	add.w	sl, r0, #20
1a004976:	f856 3027 	ldr.w	r3, [r6, r7, lsl #2]
1a00497a:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
1a00497e:	00bc      	lsls	r4, r7, #2
1a004980:	3301      	adds	r3, #1
1a004982:	9400      	str	r4, [sp, #0]
1a004984:	eb06 0904 	add.w	r9, r6, r4
1a004988:	429a      	cmp	r2, r3
1a00498a:	4454      	add	r4, sl
1a00498c:	fbb2 f8f3 	udiv	r8, r2, r3
1a004990:	9401      	str	r4, [sp, #4]
1a004992:	d33a      	bcc.n	1a004a0a <quorem+0xae>
1a004994:	2500      	movs	r5, #0
1a004996:	462a      	mov	r2, r5
1a004998:	46b6      	mov	lr, r6
1a00499a:	46d4      	mov	ip, sl
1a00499c:	f85e 4b04 	ldr.w	r4, [lr], #4
1a0049a0:	f8dc 3000 	ldr.w	r3, [ip]
1a0049a4:	fa1f fb84 	uxth.w	fp, r4
1a0049a8:	fb08 550b 	mla	r5, r8, fp, r5
1a0049ac:	ea4f 4b15 	mov.w	fp, r5, lsr #16
1a0049b0:	0c24      	lsrs	r4, r4, #16
1a0049b2:	fb08 b404 	mla	r4, r8, r4, fp
1a0049b6:	b2ad      	uxth	r5, r5
1a0049b8:	1b55      	subs	r5, r2, r5
1a0049ba:	b2a2      	uxth	r2, r4
1a0049bc:	ebc2 4213 	rsb	r2, r2, r3, lsr #16
1a0049c0:	fa15 f383 	uxtah	r3, r5, r3
1a0049c4:	eb02 4223 	add.w	r2, r2, r3, asr #16
1a0049c8:	b29b      	uxth	r3, r3
1a0049ca:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a0049ce:	45f1      	cmp	r9, lr
1a0049d0:	ea4f 4514 	mov.w	r5, r4, lsr #16
1a0049d4:	f84c 3b04 	str.w	r3, [ip], #4
1a0049d8:	ea4f 4222 	mov.w	r2, r2, asr #16
1a0049dc:	d2de      	bcs.n	1a00499c <quorem+0x40>
1a0049de:	9b00      	ldr	r3, [sp, #0]
1a0049e0:	f85a 3003 	ldr.w	r3, [sl, r3]
1a0049e4:	b98b      	cbnz	r3, 1a004a0a <quorem+0xae>
1a0049e6:	9a01      	ldr	r2, [sp, #4]
1a0049e8:	1f13      	subs	r3, r2, #4
1a0049ea:	459a      	cmp	sl, r3
1a0049ec:	d20c      	bcs.n	1a004a08 <quorem+0xac>
1a0049ee:	f852 3c04 	ldr.w	r3, [r2, #-4]
1a0049f2:	b94b      	cbnz	r3, 1a004a08 <quorem+0xac>
1a0049f4:	f1a2 0308 	sub.w	r3, r2, #8
1a0049f8:	e002      	b.n	1a004a00 <quorem+0xa4>
1a0049fa:	681a      	ldr	r2, [r3, #0]
1a0049fc:	3b04      	subs	r3, #4
1a0049fe:	b91a      	cbnz	r2, 1a004a08 <quorem+0xac>
1a004a00:	459a      	cmp	sl, r3
1a004a02:	f107 37ff 	add.w	r7, r7, #4294967295
1a004a06:	d3f8      	bcc.n	1a0049fa <quorem+0x9e>
1a004a08:	6107      	str	r7, [r0, #16]
1a004a0a:	4604      	mov	r4, r0
1a004a0c:	f001 fa32 	bl	1a005e74 <__mcmp>
1a004a10:	2800      	cmp	r0, #0
1a004a12:	db2d      	blt.n	1a004a70 <quorem+0x114>
1a004a14:	f108 0801 	add.w	r8, r8, #1
1a004a18:	4650      	mov	r0, sl
1a004a1a:	2300      	movs	r3, #0
1a004a1c:	f856 1b04 	ldr.w	r1, [r6], #4
1a004a20:	6805      	ldr	r5, [r0, #0]
1a004a22:	b28a      	uxth	r2, r1
1a004a24:	1a9a      	subs	r2, r3, r2
1a004a26:	0c0b      	lsrs	r3, r1, #16
1a004a28:	fa12 f285 	uxtah	r2, r2, r5
1a004a2c:	ebc3 4315 	rsb	r3, r3, r5, lsr #16
1a004a30:	eb03 4322 	add.w	r3, r3, r2, asr #16
1a004a34:	b292      	uxth	r2, r2
1a004a36:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
1a004a3a:	45b1      	cmp	r9, r6
1a004a3c:	f840 2b04 	str.w	r2, [r0], #4
1a004a40:	ea4f 4323 	mov.w	r3, r3, asr #16
1a004a44:	d2ea      	bcs.n	1a004a1c <quorem+0xc0>
1a004a46:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
1a004a4a:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
1a004a4e:	b97a      	cbnz	r2, 1a004a70 <quorem+0x114>
1a004a50:	1f1a      	subs	r2, r3, #4
1a004a52:	4592      	cmp	sl, r2
1a004a54:	d20b      	bcs.n	1a004a6e <quorem+0x112>
1a004a56:	f853 2c04 	ldr.w	r2, [r3, #-4]
1a004a5a:	b942      	cbnz	r2, 1a004a6e <quorem+0x112>
1a004a5c:	3b08      	subs	r3, #8
1a004a5e:	e002      	b.n	1a004a66 <quorem+0x10a>
1a004a60:	681a      	ldr	r2, [r3, #0]
1a004a62:	3b04      	subs	r3, #4
1a004a64:	b91a      	cbnz	r2, 1a004a6e <quorem+0x112>
1a004a66:	459a      	cmp	sl, r3
1a004a68:	f107 37ff 	add.w	r7, r7, #4294967295
1a004a6c:	d3f8      	bcc.n	1a004a60 <quorem+0x104>
1a004a6e:	6127      	str	r7, [r4, #16]
1a004a70:	4640      	mov	r0, r8
1a004a72:	b003      	add	sp, #12
1a004a74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a004a78:	2000      	movs	r0, #0
1a004a7a:	b003      	add	sp, #12
1a004a7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

1a004a80 <_dtoa_r>:
1a004a80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a004a84:	ec57 6b10 	vmov	r6, r7, d0
1a004a88:	b097      	sub	sp, #92	; 0x5c
1a004a8a:	6c05      	ldr	r5, [r0, #64]	; 0x40
1a004a8c:	9c20      	ldr	r4, [sp, #128]	; 0x80
1a004a8e:	9102      	str	r1, [sp, #8]
1a004a90:	4682      	mov	sl, r0
1a004a92:	920a      	str	r2, [sp, #40]	; 0x28
1a004a94:	9307      	str	r3, [sp, #28]
1a004a96:	e9cd 6700 	strd	r6, r7, [sp]
1a004a9a:	b155      	cbz	r5, 1a004ab2 <_dtoa_r+0x32>
1a004a9c:	6c42      	ldr	r2, [r0, #68]	; 0x44
1a004a9e:	606a      	str	r2, [r5, #4]
1a004aa0:	2301      	movs	r3, #1
1a004aa2:	4093      	lsls	r3, r2
1a004aa4:	60ab      	str	r3, [r5, #8]
1a004aa6:	4629      	mov	r1, r5
1a004aa8:	f000 fff8 	bl	1a005a9c <_Bfree>
1a004aac:	2300      	movs	r3, #0
1a004aae:	f8ca 3040 	str.w	r3, [sl, #64]	; 0x40
1a004ab2:	1e3e      	subs	r6, r7, #0
1a004ab4:	bfb4      	ite	lt
1a004ab6:	2301      	movlt	r3, #1
1a004ab8:	2300      	movge	r3, #0
1a004aba:	6023      	str	r3, [r4, #0]
1a004abc:	4b76      	ldr	r3, [pc, #472]	; (1a004c98 <_dtoa_r+0x218>)
1a004abe:	bfbc      	itt	lt
1a004ac0:	f026 4600 	biclt.w	r6, r6, #2147483648	; 0x80000000
1a004ac4:	9601      	strlt	r6, [sp, #4]
1a004ac6:	43b3      	bics	r3, r6
1a004ac8:	f000 80ae 	beq.w	1a004c28 <_dtoa_r+0x1a8>
1a004acc:	ed9d 7b00 	vldr	d7, [sp]
1a004ad0:	2200      	movs	r2, #0
1a004ad2:	2300      	movs	r3, #0
1a004ad4:	ec51 0b17 	vmov	r0, r1, d7
1a004ad8:	ed8d 7b04 	vstr	d7, [sp, #16]
1a004adc:	f7fd fa72 	bl	1a001fc4 <__aeabi_dcmpeq>
1a004ae0:	4605      	mov	r5, r0
1a004ae2:	b178      	cbz	r0, 1a004b04 <_dtoa_r+0x84>
1a004ae4:	9a07      	ldr	r2, [sp, #28]
1a004ae6:	2301      	movs	r3, #1
1a004ae8:	6013      	str	r3, [r2, #0]
1a004aea:	9b21      	ldr	r3, [sp, #132]	; 0x84
1a004aec:	2b00      	cmp	r3, #0
1a004aee:	f000 8313 	beq.w	1a005118 <_dtoa_r+0x698>
1a004af2:	4b6a      	ldr	r3, [pc, #424]	; (1a004c9c <_dtoa_r+0x21c>)
1a004af4:	9a21      	ldr	r2, [sp, #132]	; 0x84
1a004af6:	6013      	str	r3, [r2, #0]
1a004af8:	3b01      	subs	r3, #1
1a004afa:	9303      	str	r3, [sp, #12]
1a004afc:	9803      	ldr	r0, [sp, #12]
1a004afe:	b017      	add	sp, #92	; 0x5c
1a004b00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a004b04:	e9dd 7804 	ldrd	r7, r8, [sp, #16]
1a004b08:	aa14      	add	r2, sp, #80	; 0x50
1a004b0a:	a915      	add	r1, sp, #84	; 0x54
1a004b0c:	ec48 7b10 	vmov	d0, r7, r8
1a004b10:	4650      	mov	r0, sl
1a004b12:	f001 fa47 	bl	1a005fa4 <__d2b>
1a004b16:	0d34      	lsrs	r4, r6, #20
1a004b18:	4683      	mov	fp, r0
1a004b1a:	f040 809b 	bne.w	1a004c54 <_dtoa_r+0x1d4>
1a004b1e:	e9dd 5414 	ldrd	r5, r4, [sp, #80]	; 0x50
1a004b22:	442c      	add	r4, r5
1a004b24:	f204 4332 	addw	r3, r4, #1074	; 0x432
1a004b28:	2b20      	cmp	r3, #32
1a004b2a:	f340 83bb 	ble.w	1a0052a4 <_dtoa_r+0x824>
1a004b2e:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
1a004b32:	409e      	lsls	r6, r3
1a004b34:	9b00      	ldr	r3, [sp, #0]
1a004b36:	f204 4012 	addw	r0, r4, #1042	; 0x412
1a004b3a:	fa23 f000 	lsr.w	r0, r3, r0
1a004b3e:	4330      	orrs	r0, r6
1a004b40:	f7fc ff5e 	bl	1a001a00 <__aeabi_ui2d>
1a004b44:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
1a004b48:	2101      	movs	r1, #1
1a004b4a:	4602      	mov	r2, r0
1a004b4c:	3c01      	subs	r4, #1
1a004b4e:	910e      	str	r1, [sp, #56]	; 0x38
1a004b50:	4610      	mov	r0, r2
1a004b52:	4619      	mov	r1, r3
1a004b54:	2200      	movs	r2, #0
1a004b56:	4b52      	ldr	r3, [pc, #328]	; (1a004ca0 <_dtoa_r+0x220>)
1a004b58:	f7fc fe14 	bl	1a001784 <__aeabi_dsub>
1a004b5c:	a348      	add	r3, pc, #288	; (adr r3, 1a004c80 <_dtoa_r+0x200>)
1a004b5e:	e9d3 2300 	ldrd	r2, r3, [r3]
1a004b62:	f7fc ffc7 	bl	1a001af4 <__aeabi_dmul>
1a004b66:	a348      	add	r3, pc, #288	; (adr r3, 1a004c88 <_dtoa_r+0x208>)
1a004b68:	e9d3 2300 	ldrd	r2, r3, [r3]
1a004b6c:	f7fc fe0c 	bl	1a001788 <__adddf3>
1a004b70:	4606      	mov	r6, r0
1a004b72:	4620      	mov	r0, r4
1a004b74:	460f      	mov	r7, r1
1a004b76:	f7fc ff53 	bl	1a001a20 <__aeabi_i2d>
1a004b7a:	a345      	add	r3, pc, #276	; (adr r3, 1a004c90 <_dtoa_r+0x210>)
1a004b7c:	e9d3 2300 	ldrd	r2, r3, [r3]
1a004b80:	f7fc ffb8 	bl	1a001af4 <__aeabi_dmul>
1a004b84:	4602      	mov	r2, r0
1a004b86:	460b      	mov	r3, r1
1a004b88:	4630      	mov	r0, r6
1a004b8a:	4639      	mov	r1, r7
1a004b8c:	f7fc fdfc 	bl	1a001788 <__adddf3>
1a004b90:	4606      	mov	r6, r0
1a004b92:	460f      	mov	r7, r1
1a004b94:	f7fd fa5e 	bl	1a002054 <__aeabi_d2iz>
1a004b98:	2200      	movs	r2, #0
1a004b9a:	4681      	mov	r9, r0
1a004b9c:	2300      	movs	r3, #0
1a004b9e:	4630      	mov	r0, r6
1a004ba0:	4639      	mov	r1, r7
1a004ba2:	f7fd fa19 	bl	1a001fd8 <__aeabi_dcmplt>
1a004ba6:	2800      	cmp	r0, #0
1a004ba8:	f040 82a9 	bne.w	1a0050fe <_dtoa_r+0x67e>
1a004bac:	1b2c      	subs	r4, r5, r4
1a004bae:	f1b9 0f16 	cmp.w	r9, #22
1a004bb2:	f104 38ff 	add.w	r8, r4, #4294967295
1a004bb6:	f200 8296 	bhi.w	1a0050e6 <_dtoa_r+0x666>
1a004bba:	4b3a      	ldr	r3, [pc, #232]	; (1a004ca4 <_dtoa_r+0x224>)
1a004bbc:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
1a004bc0:	e9d3 2300 	ldrd	r2, r3, [r3]
1a004bc4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1a004bc8:	f7fd fa06 	bl	1a001fd8 <__aeabi_dcmplt>
1a004bcc:	2800      	cmp	r0, #0
1a004bce:	d06f      	beq.n	1a004cb0 <_dtoa_r+0x230>
1a004bd0:	2300      	movs	r3, #0
1a004bd2:	f1b8 0f00 	cmp.w	r8, #0
1a004bd6:	f109 39ff 	add.w	r9, r9, #4294967295
1a004bda:	930d      	str	r3, [sp, #52]	; 0x34
1a004bdc:	f2c0 8289 	blt.w	1a0050f2 <_dtoa_r+0x672>
1a004be0:	2300      	movs	r3, #0
1a004be2:	9308      	str	r3, [sp, #32]
1a004be4:	f1b9 0f00 	cmp.w	r9, #0
1a004be8:	da68      	bge.n	1a004cbc <_dtoa_r+0x23c>
1a004bea:	9b08      	ldr	r3, [sp, #32]
1a004bec:	f8cd 9018 	str.w	r9, [sp, #24]
1a004bf0:	eba3 0309 	sub.w	r3, r3, r9
1a004bf4:	9308      	str	r3, [sp, #32]
1a004bf6:	f1c9 0300 	rsb	r3, r9, #0
1a004bfa:	930c      	str	r3, [sp, #48]	; 0x30
1a004bfc:	9b02      	ldr	r3, [sp, #8]
1a004bfe:	2b09      	cmp	r3, #9
1a004c00:	f04f 0900 	mov.w	r9, #0
1a004c04:	d862      	bhi.n	1a004ccc <_dtoa_r+0x24c>
1a004c06:	2b05      	cmp	r3, #5
1a004c08:	f340 834a 	ble.w	1a0052a0 <_dtoa_r+0x820>
1a004c0c:	3b04      	subs	r3, #4
1a004c0e:	9302      	str	r3, [sp, #8]
1a004c10:	2400      	movs	r4, #0
1a004c12:	9b02      	ldr	r3, [sp, #8]
1a004c14:	3b02      	subs	r3, #2
1a004c16:	2b03      	cmp	r3, #3
1a004c18:	f200 8641 	bhi.w	1a00589e <_dtoa_r+0xe1e>
1a004c1c:	e8df f013 	tbh	[pc, r3, lsl #1]
1a004c20:	04630466 	.word	0x04630466
1a004c24:	0456043b 	.word	0x0456043b
1a004c28:	9a07      	ldr	r2, [sp, #28]
1a004c2a:	f242 730f 	movw	r3, #9999	; 0x270f
1a004c2e:	6013      	str	r3, [r2, #0]
1a004c30:	9b00      	ldr	r3, [sp, #0]
1a004c32:	f3c6 0613 	ubfx	r6, r6, #0, #20
1a004c36:	4333      	orrs	r3, r6
1a004c38:	d118      	bne.n	1a004c6c <_dtoa_r+0x1ec>
1a004c3a:	9b21      	ldr	r3, [sp, #132]	; 0x84
1a004c3c:	2b00      	cmp	r3, #0
1a004c3e:	f000 8625 	beq.w	1a00588c <_dtoa_r+0xe0c>
1a004c42:	4b19      	ldr	r3, [pc, #100]	; (1a004ca8 <_dtoa_r+0x228>)
1a004c44:	9303      	str	r3, [sp, #12]
1a004c46:	3308      	adds	r3, #8
1a004c48:	9a21      	ldr	r2, [sp, #132]	; 0x84
1a004c4a:	9803      	ldr	r0, [sp, #12]
1a004c4c:	6013      	str	r3, [r2, #0]
1a004c4e:	b017      	add	sp, #92	; 0x5c
1a004c50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a004c54:	f3c8 0113 	ubfx	r1, r8, #0, #20
1a004c58:	f041 537f 	orr.w	r3, r1, #1069547520	; 0x3fc00000
1a004c5c:	950e      	str	r5, [sp, #56]	; 0x38
1a004c5e:	463a      	mov	r2, r7
1a004c60:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
1a004c64:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
1a004c68:	9d14      	ldr	r5, [sp, #80]	; 0x50
1a004c6a:	e771      	b.n	1a004b50 <_dtoa_r+0xd0>
1a004c6c:	9b21      	ldr	r3, [sp, #132]	; 0x84
1a004c6e:	2b00      	cmp	r3, #0
1a004c70:	f040 8400 	bne.w	1a005474 <_dtoa_r+0x9f4>
1a004c74:	4b0d      	ldr	r3, [pc, #52]	; (1a004cac <_dtoa_r+0x22c>)
1a004c76:	9303      	str	r3, [sp, #12]
1a004c78:	e740      	b.n	1a004afc <_dtoa_r+0x7c>
1a004c7a:	bf00      	nop
1a004c7c:	f3af 8000 	nop.w
1a004c80:	636f4361 	.word	0x636f4361
1a004c84:	3fd287a7 	.word	0x3fd287a7
1a004c88:	8b60c8b3 	.word	0x8b60c8b3
1a004c8c:	3fc68a28 	.word	0x3fc68a28
1a004c90:	509f79fb 	.word	0x509f79fb
1a004c94:	3fd34413 	.word	0x3fd34413
1a004c98:	7ff00000 	.word	0x7ff00000
1a004c9c:	1a006a4d 	.word	0x1a006a4d
1a004ca0:	3ff80000 	.word	0x3ff80000
1a004ca4:	1a006aa8 	.word	0x1a006aa8
1a004ca8:	1a006a74 	.word	0x1a006a74
1a004cac:	1a006a70 	.word	0x1a006a70
1a004cb0:	f1b8 0f00 	cmp.w	r8, #0
1a004cb4:	f2c0 84b6 	blt.w	1a005624 <_dtoa_r+0xba4>
1a004cb8:	900d      	str	r0, [sp, #52]	; 0x34
1a004cba:	9008      	str	r0, [sp, #32]
1a004cbc:	2300      	movs	r3, #0
1a004cbe:	930c      	str	r3, [sp, #48]	; 0x30
1a004cc0:	9b02      	ldr	r3, [sp, #8]
1a004cc2:	f8cd 9018 	str.w	r9, [sp, #24]
1a004cc6:	2b09      	cmp	r3, #9
1a004cc8:	44c8      	add	r8, r9
1a004cca:	d99c      	bls.n	1a004c06 <_dtoa_r+0x186>
1a004ccc:	2300      	movs	r3, #0
1a004cce:	2401      	movs	r4, #1
1a004cd0:	e9cd 340a 	strd	r3, r4, [sp, #40]	; 0x28
1a004cd4:	f04f 35ff 	mov.w	r5, #4294967295
1a004cd8:	9302      	str	r3, [sp, #8]
1a004cda:	9509      	str	r5, [sp, #36]	; 0x24
1a004cdc:	2100      	movs	r1, #0
1a004cde:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
1a004ce2:	950f      	str	r5, [sp, #60]	; 0x3c
1a004ce4:	4650      	mov	r0, sl
1a004ce6:	f000 feb3 	bl	1a005a50 <_Balloc>
1a004cea:	2d0e      	cmp	r5, #14
1a004cec:	9003      	str	r0, [sp, #12]
1a004cee:	f8ca 0040 	str.w	r0, [sl, #64]	; 0x40
1a004cf2:	f200 810a 	bhi.w	1a004f0a <_dtoa_r+0x48a>
1a004cf6:	2c00      	cmp	r4, #0
1a004cf8:	f000 8107 	beq.w	1a004f0a <_dtoa_r+0x48a>
1a004cfc:	9906      	ldr	r1, [sp, #24]
1a004cfe:	2900      	cmp	r1, #0
1a004d00:	f340 8466 	ble.w	1a0055d0 <_dtoa_r+0xb50>
1a004d04:	4bb1      	ldr	r3, [pc, #708]	; (1a004fcc <_dtoa_r+0x54c>)
1a004d06:	f001 020f 	and.w	r2, r1, #15
1a004d0a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
1a004d0e:	ed93 7b00 	vldr	d7, [r3]
1a004d12:	110c      	asrs	r4, r1, #4
1a004d14:	06e3      	lsls	r3, r4, #27
1a004d16:	ed8d 7b10 	vstr	d7, [sp, #64]	; 0x40
1a004d1a:	f140 8406 	bpl.w	1a00552a <_dtoa_r+0xaaa>
1a004d1e:	4bac      	ldr	r3, [pc, #688]	; (1a004fd0 <_dtoa_r+0x550>)
1a004d20:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1a004d24:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
1a004d28:	f7fd f80e 	bl	1a001d48 <__aeabi_ddiv>
1a004d2c:	e9cd 0100 	strd	r0, r1, [sp]
1a004d30:	f004 040f 	and.w	r4, r4, #15
1a004d34:	2603      	movs	r6, #3
1a004d36:	b17c      	cbz	r4, 1a004d58 <_dtoa_r+0x2d8>
1a004d38:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
1a004d3c:	4da4      	ldr	r5, [pc, #656]	; (1a004fd0 <_dtoa_r+0x550>)
1a004d3e:	07e7      	lsls	r7, r4, #31
1a004d40:	d504      	bpl.n	1a004d4c <_dtoa_r+0x2cc>
1a004d42:	e9d5 2300 	ldrd	r2, r3, [r5]
1a004d46:	f7fc fed5 	bl	1a001af4 <__aeabi_dmul>
1a004d4a:	3601      	adds	r6, #1
1a004d4c:	1064      	asrs	r4, r4, #1
1a004d4e:	f105 0508 	add.w	r5, r5, #8
1a004d52:	d1f4      	bne.n	1a004d3e <_dtoa_r+0x2be>
1a004d54:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
1a004d58:	e9dd 0100 	ldrd	r0, r1, [sp]
1a004d5c:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
1a004d60:	f7fc fff2 	bl	1a001d48 <__aeabi_ddiv>
1a004d64:	e9cd 0100 	strd	r0, r1, [sp]
1a004d68:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1a004d6a:	b153      	cbz	r3, 1a004d82 <_dtoa_r+0x302>
1a004d6c:	e9dd 4500 	ldrd	r4, r5, [sp]
1a004d70:	2200      	movs	r2, #0
1a004d72:	4b98      	ldr	r3, [pc, #608]	; (1a004fd4 <_dtoa_r+0x554>)
1a004d74:	4620      	mov	r0, r4
1a004d76:	4629      	mov	r1, r5
1a004d78:	f7fd f92e 	bl	1a001fd8 <__aeabi_dcmplt>
1a004d7c:	2800      	cmp	r0, #0
1a004d7e:	f040 8521 	bne.w	1a0057c4 <_dtoa_r+0xd44>
1a004d82:	4630      	mov	r0, r6
1a004d84:	f7fc fe4c 	bl	1a001a20 <__aeabi_i2d>
1a004d88:	e9dd 2300 	ldrd	r2, r3, [sp]
1a004d8c:	f7fc feb2 	bl	1a001af4 <__aeabi_dmul>
1a004d90:	4b91      	ldr	r3, [pc, #580]	; (1a004fd8 <_dtoa_r+0x558>)
1a004d92:	2200      	movs	r2, #0
1a004d94:	f7fc fcf8 	bl	1a001788 <__adddf3>
1a004d98:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a004d9a:	4604      	mov	r4, r0
1a004d9c:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
1a004da0:	2b00      	cmp	r3, #0
1a004da2:	f000 83f9 	beq.w	1a005598 <_dtoa_r+0xb18>
1a004da6:	9b06      	ldr	r3, [sp, #24]
1a004da8:	9312      	str	r3, [sp, #72]	; 0x48
1a004daa:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a004dac:	9310      	str	r3, [sp, #64]	; 0x40
1a004dae:	e9dd 6700 	ldrd	r6, r7, [sp]
1a004db2:	4639      	mov	r1, r7
1a004db4:	4630      	mov	r0, r6
1a004db6:	f7fd f94d 	bl	1a002054 <__aeabi_d2iz>
1a004dba:	9000      	str	r0, [sp, #0]
1a004dbc:	f7fc fe30 	bl	1a001a20 <__aeabi_i2d>
1a004dc0:	4602      	mov	r2, r0
1a004dc2:	460b      	mov	r3, r1
1a004dc4:	4630      	mov	r0, r6
1a004dc6:	4639      	mov	r1, r7
1a004dc8:	f7fc fcdc 	bl	1a001784 <__aeabi_dsub>
1a004dcc:	4b7f      	ldr	r3, [pc, #508]	; (1a004fcc <_dtoa_r+0x54c>)
1a004dce:	9a00      	ldr	r2, [sp, #0]
1a004dd0:	460f      	mov	r7, r1
1a004dd2:	9910      	ldr	r1, [sp, #64]	; 0x40
1a004dd4:	4606      	mov	r6, r0
1a004dd6:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
1a004dda:	980b      	ldr	r0, [sp, #44]	; 0x2c
1a004ddc:	9903      	ldr	r1, [sp, #12]
1a004dde:	3230      	adds	r2, #48	; 0x30
1a004de0:	e9cd 4500 	strd	r4, r5, [sp]
1a004de4:	b2d5      	uxtb	r5, r2
1a004de6:	1c4c      	adds	r4, r1, #1
1a004de8:	e953 2302 	ldrd	r2, r3, [r3, #-8]
1a004dec:	2800      	cmp	r0, #0
1a004dee:	f000 848d 	beq.w	1a00570c <_dtoa_r+0xc8c>
1a004df2:	2000      	movs	r0, #0
1a004df4:	4979      	ldr	r1, [pc, #484]	; (1a004fdc <_dtoa_r+0x55c>)
1a004df6:	f7fc ffa7 	bl	1a001d48 <__aeabi_ddiv>
1a004dfa:	e9dd 2300 	ldrd	r2, r3, [sp]
1a004dfe:	f7fc fcc1 	bl	1a001784 <__aeabi_dsub>
1a004e02:	9b03      	ldr	r3, [sp, #12]
1a004e04:	4632      	mov	r2, r6
1a004e06:	701d      	strb	r5, [r3, #0]
1a004e08:	463b      	mov	r3, r7
1a004e0a:	e9cd 0100 	strd	r0, r1, [sp]
1a004e0e:	f7fd f901 	bl	1a002014 <__aeabi_dcmpgt>
1a004e12:	2800      	cmp	r0, #0
1a004e14:	f040 84ca 	bne.w	1a0057ac <_dtoa_r+0xd2c>
1a004e18:	4632      	mov	r2, r6
1a004e1a:	463b      	mov	r3, r7
1a004e1c:	2000      	movs	r0, #0
1a004e1e:	496d      	ldr	r1, [pc, #436]	; (1a004fd4 <_dtoa_r+0x554>)
1a004e20:	f7fc fcb0 	bl	1a001784 <__aeabi_dsub>
1a004e24:	4602      	mov	r2, r0
1a004e26:	460b      	mov	r3, r1
1a004e28:	e9dd 0100 	ldrd	r0, r1, [sp]
1a004e2c:	f7fd f8f2 	bl	1a002014 <__aeabi_dcmpgt>
1a004e30:	2800      	cmp	r0, #0
1a004e32:	f040 8526 	bne.w	1a005882 <_dtoa_r+0xe02>
1a004e36:	9b10      	ldr	r3, [sp, #64]	; 0x40
1a004e38:	2b01      	cmp	r3, #1
1a004e3a:	d062      	beq.n	1a004f02 <_dtoa_r+0x482>
1a004e3c:	9a03      	ldr	r2, [sp, #12]
1a004e3e:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
1a004e42:	4413      	add	r3, r2
1a004e44:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
1a004e48:	e9dd 8900 	ldrd	r8, r9, [sp]
1a004e4c:	f8cd b000 	str.w	fp, [sp]
1a004e50:	46d3      	mov	fp, sl
1a004e52:	469a      	mov	sl, r3
1a004e54:	e00c      	b.n	1a004e70 <_dtoa_r+0x3f0>
1a004e56:	2000      	movs	r0, #0
1a004e58:	495e      	ldr	r1, [pc, #376]	; (1a004fd4 <_dtoa_r+0x554>)
1a004e5a:	f7fc fc93 	bl	1a001784 <__aeabi_dsub>
1a004e5e:	4642      	mov	r2, r8
1a004e60:	464b      	mov	r3, r9
1a004e62:	f7fd f8b9 	bl	1a001fd8 <__aeabi_dcmplt>
1a004e66:	2800      	cmp	r0, #0
1a004e68:	f040 84eb 	bne.w	1a005842 <_dtoa_r+0xdc2>
1a004e6c:	45a2      	cmp	sl, r4
1a004e6e:	d041      	beq.n	1a004ef4 <_dtoa_r+0x474>
1a004e70:	4640      	mov	r0, r8
1a004e72:	4649      	mov	r1, r9
1a004e74:	2200      	movs	r2, #0
1a004e76:	4b5a      	ldr	r3, [pc, #360]	; (1a004fe0 <_dtoa_r+0x560>)
1a004e78:	f7fc fe3c 	bl	1a001af4 <__aeabi_dmul>
1a004e7c:	2200      	movs	r2, #0
1a004e7e:	4b58      	ldr	r3, [pc, #352]	; (1a004fe0 <_dtoa_r+0x560>)
1a004e80:	4680      	mov	r8, r0
1a004e82:	4689      	mov	r9, r1
1a004e84:	4630      	mov	r0, r6
1a004e86:	4639      	mov	r1, r7
1a004e88:	f7fc fe34 	bl	1a001af4 <__aeabi_dmul>
1a004e8c:	460f      	mov	r7, r1
1a004e8e:	4606      	mov	r6, r0
1a004e90:	f7fd f8e0 	bl	1a002054 <__aeabi_d2iz>
1a004e94:	4605      	mov	r5, r0
1a004e96:	f7fc fdc3 	bl	1a001a20 <__aeabi_i2d>
1a004e9a:	4602      	mov	r2, r0
1a004e9c:	460b      	mov	r3, r1
1a004e9e:	4630      	mov	r0, r6
1a004ea0:	4639      	mov	r1, r7
1a004ea2:	f7fc fc6f 	bl	1a001784 <__aeabi_dsub>
1a004ea6:	3530      	adds	r5, #48	; 0x30
1a004ea8:	b2ed      	uxtb	r5, r5
1a004eaa:	4642      	mov	r2, r8
1a004eac:	464b      	mov	r3, r9
1a004eae:	f804 5b01 	strb.w	r5, [r4], #1
1a004eb2:	4606      	mov	r6, r0
1a004eb4:	460f      	mov	r7, r1
1a004eb6:	f7fd f88f 	bl	1a001fd8 <__aeabi_dcmplt>
1a004eba:	4632      	mov	r2, r6
1a004ebc:	463b      	mov	r3, r7
1a004ebe:	2800      	cmp	r0, #0
1a004ec0:	d0c9      	beq.n	1a004e56 <_dtoa_r+0x3d6>
1a004ec2:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a004ec4:	46da      	mov	sl, fp
1a004ec6:	3301      	adds	r3, #1
1a004ec8:	f8dd b000 	ldr.w	fp, [sp]
1a004ecc:	9306      	str	r3, [sp, #24]
1a004ece:	4659      	mov	r1, fp
1a004ed0:	4650      	mov	r0, sl
1a004ed2:	f000 fde3 	bl	1a005a9c <_Bfree>
1a004ed6:	2300      	movs	r3, #0
1a004ed8:	7023      	strb	r3, [r4, #0]
1a004eda:	9b07      	ldr	r3, [sp, #28]
1a004edc:	461a      	mov	r2, r3
1a004ede:	9b06      	ldr	r3, [sp, #24]
1a004ee0:	6013      	str	r3, [r2, #0]
1a004ee2:	9b21      	ldr	r3, [sp, #132]	; 0x84
1a004ee4:	2b00      	cmp	r3, #0
1a004ee6:	f43f ae09 	beq.w	1a004afc <_dtoa_r+0x7c>
1a004eea:	9803      	ldr	r0, [sp, #12]
1a004eec:	601c      	str	r4, [r3, #0]
1a004eee:	b017      	add	sp, #92	; 0x5c
1a004ef0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a004ef4:	46da      	mov	sl, fp
1a004ef6:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
1a004efa:	f8dd 804c 	ldr.w	r8, [sp, #76]	; 0x4c
1a004efe:	f8dd b000 	ldr.w	fp, [sp]
1a004f02:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
1a004f06:	e9cd 3400 	strd	r3, r4, [sp]
1a004f0a:	9b15      	ldr	r3, [sp, #84]	; 0x54
1a004f0c:	2b00      	cmp	r3, #0
1a004f0e:	f2c0 80c9 	blt.w	1a0050a4 <_dtoa_r+0x624>
1a004f12:	9a06      	ldr	r2, [sp, #24]
1a004f14:	2a0e      	cmp	r2, #14
1a004f16:	f300 80c5 	bgt.w	1a0050a4 <_dtoa_r+0x624>
1a004f1a:	4b2c      	ldr	r3, [pc, #176]	; (1a004fcc <_dtoa_r+0x54c>)
1a004f1c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
1a004f20:	e9d3 8900 	ldrd	r8, r9, [r3]
1a004f24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a004f26:	2b00      	cmp	r3, #0
1a004f28:	da17      	bge.n	1a004f5a <_dtoa_r+0x4da>
1a004f2a:	9f09      	ldr	r7, [sp, #36]	; 0x24
1a004f2c:	2f00      	cmp	r7, #0
1a004f2e:	dc14      	bgt.n	1a004f5a <_dtoa_r+0x4da>
1a004f30:	f040 834b 	bne.w	1a0055ca <_dtoa_r+0xb4a>
1a004f34:	2200      	movs	r2, #0
1a004f36:	4b2b      	ldr	r3, [pc, #172]	; (1a004fe4 <_dtoa_r+0x564>)
1a004f38:	4640      	mov	r0, r8
1a004f3a:	4649      	mov	r1, r9
1a004f3c:	f7fc fdda 	bl	1a001af4 <__aeabi_dmul>
1a004f40:	e9dd 2300 	ldrd	r2, r3, [sp]
1a004f44:	f7fd f85c 	bl	1a002000 <__aeabi_dcmpge>
1a004f48:	2800      	cmp	r0, #0
1a004f4a:	f000 83be 	beq.w	1a0056ca <_dtoa_r+0xc4a>
1a004f4e:	9f09      	ldr	r7, [sp, #36]	; 0x24
1a004f50:	463d      	mov	r5, r7
1a004f52:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a004f54:	9c03      	ldr	r4, [sp, #12]
1a004f56:	43db      	mvns	r3, r3
1a004f58:	e260      	b.n	1a00541c <_dtoa_r+0x99c>
1a004f5a:	e9dd 4500 	ldrd	r4, r5, [sp]
1a004f5e:	4642      	mov	r2, r8
1a004f60:	464b      	mov	r3, r9
1a004f62:	4620      	mov	r0, r4
1a004f64:	4629      	mov	r1, r5
1a004f66:	f7fc feef 	bl	1a001d48 <__aeabi_ddiv>
1a004f6a:	f7fd f873 	bl	1a002054 <__aeabi_d2iz>
1a004f6e:	9000      	str	r0, [sp, #0]
1a004f70:	f7fc fd56 	bl	1a001a20 <__aeabi_i2d>
1a004f74:	4642      	mov	r2, r8
1a004f76:	464b      	mov	r3, r9
1a004f78:	f7fc fdbc 	bl	1a001af4 <__aeabi_dmul>
1a004f7c:	4602      	mov	r2, r0
1a004f7e:	460b      	mov	r3, r1
1a004f80:	4620      	mov	r0, r4
1a004f82:	4629      	mov	r1, r5
1a004f84:	f7fc fbfe 	bl	1a001784 <__aeabi_dsub>
1a004f88:	9b00      	ldr	r3, [sp, #0]
1a004f8a:	9c03      	ldr	r4, [sp, #12]
1a004f8c:	9a06      	ldr	r2, [sp, #24]
1a004f8e:	3330      	adds	r3, #48	; 0x30
1a004f90:	f804 3b01 	strb.w	r3, [r4], #1
1a004f94:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a004f96:	3201      	adds	r2, #1
1a004f98:	2b01      	cmp	r3, #1
1a004f9a:	4606      	mov	r6, r0
1a004f9c:	460f      	mov	r7, r1
1a004f9e:	9206      	str	r2, [sp, #24]
1a004fa0:	d054      	beq.n	1a00504c <_dtoa_r+0x5cc>
1a004fa2:	2200      	movs	r2, #0
1a004fa4:	4b0e      	ldr	r3, [pc, #56]	; (1a004fe0 <_dtoa_r+0x560>)
1a004fa6:	f7fc fda5 	bl	1a001af4 <__aeabi_dmul>
1a004faa:	2200      	movs	r2, #0
1a004fac:	2300      	movs	r3, #0
1a004fae:	4606      	mov	r6, r0
1a004fb0:	460f      	mov	r7, r1
1a004fb2:	f7fd f807 	bl	1a001fc4 <__aeabi_dcmpeq>
1a004fb6:	2800      	cmp	r0, #0
1a004fb8:	d189      	bne.n	1a004ece <_dtoa_r+0x44e>
1a004fba:	f8cd b000 	str.w	fp, [sp]
1a004fbe:	2501      	movs	r5, #1
1a004fc0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
1a004fc4:	f8cd a008 	str.w	sl, [sp, #8]
1a004fc8:	e019      	b.n	1a004ffe <_dtoa_r+0x57e>
1a004fca:	bf00      	nop
1a004fcc:	1a006aa8 	.word	0x1a006aa8
1a004fd0:	1a006a80 	.word	0x1a006a80
1a004fd4:	3ff00000 	.word	0x3ff00000
1a004fd8:	401c0000 	.word	0x401c0000
1a004fdc:	3fe00000 	.word	0x3fe00000
1a004fe0:	40240000 	.word	0x40240000
1a004fe4:	40140000 	.word	0x40140000
1a004fe8:	f7fc fd84 	bl	1a001af4 <__aeabi_dmul>
1a004fec:	2200      	movs	r2, #0
1a004fee:	2300      	movs	r3, #0
1a004ff0:	4606      	mov	r6, r0
1a004ff2:	460f      	mov	r7, r1
1a004ff4:	f7fc ffe6 	bl	1a001fc4 <__aeabi_dcmpeq>
1a004ff8:	2800      	cmp	r0, #0
1a004ffa:	f040 835c 	bne.w	1a0056b6 <_dtoa_r+0xc36>
1a004ffe:	4642      	mov	r2, r8
1a005000:	464b      	mov	r3, r9
1a005002:	4630      	mov	r0, r6
1a005004:	4639      	mov	r1, r7
1a005006:	f7fc fe9f 	bl	1a001d48 <__aeabi_ddiv>
1a00500a:	f7fd f823 	bl	1a002054 <__aeabi_d2iz>
1a00500e:	4682      	mov	sl, r0
1a005010:	f7fc fd06 	bl	1a001a20 <__aeabi_i2d>
1a005014:	4642      	mov	r2, r8
1a005016:	464b      	mov	r3, r9
1a005018:	f7fc fd6c 	bl	1a001af4 <__aeabi_dmul>
1a00501c:	4602      	mov	r2, r0
1a00501e:	460b      	mov	r3, r1
1a005020:	4630      	mov	r0, r6
1a005022:	4639      	mov	r1, r7
1a005024:	f7fc fbae 	bl	1a001784 <__aeabi_dsub>
1a005028:	3501      	adds	r5, #1
1a00502a:	f10a 0c30 	add.w	ip, sl, #48	; 0x30
1a00502e:	45ab      	cmp	fp, r5
1a005030:	4606      	mov	r6, r0
1a005032:	460f      	mov	r7, r1
1a005034:	f04f 0200 	mov.w	r2, #0
1a005038:	4ba7      	ldr	r3, [pc, #668]	; (1a0052d8 <_dtoa_r+0x858>)
1a00503a:	f804 cb01 	strb.w	ip, [r4], #1
1a00503e:	d1d3      	bne.n	1a004fe8 <_dtoa_r+0x568>
1a005040:	f8dd b000 	ldr.w	fp, [sp]
1a005044:	f8cd a000 	str.w	sl, [sp]
1a005048:	f8dd a008 	ldr.w	sl, [sp, #8]
1a00504c:	4632      	mov	r2, r6
1a00504e:	463b      	mov	r3, r7
1a005050:	4630      	mov	r0, r6
1a005052:	4639      	mov	r1, r7
1a005054:	f7fc fb98 	bl	1a001788 <__adddf3>
1a005058:	4642      	mov	r2, r8
1a00505a:	464b      	mov	r3, r9
1a00505c:	4606      	mov	r6, r0
1a00505e:	460f      	mov	r7, r1
1a005060:	f7fc ffd8 	bl	1a002014 <__aeabi_dcmpgt>
1a005064:	b960      	cbnz	r0, 1a005080 <_dtoa_r+0x600>
1a005066:	4642      	mov	r2, r8
1a005068:	464b      	mov	r3, r9
1a00506a:	4630      	mov	r0, r6
1a00506c:	4639      	mov	r1, r7
1a00506e:	f7fc ffa9 	bl	1a001fc4 <__aeabi_dcmpeq>
1a005072:	2800      	cmp	r0, #0
1a005074:	f43f af2b 	beq.w	1a004ece <_dtoa_r+0x44e>
1a005078:	9b00      	ldr	r3, [sp, #0]
1a00507a:	07db      	lsls	r3, r3, #31
1a00507c:	f57f af27 	bpl.w	1a004ece <_dtoa_r+0x44e>
1a005080:	f814 5c01 	ldrb.w	r5, [r4, #-1]
1a005084:	9a03      	ldr	r2, [sp, #12]
1a005086:	1e63      	subs	r3, r4, #1
1a005088:	e004      	b.n	1a005094 <_dtoa_r+0x614>
1a00508a:	429a      	cmp	r2, r3
1a00508c:	f000 83c0 	beq.w	1a005810 <_dtoa_r+0xd90>
1a005090:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
1a005094:	2d39      	cmp	r5, #57	; 0x39
1a005096:	f103 0401 	add.w	r4, r3, #1
1a00509a:	d0f6      	beq.n	1a00508a <_dtoa_r+0x60a>
1a00509c:	1c6a      	adds	r2, r5, #1
1a00509e:	b2d2      	uxtb	r2, r2
1a0050a0:	701a      	strb	r2, [r3, #0]
1a0050a2:	e714      	b.n	1a004ece <_dtoa_r+0x44e>
1a0050a4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
1a0050a6:	2a00      	cmp	r2, #0
1a0050a8:	d03c      	beq.n	1a005124 <_dtoa_r+0x6a4>
1a0050aa:	9a02      	ldr	r2, [sp, #8]
1a0050ac:	2a01      	cmp	r2, #1
1a0050ae:	f340 8258 	ble.w	1a005562 <_dtoa_r+0xae2>
1a0050b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a0050b4:	1e5e      	subs	r6, r3, #1
1a0050b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1a0050b8:	42b3      	cmp	r3, r6
1a0050ba:	f280 8234 	bge.w	1a005526 <_dtoa_r+0xaa6>
1a0050be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1a0050c0:	960c      	str	r6, [sp, #48]	; 0x30
1a0050c2:	1af3      	subs	r3, r6, r3
1a0050c4:	4499      	add	r9, r3
1a0050c6:	2600      	movs	r6, #0
1a0050c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a0050ca:	2b00      	cmp	r3, #0
1a0050cc:	f2c0 82f8 	blt.w	1a0056c0 <_dtoa_r+0xc40>
1a0050d0:	9a08      	ldr	r2, [sp, #32]
1a0050d2:	4614      	mov	r4, r2
1a0050d4:	441a      	add	r2, r3
1a0050d6:	4498      	add	r8, r3
1a0050d8:	9208      	str	r2, [sp, #32]
1a0050da:	2101      	movs	r1, #1
1a0050dc:	4650      	mov	r0, sl
1a0050de:	f000 fd7d 	bl	1a005bdc <__i2b>
1a0050e2:	4605      	mov	r5, r0
1a0050e4:	e021      	b.n	1a00512a <_dtoa_r+0x6aa>
1a0050e6:	2301      	movs	r3, #1
1a0050e8:	f1b8 0f00 	cmp.w	r8, #0
1a0050ec:	930d      	str	r3, [sp, #52]	; 0x34
1a0050ee:	f6bf ad77 	bge.w	1a004be0 <_dtoa_r+0x160>
1a0050f2:	f1c4 0301 	rsb	r3, r4, #1
1a0050f6:	9308      	str	r3, [sp, #32]
1a0050f8:	f04f 0800 	mov.w	r8, #0
1a0050fc:	e572      	b.n	1a004be4 <_dtoa_r+0x164>
1a0050fe:	4648      	mov	r0, r9
1a005100:	f7fc fc8e 	bl	1a001a20 <__aeabi_i2d>
1a005104:	4632      	mov	r2, r6
1a005106:	463b      	mov	r3, r7
1a005108:	f7fc ff5c 	bl	1a001fc4 <__aeabi_dcmpeq>
1a00510c:	2800      	cmp	r0, #0
1a00510e:	f47f ad4d 	bne.w	1a004bac <_dtoa_r+0x12c>
1a005112:	f109 39ff 	add.w	r9, r9, #4294967295
1a005116:	e549      	b.n	1a004bac <_dtoa_r+0x12c>
1a005118:	4b70      	ldr	r3, [pc, #448]	; (1a0052dc <_dtoa_r+0x85c>)
1a00511a:	9303      	str	r3, [sp, #12]
1a00511c:	9803      	ldr	r0, [sp, #12]
1a00511e:	b017      	add	sp, #92	; 0x5c
1a005120:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a005124:	9e0c      	ldr	r6, [sp, #48]	; 0x30
1a005126:	9c08      	ldr	r4, [sp, #32]
1a005128:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
1a00512a:	2c00      	cmp	r4, #0
1a00512c:	dd0c      	ble.n	1a005148 <_dtoa_r+0x6c8>
1a00512e:	f1b8 0f00 	cmp.w	r8, #0
1a005132:	dd09      	ble.n	1a005148 <_dtoa_r+0x6c8>
1a005134:	4544      	cmp	r4, r8
1a005136:	9a08      	ldr	r2, [sp, #32]
1a005138:	4623      	mov	r3, r4
1a00513a:	bfa8      	it	ge
1a00513c:	4643      	movge	r3, r8
1a00513e:	1ad2      	subs	r2, r2, r3
1a005140:	9208      	str	r2, [sp, #32]
1a005142:	1ae4      	subs	r4, r4, r3
1a005144:	eba8 0803 	sub.w	r8, r8, r3
1a005148:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1a00514a:	b1d3      	cbz	r3, 1a005182 <_dtoa_r+0x702>
1a00514c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1a00514e:	2b00      	cmp	r3, #0
1a005150:	f000 8189 	beq.w	1a005466 <_dtoa_r+0x9e6>
1a005154:	2e00      	cmp	r6, #0
1a005156:	dd10      	ble.n	1a00517a <_dtoa_r+0x6fa>
1a005158:	4629      	mov	r1, r5
1a00515a:	4632      	mov	r2, r6
1a00515c:	4650      	mov	r0, sl
1a00515e:	f000 fddf 	bl	1a005d20 <__pow5mult>
1a005162:	465a      	mov	r2, fp
1a005164:	4601      	mov	r1, r0
1a005166:	4605      	mov	r5, r0
1a005168:	4650      	mov	r0, sl
1a00516a:	f000 fd41 	bl	1a005bf0 <__multiply>
1a00516e:	4659      	mov	r1, fp
1a005170:	4607      	mov	r7, r0
1a005172:	4650      	mov	r0, sl
1a005174:	f000 fc92 	bl	1a005a9c <_Bfree>
1a005178:	46bb      	mov	fp, r7
1a00517a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1a00517c:	1b9a      	subs	r2, r3, r6
1a00517e:	f040 8173 	bne.w	1a005468 <_dtoa_r+0x9e8>
1a005182:	2101      	movs	r1, #1
1a005184:	4650      	mov	r0, sl
1a005186:	f000 fd29 	bl	1a005bdc <__i2b>
1a00518a:	f1b9 0f00 	cmp.w	r9, #0
1a00518e:	4607      	mov	r7, r0
1a005190:	f300 808e 	bgt.w	1a0052b0 <_dtoa_r+0x830>
1a005194:	9b02      	ldr	r3, [sp, #8]
1a005196:	2b01      	cmp	r3, #1
1a005198:	f340 8171 	ble.w	1a00547e <_dtoa_r+0x9fe>
1a00519c:	2600      	movs	r6, #0
1a00519e:	2001      	movs	r0, #1
1a0051a0:	f1b9 0f00 	cmp.w	r9, #0
1a0051a4:	f040 808f 	bne.w	1a0052c6 <_dtoa_r+0x846>
1a0051a8:	4440      	add	r0, r8
1a0051aa:	f010 001f 	ands.w	r0, r0, #31
1a0051ae:	d075      	beq.n	1a00529c <_dtoa_r+0x81c>
1a0051b0:	f1c0 0320 	rsb	r3, r0, #32
1a0051b4:	2b04      	cmp	r3, #4
1a0051b6:	f340 836d 	ble.w	1a005894 <_dtoa_r+0xe14>
1a0051ba:	f1c0 001c 	rsb	r0, r0, #28
1a0051be:	9b08      	ldr	r3, [sp, #32]
1a0051c0:	4403      	add	r3, r0
1a0051c2:	9308      	str	r3, [sp, #32]
1a0051c4:	4404      	add	r4, r0
1a0051c6:	4480      	add	r8, r0
1a0051c8:	9b08      	ldr	r3, [sp, #32]
1a0051ca:	2b00      	cmp	r3, #0
1a0051cc:	dd05      	ble.n	1a0051da <_dtoa_r+0x75a>
1a0051ce:	4659      	mov	r1, fp
1a0051d0:	461a      	mov	r2, r3
1a0051d2:	4650      	mov	r0, sl
1a0051d4:	f000 fdf4 	bl	1a005dc0 <__lshift>
1a0051d8:	4683      	mov	fp, r0
1a0051da:	f1b8 0f00 	cmp.w	r8, #0
1a0051de:	dd05      	ble.n	1a0051ec <_dtoa_r+0x76c>
1a0051e0:	4639      	mov	r1, r7
1a0051e2:	4642      	mov	r2, r8
1a0051e4:	4650      	mov	r0, sl
1a0051e6:	f000 fdeb 	bl	1a005dc0 <__lshift>
1a0051ea:	4607      	mov	r7, r0
1a0051ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1a0051ee:	2b00      	cmp	r3, #0
1a0051f0:	f040 811e 	bne.w	1a005430 <_dtoa_r+0x9b0>
1a0051f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a0051f6:	2b00      	cmp	r3, #0
1a0051f8:	f340 80f5 	ble.w	1a0053e6 <_dtoa_r+0x966>
1a0051fc:	9b06      	ldr	r3, [sp, #24]
1a0051fe:	3301      	adds	r3, #1
1a005200:	9306      	str	r3, [sp, #24]
1a005202:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1a005204:	2b00      	cmp	r3, #0
1a005206:	d177      	bne.n	1a0052f8 <_dtoa_r+0x878>
1a005208:	9c03      	ldr	r4, [sp, #12]
1a00520a:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
1a00520e:	2601      	movs	r6, #1
1a005210:	e003      	b.n	1a00521a <_dtoa_r+0x79a>
1a005212:	f000 fc4d 	bl	1a005ab0 <__multadd>
1a005216:	3601      	adds	r6, #1
1a005218:	4683      	mov	fp, r0
1a00521a:	4639      	mov	r1, r7
1a00521c:	4658      	mov	r0, fp
1a00521e:	f7ff fb9d 	bl	1a00495c <quorem>
1a005222:	4546      	cmp	r6, r8
1a005224:	f100 0930 	add.w	r9, r0, #48	; 0x30
1a005228:	f804 9b01 	strb.w	r9, [r4], #1
1a00522c:	f04f 0300 	mov.w	r3, #0
1a005230:	f04f 020a 	mov.w	r2, #10
1a005234:	4659      	mov	r1, fp
1a005236:	4650      	mov	r0, sl
1a005238:	dbeb      	blt.n	1a005212 <_dtoa_r+0x792>
1a00523a:	2300      	movs	r3, #0
1a00523c:	9300      	str	r3, [sp, #0]
1a00523e:	4659      	mov	r1, fp
1a005240:	2201      	movs	r2, #1
1a005242:	4650      	mov	r0, sl
1a005244:	f000 fdbc 	bl	1a005dc0 <__lshift>
1a005248:	4639      	mov	r1, r7
1a00524a:	4683      	mov	fp, r0
1a00524c:	f000 fe12 	bl	1a005e74 <__mcmp>
1a005250:	2800      	cmp	r0, #0
1a005252:	f814 2c01 	ldrb.w	r2, [r4, #-1]
1a005256:	f340 816f 	ble.w	1a005538 <_dtoa_r+0xab8>
1a00525a:	1e63      	subs	r3, r4, #1
1a00525c:	9903      	ldr	r1, [sp, #12]
1a00525e:	e004      	b.n	1a00526a <_dtoa_r+0x7ea>
1a005260:	4299      	cmp	r1, r3
1a005262:	f000 8177 	beq.w	1a005554 <_dtoa_r+0xad4>
1a005266:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
1a00526a:	2a39      	cmp	r2, #57	; 0x39
1a00526c:	f103 0401 	add.w	r4, r3, #1
1a005270:	d0f6      	beq.n	1a005260 <_dtoa_r+0x7e0>
1a005272:	3201      	adds	r2, #1
1a005274:	701a      	strb	r2, [r3, #0]
1a005276:	4639      	mov	r1, r7
1a005278:	4650      	mov	r0, sl
1a00527a:	f000 fc0f 	bl	1a005a9c <_Bfree>
1a00527e:	2d00      	cmp	r5, #0
1a005280:	f43f ae25 	beq.w	1a004ece <_dtoa_r+0x44e>
1a005284:	9900      	ldr	r1, [sp, #0]
1a005286:	b121      	cbz	r1, 1a005292 <_dtoa_r+0x812>
1a005288:	42a9      	cmp	r1, r5
1a00528a:	d002      	beq.n	1a005292 <_dtoa_r+0x812>
1a00528c:	4650      	mov	r0, sl
1a00528e:	f000 fc05 	bl	1a005a9c <_Bfree>
1a005292:	4629      	mov	r1, r5
1a005294:	4650      	mov	r0, sl
1a005296:	f000 fc01 	bl	1a005a9c <_Bfree>
1a00529a:	e618      	b.n	1a004ece <_dtoa_r+0x44e>
1a00529c:	201c      	movs	r0, #28
1a00529e:	e78e      	b.n	1a0051be <_dtoa_r+0x73e>
1a0052a0:	2401      	movs	r4, #1
1a0052a2:	e4b6      	b.n	1a004c12 <_dtoa_r+0x192>
1a0052a4:	f1c3 0620 	rsb	r6, r3, #32
1a0052a8:	9b00      	ldr	r3, [sp, #0]
1a0052aa:	fa03 f006 	lsl.w	r0, r3, r6
1a0052ae:	e447      	b.n	1a004b40 <_dtoa_r+0xc0>
1a0052b0:	4601      	mov	r1, r0
1a0052b2:	464a      	mov	r2, r9
1a0052b4:	4650      	mov	r0, sl
1a0052b6:	f000 fd33 	bl	1a005d20 <__pow5mult>
1a0052ba:	9b02      	ldr	r3, [sp, #8]
1a0052bc:	2b01      	cmp	r3, #1
1a0052be:	4607      	mov	r7, r0
1a0052c0:	f340 81b2 	ble.w	1a005628 <_dtoa_r+0xba8>
1a0052c4:	2600      	movs	r6, #0
1a0052c6:	693b      	ldr	r3, [r7, #16]
1a0052c8:	eb07 0383 	add.w	r3, r7, r3, lsl #2
1a0052cc:	6918      	ldr	r0, [r3, #16]
1a0052ce:	f000 fc35 	bl	1a005b3c <__hi0bits>
1a0052d2:	f1c0 0020 	rsb	r0, r0, #32
1a0052d6:	e767      	b.n	1a0051a8 <_dtoa_r+0x728>
1a0052d8:	40240000 	.word	0x40240000
1a0052dc:	1a006a4c 	.word	0x1a006a4c
1a0052e0:	4629      	mov	r1, r5
1a0052e2:	2300      	movs	r3, #0
1a0052e4:	220a      	movs	r2, #10
1a0052e6:	4650      	mov	r0, sl
1a0052e8:	f000 fbe2 	bl	1a005ab0 <__multadd>
1a0052ec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a0052ee:	2b00      	cmp	r3, #0
1a0052f0:	4605      	mov	r5, r0
1a0052f2:	f340 82c1 	ble.w	1a005878 <_dtoa_r+0xdf8>
1a0052f6:	9309      	str	r3, [sp, #36]	; 0x24
1a0052f8:	2c00      	cmp	r4, #0
1a0052fa:	f300 810d 	bgt.w	1a005518 <_dtoa_r+0xa98>
1a0052fe:	2e00      	cmp	r6, #0
1a005300:	f040 81c5 	bne.w	1a00568e <_dtoa_r+0xc0e>
1a005304:	46a8      	mov	r8, r5
1a005306:	9b00      	ldr	r3, [sp, #0]
1a005308:	9902      	ldr	r1, [sp, #8]
1a00530a:	9e03      	ldr	r6, [sp, #12]
1a00530c:	f003 0201 	and.w	r2, r3, #1
1a005310:	920b      	str	r2, [sp, #44]	; 0x2c
1a005312:	430a      	orrs	r2, r1
1a005314:	920a      	str	r2, [sp, #40]	; 0x28
1a005316:	9a09      	ldr	r2, [sp, #36]	; 0x24
1a005318:	1e73      	subs	r3, r6, #1
1a00531a:	441a      	add	r2, r3
1a00531c:	9209      	str	r2, [sp, #36]	; 0x24
1a00531e:	463c      	mov	r4, r7
1a005320:	4621      	mov	r1, r4
1a005322:	4658      	mov	r0, fp
1a005324:	f7ff fb1a 	bl	1a00495c <quorem>
1a005328:	4629      	mov	r1, r5
1a00532a:	9000      	str	r0, [sp, #0]
1a00532c:	4658      	mov	r0, fp
1a00532e:	f000 fda1 	bl	1a005e74 <__mcmp>
1a005332:	4642      	mov	r2, r8
1a005334:	4607      	mov	r7, r0
1a005336:	4621      	mov	r1, r4
1a005338:	4650      	mov	r0, sl
1a00533a:	f000 fdb7 	bl	1a005eac <__mdiff>
1a00533e:	9b00      	ldr	r3, [sp, #0]
1a005340:	f103 0230 	add.w	r2, r3, #48	; 0x30
1a005344:	68c3      	ldr	r3, [r0, #12]
1a005346:	4681      	mov	r9, r0
1a005348:	2b00      	cmp	r3, #0
1a00534a:	d13e      	bne.n	1a0053ca <_dtoa_r+0x94a>
1a00534c:	4601      	mov	r1, r0
1a00534e:	4658      	mov	r0, fp
1a005350:	9208      	str	r2, [sp, #32]
1a005352:	f000 fd8f 	bl	1a005e74 <__mcmp>
1a005356:	4649      	mov	r1, r9
1a005358:	9004      	str	r0, [sp, #16]
1a00535a:	4650      	mov	r0, sl
1a00535c:	f000 fb9e 	bl	1a005a9c <_Bfree>
1a005360:	9b04      	ldr	r3, [sp, #16]
1a005362:	9a08      	ldr	r2, [sp, #32]
1a005364:	b91b      	cbnz	r3, 1a00536e <_dtoa_r+0x8ee>
1a005366:	990a      	ldr	r1, [sp, #40]	; 0x28
1a005368:	2900      	cmp	r1, #0
1a00536a:	f000 8271 	beq.w	1a005850 <_dtoa_r+0xdd0>
1a00536e:	2f00      	cmp	r7, #0
1a005370:	f106 0901 	add.w	r9, r6, #1
1a005374:	f2c0 816e 	blt.w	1a005654 <_dtoa_r+0xbd4>
1a005378:	9902      	ldr	r1, [sp, #8]
1a00537a:	430f      	orrs	r7, r1
1a00537c:	990b      	ldr	r1, [sp, #44]	; 0x2c
1a00537e:	4339      	orrs	r1, r7
1a005380:	f000 8168 	beq.w	1a005654 <_dtoa_r+0xbd4>
1a005384:	2b00      	cmp	r3, #0
1a005386:	f300 81a2 	bgt.w	1a0056ce <_dtoa_r+0xc4e>
1a00538a:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a00538c:	7032      	strb	r2, [r6, #0]
1a00538e:	42b3      	cmp	r3, r6
1a005390:	f000 81a9 	beq.w	1a0056e6 <_dtoa_r+0xc66>
1a005394:	4659      	mov	r1, fp
1a005396:	2300      	movs	r3, #0
1a005398:	220a      	movs	r2, #10
1a00539a:	4650      	mov	r0, sl
1a00539c:	f000 fb88 	bl	1a005ab0 <__multadd>
1a0053a0:	4545      	cmp	r5, r8
1a0053a2:	4683      	mov	fp, r0
1a0053a4:	4629      	mov	r1, r5
1a0053a6:	f04f 0300 	mov.w	r3, #0
1a0053aa:	f04f 020a 	mov.w	r2, #10
1a0053ae:	4650      	mov	r0, sl
1a0053b0:	d013      	beq.n	1a0053da <_dtoa_r+0x95a>
1a0053b2:	f000 fb7d 	bl	1a005ab0 <__multadd>
1a0053b6:	4641      	mov	r1, r8
1a0053b8:	4605      	mov	r5, r0
1a0053ba:	2300      	movs	r3, #0
1a0053bc:	220a      	movs	r2, #10
1a0053be:	4650      	mov	r0, sl
1a0053c0:	f000 fb76 	bl	1a005ab0 <__multadd>
1a0053c4:	464e      	mov	r6, r9
1a0053c6:	4680      	mov	r8, r0
1a0053c8:	e7aa      	b.n	1a005320 <_dtoa_r+0x8a0>
1a0053ca:	4601      	mov	r1, r0
1a0053cc:	4650      	mov	r0, sl
1a0053ce:	9204      	str	r2, [sp, #16]
1a0053d0:	f000 fb64 	bl	1a005a9c <_Bfree>
1a0053d4:	2301      	movs	r3, #1
1a0053d6:	9a04      	ldr	r2, [sp, #16]
1a0053d8:	e7c9      	b.n	1a00536e <_dtoa_r+0x8ee>
1a0053da:	f000 fb69 	bl	1a005ab0 <__multadd>
1a0053de:	464e      	mov	r6, r9
1a0053e0:	4605      	mov	r5, r0
1a0053e2:	4680      	mov	r8, r0
1a0053e4:	e79c      	b.n	1a005320 <_dtoa_r+0x8a0>
1a0053e6:	9b02      	ldr	r3, [sp, #8]
1a0053e8:	2b02      	cmp	r3, #2
1a0053ea:	f340 8082 	ble.w	1a0054f2 <_dtoa_r+0xa72>
1a0053ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a0053f0:	2b00      	cmp	r3, #0
1a0053f2:	f47f adae 	bne.w	1a004f52 <_dtoa_r+0x4d2>
1a0053f6:	4639      	mov	r1, r7
1a0053f8:	2205      	movs	r2, #5
1a0053fa:	4650      	mov	r0, sl
1a0053fc:	f000 fb58 	bl	1a005ab0 <__multadd>
1a005400:	4601      	mov	r1, r0
1a005402:	4607      	mov	r7, r0
1a005404:	4658      	mov	r0, fp
1a005406:	f000 fd35 	bl	1a005e74 <__mcmp>
1a00540a:	2800      	cmp	r0, #0
1a00540c:	f77f ada1 	ble.w	1a004f52 <_dtoa_r+0x4d2>
1a005410:	9c03      	ldr	r4, [sp, #12]
1a005412:	9b06      	ldr	r3, [sp, #24]
1a005414:	2231      	movs	r2, #49	; 0x31
1a005416:	f804 2b01 	strb.w	r2, [r4], #1
1a00541a:	3301      	adds	r3, #1
1a00541c:	3301      	adds	r3, #1
1a00541e:	4639      	mov	r1, r7
1a005420:	4650      	mov	r0, sl
1a005422:	9306      	str	r3, [sp, #24]
1a005424:	f000 fb3a 	bl	1a005a9c <_Bfree>
1a005428:	2d00      	cmp	r5, #0
1a00542a:	f47f af32 	bne.w	1a005292 <_dtoa_r+0x812>
1a00542e:	e54e      	b.n	1a004ece <_dtoa_r+0x44e>
1a005430:	4639      	mov	r1, r7
1a005432:	4658      	mov	r0, fp
1a005434:	f000 fd1e 	bl	1a005e74 <__mcmp>
1a005438:	2800      	cmp	r0, #0
1a00543a:	f6bf aedb 	bge.w	1a0051f4 <_dtoa_r+0x774>
1a00543e:	4659      	mov	r1, fp
1a005440:	2300      	movs	r3, #0
1a005442:	220a      	movs	r2, #10
1a005444:	4650      	mov	r0, sl
1a005446:	f000 fb33 	bl	1a005ab0 <__multadd>
1a00544a:	9b06      	ldr	r3, [sp, #24]
1a00544c:	f103 38ff 	add.w	r8, r3, #4294967295
1a005450:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1a005452:	4683      	mov	fp, r0
1a005454:	2b00      	cmp	r3, #0
1a005456:	f47f af43 	bne.w	1a0052e0 <_dtoa_r+0x860>
1a00545a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a00545c:	2b00      	cmp	r3, #0
1a00545e:	f340 8202 	ble.w	1a005866 <_dtoa_r+0xde6>
1a005462:	9309      	str	r3, [sp, #36]	; 0x24
1a005464:	e6d0      	b.n	1a005208 <_dtoa_r+0x788>
1a005466:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1a005468:	4659      	mov	r1, fp
1a00546a:	4650      	mov	r0, sl
1a00546c:	f000 fc58 	bl	1a005d20 <__pow5mult>
1a005470:	4683      	mov	fp, r0
1a005472:	e686      	b.n	1a005182 <_dtoa_r+0x702>
1a005474:	4b9f      	ldr	r3, [pc, #636]	; (1a0056f4 <_dtoa_r+0xc74>)
1a005476:	9303      	str	r3, [sp, #12]
1a005478:	3303      	adds	r3, #3
1a00547a:	f7ff bbe5 	b.w	1a004c48 <_dtoa_r+0x1c8>
1a00547e:	e9dd 1200 	ldrd	r1, r2, [sp]
1a005482:	2900      	cmp	r1, #0
1a005484:	f47f ae8a 	bne.w	1a00519c <_dtoa_r+0x71c>
1a005488:	f3c2 0313 	ubfx	r3, r2, #0, #20
1a00548c:	2b00      	cmp	r3, #0
1a00548e:	f000 80d5 	beq.w	1a00563c <_dtoa_r+0xbbc>
1a005492:	9e00      	ldr	r6, [sp, #0]
1a005494:	e683      	b.n	1a00519e <_dtoa_r+0x71e>
1a005496:	2301      	movs	r3, #1
1a005498:	930b      	str	r3, [sp, #44]	; 0x2c
1a00549a:	980a      	ldr	r0, [sp, #40]	; 0x28
1a00549c:	2800      	cmp	r0, #0
1a00549e:	dd46      	ble.n	1a00552e <_dtoa_r+0xaae>
1a0054a0:	900f      	str	r0, [sp, #60]	; 0x3c
1a0054a2:	9009      	str	r0, [sp, #36]	; 0x24
1a0054a4:	2100      	movs	r1, #0
1a0054a6:	2817      	cmp	r0, #23
1a0054a8:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
1a0054ac:	9d09      	ldr	r5, [sp, #36]	; 0x24
1a0054ae:	f77f ac19 	ble.w	1a004ce4 <_dtoa_r+0x264>
1a0054b2:	2201      	movs	r2, #1
1a0054b4:	2304      	movs	r3, #4
1a0054b6:	005b      	lsls	r3, r3, #1
1a0054b8:	f103 0614 	add.w	r6, r3, #20
1a0054bc:	42b0      	cmp	r0, r6
1a0054be:	4611      	mov	r1, r2
1a0054c0:	f102 0201 	add.w	r2, r2, #1
1a0054c4:	d2f7      	bcs.n	1a0054b6 <_dtoa_r+0xa36>
1a0054c6:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
1a0054ca:	e40b      	b.n	1a004ce4 <_dtoa_r+0x264>
1a0054cc:	2301      	movs	r3, #1
1a0054ce:	930b      	str	r3, [sp, #44]	; 0x2c
1a0054d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
1a0054d2:	9a06      	ldr	r2, [sp, #24]
1a0054d4:	4413      	add	r3, r2
1a0054d6:	930f      	str	r3, [sp, #60]	; 0x3c
1a0054d8:	3301      	adds	r3, #1
1a0054da:	2b01      	cmp	r3, #1
1a0054dc:	4618      	mov	r0, r3
1a0054de:	9309      	str	r3, [sp, #36]	; 0x24
1a0054e0:	bfb8      	it	lt
1a0054e2:	2001      	movlt	r0, #1
1a0054e4:	e7de      	b.n	1a0054a4 <_dtoa_r+0xa24>
1a0054e6:	2300      	movs	r3, #0
1a0054e8:	930b      	str	r3, [sp, #44]	; 0x2c
1a0054ea:	e7f1      	b.n	1a0054d0 <_dtoa_r+0xa50>
1a0054ec:	2300      	movs	r3, #0
1a0054ee:	930b      	str	r3, [sp, #44]	; 0x2c
1a0054f0:	e7d3      	b.n	1a00549a <_dtoa_r+0xa1a>
1a0054f2:	9b06      	ldr	r3, [sp, #24]
1a0054f4:	3301      	adds	r3, #1
1a0054f6:	9306      	str	r3, [sp, #24]
1a0054f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
1a0054fa:	2b00      	cmp	r3, #0
1a0054fc:	f47f aefc 	bne.w	1a0052f8 <_dtoa_r+0x878>
1a005500:	4639      	mov	r1, r7
1a005502:	4658      	mov	r0, fp
1a005504:	f7ff fa2a 	bl	1a00495c <quorem>
1a005508:	9c03      	ldr	r4, [sp, #12]
1a00550a:	f100 0930 	add.w	r9, r0, #48	; 0x30
1a00550e:	2300      	movs	r3, #0
1a005510:	f804 9b01 	strb.w	r9, [r4], #1
1a005514:	9300      	str	r3, [sp, #0]
1a005516:	e692      	b.n	1a00523e <_dtoa_r+0x7be>
1a005518:	4629      	mov	r1, r5
1a00551a:	4622      	mov	r2, r4
1a00551c:	4650      	mov	r0, sl
1a00551e:	f000 fc4f 	bl	1a005dc0 <__lshift>
1a005522:	4605      	mov	r5, r0
1a005524:	e6eb      	b.n	1a0052fe <_dtoa_r+0x87e>
1a005526:	1b9e      	subs	r6, r3, r6
1a005528:	e5ce      	b.n	1a0050c8 <_dtoa_r+0x648>
1a00552a:	2602      	movs	r6, #2
1a00552c:	e403      	b.n	1a004d36 <_dtoa_r+0x2b6>
1a00552e:	2501      	movs	r5, #1
1a005530:	e9cd 5509 	strd	r5, r5, [sp, #36]	; 0x24
1a005534:	f7ff bbd2 	b.w	1a004cdc <_dtoa_r+0x25c>
1a005538:	d103      	bne.n	1a005542 <_dtoa_r+0xac2>
1a00553a:	f019 0f01 	tst.w	r9, #1
1a00553e:	f47f ae8c 	bne.w	1a00525a <_dtoa_r+0x7da>
1a005542:	1e63      	subs	r3, r4, #1
1a005544:	e001      	b.n	1a00554a <_dtoa_r+0xaca>
1a005546:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
1a00554a:	2a30      	cmp	r2, #48	; 0x30
1a00554c:	f103 0401 	add.w	r4, r3, #1
1a005550:	d0f9      	beq.n	1a005546 <_dtoa_r+0xac6>
1a005552:	e690      	b.n	1a005276 <_dtoa_r+0x7f6>
1a005554:	9a06      	ldr	r2, [sp, #24]
1a005556:	3201      	adds	r2, #1
1a005558:	9206      	str	r2, [sp, #24]
1a00555a:	9a03      	ldr	r2, [sp, #12]
1a00555c:	2331      	movs	r3, #49	; 0x31
1a00555e:	7013      	strb	r3, [r2, #0]
1a005560:	e689      	b.n	1a005276 <_dtoa_r+0x7f6>
1a005562:	9a0e      	ldr	r2, [sp, #56]	; 0x38
1a005564:	2a00      	cmp	r2, #0
1a005566:	f000 8126 	beq.w	1a0057b6 <_dtoa_r+0xd36>
1a00556a:	f203 4333 	addw	r3, r3, #1075	; 0x433
1a00556e:	9a08      	ldr	r2, [sp, #32]
1a005570:	9e0c      	ldr	r6, [sp, #48]	; 0x30
1a005572:	4614      	mov	r4, r2
1a005574:	441a      	add	r2, r3
1a005576:	4498      	add	r8, r3
1a005578:	9208      	str	r2, [sp, #32]
1a00557a:	e5ae      	b.n	1a0050da <_dtoa_r+0x65a>
1a00557c:	4630      	mov	r0, r6
1a00557e:	f7fc fa4f 	bl	1a001a20 <__aeabi_i2d>
1a005582:	e9dd 2300 	ldrd	r2, r3, [sp]
1a005586:	f7fc fab5 	bl	1a001af4 <__aeabi_dmul>
1a00558a:	2200      	movs	r2, #0
1a00558c:	4b5a      	ldr	r3, [pc, #360]	; (1a0056f8 <_dtoa_r+0xc78>)
1a00558e:	f7fc f8fb 	bl	1a001788 <__adddf3>
1a005592:	4604      	mov	r4, r0
1a005594:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
1a005598:	2200      	movs	r2, #0
1a00559a:	4b58      	ldr	r3, [pc, #352]	; (1a0056fc <_dtoa_r+0xc7c>)
1a00559c:	e9dd 0100 	ldrd	r0, r1, [sp]
1a0055a0:	f7fc f8f0 	bl	1a001784 <__aeabi_dsub>
1a0055a4:	4622      	mov	r2, r4
1a0055a6:	462b      	mov	r3, r5
1a0055a8:	4606      	mov	r6, r0
1a0055aa:	460f      	mov	r7, r1
1a0055ac:	f7fc fd32 	bl	1a002014 <__aeabi_dcmpgt>
1a0055b0:	2800      	cmp	r0, #0
1a0055b2:	f040 8089 	bne.w	1a0056c8 <_dtoa_r+0xc48>
1a0055b6:	4622      	mov	r2, r4
1a0055b8:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
1a0055bc:	4630      	mov	r0, r6
1a0055be:	4639      	mov	r1, r7
1a0055c0:	f7fc fd0a 	bl	1a001fd8 <__aeabi_dcmplt>
1a0055c4:	2800      	cmp	r0, #0
1a0055c6:	f43f ac9c 	beq.w	1a004f02 <_dtoa_r+0x482>
1a0055ca:	2700      	movs	r7, #0
1a0055cc:	463d      	mov	r5, r7
1a0055ce:	e4c0      	b.n	1a004f52 <_dtoa_r+0x4d2>
1a0055d0:	f000 80f5 	beq.w	1a0057be <_dtoa_r+0xd3e>
1a0055d4:	9b06      	ldr	r3, [sp, #24]
1a0055d6:	425c      	negs	r4, r3
1a0055d8:	4b49      	ldr	r3, [pc, #292]	; (1a005700 <_dtoa_r+0xc80>)
1a0055da:	f004 020f 	and.w	r2, r4, #15
1a0055de:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
1a0055e2:	e9d3 2300 	ldrd	r2, r3, [r3]
1a0055e6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1a0055ea:	f7fc fa83 	bl	1a001af4 <__aeabi_dmul>
1a0055ee:	1124      	asrs	r4, r4, #4
1a0055f0:	e9cd 0100 	strd	r0, r1, [sp]
1a0055f4:	f000 80e3 	beq.w	1a0057be <_dtoa_r+0xd3e>
1a0055f8:	4d42      	ldr	r5, [pc, #264]	; (1a005704 <_dtoa_r+0xc84>)
1a0055fa:	2300      	movs	r3, #0
1a0055fc:	2602      	movs	r6, #2
1a0055fe:	07e2      	lsls	r2, r4, #31
1a005600:	d505      	bpl.n	1a00560e <_dtoa_r+0xb8e>
1a005602:	e9d5 2300 	ldrd	r2, r3, [r5]
1a005606:	f7fc fa75 	bl	1a001af4 <__aeabi_dmul>
1a00560a:	3601      	adds	r6, #1
1a00560c:	2301      	movs	r3, #1
1a00560e:	1064      	asrs	r4, r4, #1
1a005610:	f105 0508 	add.w	r5, r5, #8
1a005614:	d1f3      	bne.n	1a0055fe <_dtoa_r+0xb7e>
1a005616:	2b00      	cmp	r3, #0
1a005618:	f43f aba6 	beq.w	1a004d68 <_dtoa_r+0x2e8>
1a00561c:	e9cd 0100 	strd	r0, r1, [sp]
1a005620:	f7ff bba2 	b.w	1a004d68 <_dtoa_r+0x2e8>
1a005624:	900d      	str	r0, [sp, #52]	; 0x34
1a005626:	e564      	b.n	1a0050f2 <_dtoa_r+0x672>
1a005628:	e9dd 1200 	ldrd	r1, r2, [sp]
1a00562c:	2900      	cmp	r1, #0
1a00562e:	f47f ae49 	bne.w	1a0052c4 <_dtoa_r+0x844>
1a005632:	f3c2 0313 	ubfx	r3, r2, #0, #20
1a005636:	2b00      	cmp	r3, #0
1a005638:	f47f ae44 	bne.w	1a0052c4 <_dtoa_r+0x844>
1a00563c:	4e32      	ldr	r6, [pc, #200]	; (1a005708 <_dtoa_r+0xc88>)
1a00563e:	4016      	ands	r6, r2
1a005640:	2e00      	cmp	r6, #0
1a005642:	f43f adac 	beq.w	1a00519e <_dtoa_r+0x71e>
1a005646:	9b08      	ldr	r3, [sp, #32]
1a005648:	3301      	adds	r3, #1
1a00564a:	9308      	str	r3, [sp, #32]
1a00564c:	f108 0801 	add.w	r8, r8, #1
1a005650:	2601      	movs	r6, #1
1a005652:	e5a4      	b.n	1a00519e <_dtoa_r+0x71e>
1a005654:	2b00      	cmp	r3, #0
1a005656:	4627      	mov	r7, r4
1a005658:	464c      	mov	r4, r9
1a00565a:	4691      	mov	r9, r2
1a00565c:	dd12      	ble.n	1a005684 <_dtoa_r+0xc04>
1a00565e:	4659      	mov	r1, fp
1a005660:	2201      	movs	r2, #1
1a005662:	4650      	mov	r0, sl
1a005664:	f000 fbac 	bl	1a005dc0 <__lshift>
1a005668:	4639      	mov	r1, r7
1a00566a:	4683      	mov	fp, r0
1a00566c:	f000 fc02 	bl	1a005e74 <__mcmp>
1a005670:	2800      	cmp	r0, #0
1a005672:	f340 80df 	ble.w	1a005834 <_dtoa_r+0xdb4>
1a005676:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
1a00567a:	f000 80d0 	beq.w	1a00581e <_dtoa_r+0xd9e>
1a00567e:	9b00      	ldr	r3, [sp, #0]
1a005680:	f103 0931 	add.w	r9, r3, #49	; 0x31
1a005684:	9500      	str	r5, [sp, #0]
1a005686:	f886 9000 	strb.w	r9, [r6]
1a00568a:	4645      	mov	r5, r8
1a00568c:	e5f3      	b.n	1a005276 <_dtoa_r+0x7f6>
1a00568e:	6869      	ldr	r1, [r5, #4]
1a005690:	4650      	mov	r0, sl
1a005692:	f000 f9dd 	bl	1a005a50 <_Balloc>
1a005696:	692b      	ldr	r3, [r5, #16]
1a005698:	3302      	adds	r3, #2
1a00569a:	009a      	lsls	r2, r3, #2
1a00569c:	4604      	mov	r4, r0
1a00569e:	f105 010c 	add.w	r1, r5, #12
1a0056a2:	300c      	adds	r0, #12
1a0056a4:	f7fd faa6 	bl	1a002bf4 <memcpy>
1a0056a8:	4621      	mov	r1, r4
1a0056aa:	2201      	movs	r2, #1
1a0056ac:	4650      	mov	r0, sl
1a0056ae:	f000 fb87 	bl	1a005dc0 <__lshift>
1a0056b2:	4680      	mov	r8, r0
1a0056b4:	e627      	b.n	1a005306 <_dtoa_r+0x886>
1a0056b6:	f8dd b000 	ldr.w	fp, [sp]
1a0056ba:	f8dd a008 	ldr.w	sl, [sp, #8]
1a0056be:	e406      	b.n	1a004ece <_dtoa_r+0x44e>
1a0056c0:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
1a0056c4:	1a9c      	subs	r4, r3, r2
1a0056c6:	e508      	b.n	1a0050da <_dtoa_r+0x65a>
1a0056c8:	2700      	movs	r7, #0
1a0056ca:	463d      	mov	r5, r7
1a0056cc:	e6a0      	b.n	1a005410 <_dtoa_r+0x990>
1a0056ce:	2a39      	cmp	r2, #57	; 0x39
1a0056d0:	4627      	mov	r7, r4
1a0056d2:	464c      	mov	r4, r9
1a0056d4:	f000 80a3 	beq.w	1a00581e <_dtoa_r+0xd9e>
1a0056d8:	f102 0901 	add.w	r9, r2, #1
1a0056dc:	9500      	str	r5, [sp, #0]
1a0056de:	f886 9000 	strb.w	r9, [r6]
1a0056e2:	4645      	mov	r5, r8
1a0056e4:	e5c7      	b.n	1a005276 <_dtoa_r+0x7f6>
1a0056e6:	4627      	mov	r7, r4
1a0056e8:	9500      	str	r5, [sp, #0]
1a0056ea:	464c      	mov	r4, r9
1a0056ec:	4645      	mov	r5, r8
1a0056ee:	4691      	mov	r9, r2
1a0056f0:	e5a5      	b.n	1a00523e <_dtoa_r+0x7be>
1a0056f2:	bf00      	nop
1a0056f4:	1a006a70 	.word	0x1a006a70
1a0056f8:	401c0000 	.word	0x401c0000
1a0056fc:	40140000 	.word	0x40140000
1a005700:	1a006aa8 	.word	0x1a006aa8
1a005704:	1a006a80 	.word	0x1a006a80
1a005708:	7ff00000 	.word	0x7ff00000
1a00570c:	e9dd 0100 	ldrd	r0, r1, [sp]
1a005710:	f7fc f9f0 	bl	1a001af4 <__aeabi_dmul>
1a005714:	9b03      	ldr	r3, [sp, #12]
1a005716:	701d      	strb	r5, [r3, #0]
1a005718:	9b10      	ldr	r3, [sp, #64]	; 0x40
1a00571a:	2b01      	cmp	r3, #1
1a00571c:	e9cd 0100 	strd	r0, r1, [sp]
1a005720:	d023      	beq.n	1a00576a <_dtoa_r+0xcea>
1a005722:	9b10      	ldr	r3, [sp, #64]	; 0x40
1a005724:	9a03      	ldr	r2, [sp, #12]
1a005726:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
1a00572a:	4413      	add	r3, r2
1a00572c:	46c1      	mov	r9, r8
1a00572e:	4698      	mov	r8, r3
1a005730:	2200      	movs	r2, #0
1a005732:	4b64      	ldr	r3, [pc, #400]	; (1a0058c4 <_dtoa_r+0xe44>)
1a005734:	4630      	mov	r0, r6
1a005736:	4639      	mov	r1, r7
1a005738:	f7fc f9dc 	bl	1a001af4 <__aeabi_dmul>
1a00573c:	460f      	mov	r7, r1
1a00573e:	4606      	mov	r6, r0
1a005740:	f7fc fc88 	bl	1a002054 <__aeabi_d2iz>
1a005744:	4605      	mov	r5, r0
1a005746:	f7fc f96b 	bl	1a001a20 <__aeabi_i2d>
1a00574a:	3530      	adds	r5, #48	; 0x30
1a00574c:	4602      	mov	r2, r0
1a00574e:	460b      	mov	r3, r1
1a005750:	4630      	mov	r0, r6
1a005752:	4639      	mov	r1, r7
1a005754:	f7fc f816 	bl	1a001784 <__aeabi_dsub>
1a005758:	f804 5b01 	strb.w	r5, [r4], #1
1a00575c:	45a0      	cmp	r8, r4
1a00575e:	4606      	mov	r6, r0
1a005760:	460f      	mov	r7, r1
1a005762:	d1e5      	bne.n	1a005730 <_dtoa_r+0xcb0>
1a005764:	46c8      	mov	r8, r9
1a005766:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
1a00576a:	4b57      	ldr	r3, [pc, #348]	; (1a0058c8 <_dtoa_r+0xe48>)
1a00576c:	2200      	movs	r2, #0
1a00576e:	e9dd 0100 	ldrd	r0, r1, [sp]
1a005772:	f7fc f809 	bl	1a001788 <__adddf3>
1a005776:	4632      	mov	r2, r6
1a005778:	463b      	mov	r3, r7
1a00577a:	f7fc fc2d 	bl	1a001fd8 <__aeabi_dcmplt>
1a00577e:	2800      	cmp	r0, #0
1a005780:	d152      	bne.n	1a005828 <_dtoa_r+0xda8>
1a005782:	e9dd 2300 	ldrd	r2, r3, [sp]
1a005786:	2000      	movs	r0, #0
1a005788:	494f      	ldr	r1, [pc, #316]	; (1a0058c8 <_dtoa_r+0xe48>)
1a00578a:	f7fb fffb 	bl	1a001784 <__aeabi_dsub>
1a00578e:	4632      	mov	r2, r6
1a005790:	463b      	mov	r3, r7
1a005792:	f7fc fc3f 	bl	1a002014 <__aeabi_dcmpgt>
1a005796:	2800      	cmp	r0, #0
1a005798:	f43f abb3 	beq.w	1a004f02 <_dtoa_r+0x482>
1a00579c:	e000      	b.n	1a0057a0 <_dtoa_r+0xd20>
1a00579e:	4614      	mov	r4, r2
1a0057a0:	f814 3c01 	ldrb.w	r3, [r4, #-1]
1a0057a4:	2b30      	cmp	r3, #48	; 0x30
1a0057a6:	f104 32ff 	add.w	r2, r4, #4294967295
1a0057aa:	d0f8      	beq.n	1a00579e <_dtoa_r+0xd1e>
1a0057ac:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a0057ae:	3301      	adds	r3, #1
1a0057b0:	9306      	str	r3, [sp, #24]
1a0057b2:	f7ff bb8c 	b.w	1a004ece <_dtoa_r+0x44e>
1a0057b6:	9b14      	ldr	r3, [sp, #80]	; 0x50
1a0057b8:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
1a0057bc:	e6d7      	b.n	1a00556e <_dtoa_r+0xaee>
1a0057be:	2602      	movs	r6, #2
1a0057c0:	f7ff bad2 	b.w	1a004d68 <_dtoa_r+0x2e8>
1a0057c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
1a0057c6:	2b00      	cmp	r3, #0
1a0057c8:	f43f aed8 	beq.w	1a00557c <_dtoa_r+0xafc>
1a0057cc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
1a0057ce:	2f00      	cmp	r7, #0
1a0057d0:	f77f ab97 	ble.w	1a004f02 <_dtoa_r+0x482>
1a0057d4:	2200      	movs	r2, #0
1a0057d6:	4b3b      	ldr	r3, [pc, #236]	; (1a0058c4 <_dtoa_r+0xe44>)
1a0057d8:	4620      	mov	r0, r4
1a0057da:	4629      	mov	r1, r5
1a0057dc:	f7fc f98a 	bl	1a001af4 <__aeabi_dmul>
1a0057e0:	4604      	mov	r4, r0
1a0057e2:	460d      	mov	r5, r1
1a0057e4:	1c70      	adds	r0, r6, #1
1a0057e6:	e9cd 4500 	strd	r4, r5, [sp]
1a0057ea:	f7fc f919 	bl	1a001a20 <__aeabi_i2d>
1a0057ee:	4622      	mov	r2, r4
1a0057f0:	462b      	mov	r3, r5
1a0057f2:	f7fc f97f 	bl	1a001af4 <__aeabi_dmul>
1a0057f6:	4b35      	ldr	r3, [pc, #212]	; (1a0058cc <_dtoa_r+0xe4c>)
1a0057f8:	2200      	movs	r2, #0
1a0057fa:	f7fb ffc5 	bl	1a001788 <__adddf3>
1a0057fe:	9b06      	ldr	r3, [sp, #24]
1a005800:	9710      	str	r7, [sp, #64]	; 0x40
1a005802:	3b01      	subs	r3, #1
1a005804:	4604      	mov	r4, r0
1a005806:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
1a00580a:	9312      	str	r3, [sp, #72]	; 0x48
1a00580c:	f7ff bacf 	b.w	1a004dae <_dtoa_r+0x32e>
1a005810:	9a06      	ldr	r2, [sp, #24]
1a005812:	3201      	adds	r2, #1
1a005814:	9206      	str	r2, [sp, #24]
1a005816:	2231      	movs	r2, #49	; 0x31
1a005818:	701a      	strb	r2, [r3, #0]
1a00581a:	f7ff bb58 	b.w	1a004ece <_dtoa_r+0x44e>
1a00581e:	2239      	movs	r2, #57	; 0x39
1a005820:	9500      	str	r5, [sp, #0]
1a005822:	7032      	strb	r2, [r6, #0]
1a005824:	4645      	mov	r5, r8
1a005826:	e518      	b.n	1a00525a <_dtoa_r+0x7da>
1a005828:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a00582a:	3301      	adds	r3, #1
1a00582c:	9306      	str	r3, [sp, #24]
1a00582e:	f814 5c01 	ldrb.w	r5, [r4, #-1]
1a005832:	e427      	b.n	1a005084 <_dtoa_r+0x604>
1a005834:	f47f af26 	bne.w	1a005684 <_dtoa_r+0xc04>
1a005838:	f019 0f01 	tst.w	r9, #1
1a00583c:	f47f af1b 	bne.w	1a005676 <_dtoa_r+0xbf6>
1a005840:	e720      	b.n	1a005684 <_dtoa_r+0xc04>
1a005842:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a005844:	3301      	adds	r3, #1
1a005846:	46da      	mov	sl, fp
1a005848:	9306      	str	r3, [sp, #24]
1a00584a:	f8dd b000 	ldr.w	fp, [sp]
1a00584e:	e419      	b.n	1a005084 <_dtoa_r+0x604>
1a005850:	2a39      	cmp	r2, #57	; 0x39
1a005852:	463b      	mov	r3, r7
1a005854:	4691      	mov	r9, r2
1a005856:	4627      	mov	r7, r4
1a005858:	f106 0401 	add.w	r4, r6, #1
1a00585c:	d0df      	beq.n	1a00581e <_dtoa_r+0xd9e>
1a00585e:	2b00      	cmp	r3, #0
1a005860:	f73f af0d 	bgt.w	1a00567e <_dtoa_r+0xbfe>
1a005864:	e70e      	b.n	1a005684 <_dtoa_r+0xc04>
1a005866:	9b02      	ldr	r3, [sp, #8]
1a005868:	2b02      	cmp	r3, #2
1a00586a:	f77f ae49 	ble.w	1a005500 <_dtoa_r+0xa80>
1a00586e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a005870:	9309      	str	r3, [sp, #36]	; 0x24
1a005872:	f8cd 8018 	str.w	r8, [sp, #24]
1a005876:	e5ba      	b.n	1a0053ee <_dtoa_r+0x96e>
1a005878:	9b02      	ldr	r3, [sp, #8]
1a00587a:	2b02      	cmp	r3, #2
1a00587c:	dcf7      	bgt.n	1a00586e <_dtoa_r+0xdee>
1a00587e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
1a005880:	e539      	b.n	1a0052f6 <_dtoa_r+0x876>
1a005882:	9b12      	ldr	r3, [sp, #72]	; 0x48
1a005884:	3301      	adds	r3, #1
1a005886:	9306      	str	r3, [sp, #24]
1a005888:	f7ff bbfc 	b.w	1a005084 <_dtoa_r+0x604>
1a00588c:	4b10      	ldr	r3, [pc, #64]	; (1a0058d0 <_dtoa_r+0xe50>)
1a00588e:	9303      	str	r3, [sp, #12]
1a005890:	f7ff b934 	b.w	1a004afc <_dtoa_r+0x7c>
1a005894:	f43f ac98 	beq.w	1a0051c8 <_dtoa_r+0x748>
1a005898:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
1a00589c:	e48f      	b.n	1a0051be <_dtoa_r+0x73e>
1a00589e:	2400      	movs	r4, #0
1a0058a0:	f8ca 4044 	str.w	r4, [sl, #68]	; 0x44
1a0058a4:	4621      	mov	r1, r4
1a0058a6:	4650      	mov	r0, sl
1a0058a8:	f000 f8d2 	bl	1a005a50 <_Balloc>
1a0058ac:	f04f 33ff 	mov.w	r3, #4294967295
1a0058b0:	e9cd 3409 	strd	r3, r4, [sp, #36]	; 0x24
1a0058b4:	930f      	str	r3, [sp, #60]	; 0x3c
1a0058b6:	2301      	movs	r3, #1
1a0058b8:	9003      	str	r0, [sp, #12]
1a0058ba:	f8ca 0040 	str.w	r0, [sl, #64]	; 0x40
1a0058be:	930b      	str	r3, [sp, #44]	; 0x2c
1a0058c0:	f7ff bb23 	b.w	1a004f0a <_dtoa_r+0x48a>
1a0058c4:	40240000 	.word	0x40240000
1a0058c8:	3fe00000 	.word	0x3fe00000
1a0058cc:	401c0000 	.word	0x401c0000
1a0058d0:	1a006a74 	.word	0x1a006a74

1a0058d4 <_localeconv_r>:
1a0058d4:	4800      	ldr	r0, [pc, #0]	; (1a0058d8 <_localeconv_r+0x4>)
1a0058d6:	4770      	bx	lr
1a0058d8:	10000978 	.word	0x10000978
1a0058dc:	ffffffff 	.word	0xffffffff

1a0058e0 <memchr>:
1a0058e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
1a0058e4:	2a10      	cmp	r2, #16
1a0058e6:	db2b      	blt.n	1a005940 <memchr+0x60>
1a0058e8:	f010 0f07 	tst.w	r0, #7
1a0058ec:	d008      	beq.n	1a005900 <memchr+0x20>
1a0058ee:	f810 3b01 	ldrb.w	r3, [r0], #1
1a0058f2:	3a01      	subs	r2, #1
1a0058f4:	428b      	cmp	r3, r1
1a0058f6:	d02d      	beq.n	1a005954 <memchr+0x74>
1a0058f8:	f010 0f07 	tst.w	r0, #7
1a0058fc:	b342      	cbz	r2, 1a005950 <memchr+0x70>
1a0058fe:	d1f6      	bne.n	1a0058ee <memchr+0xe>
1a005900:	b4f0      	push	{r4, r5, r6, r7}
1a005902:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
1a005906:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
1a00590a:	f022 0407 	bic.w	r4, r2, #7
1a00590e:	f07f 0700 	mvns.w	r7, #0
1a005912:	2300      	movs	r3, #0
1a005914:	e8f0 5602 	ldrd	r5, r6, [r0], #8
1a005918:	3c08      	subs	r4, #8
1a00591a:	ea85 0501 	eor.w	r5, r5, r1
1a00591e:	ea86 0601 	eor.w	r6, r6, r1
1a005922:	fa85 f547 	uadd8	r5, r5, r7
1a005926:	faa3 f587 	sel	r5, r3, r7
1a00592a:	fa86 f647 	uadd8	r6, r6, r7
1a00592e:	faa5 f687 	sel	r6, r5, r7
1a005932:	b98e      	cbnz	r6, 1a005958 <memchr+0x78>
1a005934:	d1ee      	bne.n	1a005914 <memchr+0x34>
1a005936:	bcf0      	pop	{r4, r5, r6, r7}
1a005938:	f001 01ff 	and.w	r1, r1, #255	; 0xff
1a00593c:	f002 0207 	and.w	r2, r2, #7
1a005940:	b132      	cbz	r2, 1a005950 <memchr+0x70>
1a005942:	f810 3b01 	ldrb.w	r3, [r0], #1
1a005946:	3a01      	subs	r2, #1
1a005948:	ea83 0301 	eor.w	r3, r3, r1
1a00594c:	b113      	cbz	r3, 1a005954 <memchr+0x74>
1a00594e:	d1f8      	bne.n	1a005942 <memchr+0x62>
1a005950:	2000      	movs	r0, #0
1a005952:	4770      	bx	lr
1a005954:	3801      	subs	r0, #1
1a005956:	4770      	bx	lr
1a005958:	2d00      	cmp	r5, #0
1a00595a:	bf06      	itte	eq
1a00595c:	4635      	moveq	r5, r6
1a00595e:	3803      	subeq	r0, #3
1a005960:	3807      	subne	r0, #7
1a005962:	f015 0f01 	tst.w	r5, #1
1a005966:	d107      	bne.n	1a005978 <memchr+0x98>
1a005968:	3001      	adds	r0, #1
1a00596a:	f415 7f80 	tst.w	r5, #256	; 0x100
1a00596e:	bf02      	ittt	eq
1a005970:	3001      	addeq	r0, #1
1a005972:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
1a005976:	3001      	addeq	r0, #1
1a005978:	bcf0      	pop	{r4, r5, r6, r7}
1a00597a:	3801      	subs	r0, #1
1a00597c:	4770      	bx	lr
1a00597e:	bf00      	nop

1a005980 <memmove>:
1a005980:	4288      	cmp	r0, r1
1a005982:	b4f0      	push	{r4, r5, r6, r7}
1a005984:	d90d      	bls.n	1a0059a2 <memmove+0x22>
1a005986:	188b      	adds	r3, r1, r2
1a005988:	4283      	cmp	r3, r0
1a00598a:	d90a      	bls.n	1a0059a2 <memmove+0x22>
1a00598c:	1884      	adds	r4, r0, r2
1a00598e:	b132      	cbz	r2, 1a00599e <memmove+0x1e>
1a005990:	4622      	mov	r2, r4
1a005992:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
1a005996:	f802 4d01 	strb.w	r4, [r2, #-1]!
1a00599a:	4299      	cmp	r1, r3
1a00599c:	d1f9      	bne.n	1a005992 <memmove+0x12>
1a00599e:	bcf0      	pop	{r4, r5, r6, r7}
1a0059a0:	4770      	bx	lr
1a0059a2:	2a0f      	cmp	r2, #15
1a0059a4:	d80e      	bhi.n	1a0059c4 <memmove+0x44>
1a0059a6:	4603      	mov	r3, r0
1a0059a8:	1e54      	subs	r4, r2, #1
1a0059aa:	2a00      	cmp	r2, #0
1a0059ac:	d0f7      	beq.n	1a00599e <memmove+0x1e>
1a0059ae:	3401      	adds	r4, #1
1a0059b0:	440c      	add	r4, r1
1a0059b2:	3b01      	subs	r3, #1
1a0059b4:	f811 2b01 	ldrb.w	r2, [r1], #1
1a0059b8:	f803 2f01 	strb.w	r2, [r3, #1]!
1a0059bc:	42a1      	cmp	r1, r4
1a0059be:	d1f9      	bne.n	1a0059b4 <memmove+0x34>
1a0059c0:	bcf0      	pop	{r4, r5, r6, r7}
1a0059c2:	4770      	bx	lr
1a0059c4:	ea40 0301 	orr.w	r3, r0, r1
1a0059c8:	079b      	lsls	r3, r3, #30
1a0059ca:	d13b      	bne.n	1a005a44 <memmove+0xc4>
1a0059cc:	f1a2 0710 	sub.w	r7, r2, #16
1a0059d0:	093f      	lsrs	r7, r7, #4
1a0059d2:	f101 0620 	add.w	r6, r1, #32
1a0059d6:	eb06 1607 	add.w	r6, r6, r7, lsl #4
1a0059da:	f101 0310 	add.w	r3, r1, #16
1a0059de:	f100 0410 	add.w	r4, r0, #16
1a0059e2:	f853 5c10 	ldr.w	r5, [r3, #-16]
1a0059e6:	f844 5c10 	str.w	r5, [r4, #-16]
1a0059ea:	f853 5c0c 	ldr.w	r5, [r3, #-12]
1a0059ee:	f844 5c0c 	str.w	r5, [r4, #-12]
1a0059f2:	f853 5c08 	ldr.w	r5, [r3, #-8]
1a0059f6:	f844 5c08 	str.w	r5, [r4, #-8]
1a0059fa:	f853 5c04 	ldr.w	r5, [r3, #-4]
1a0059fe:	f844 5c04 	str.w	r5, [r4, #-4]
1a005a02:	3310      	adds	r3, #16
1a005a04:	42b3      	cmp	r3, r6
1a005a06:	f104 0410 	add.w	r4, r4, #16
1a005a0a:	d1ea      	bne.n	1a0059e2 <memmove+0x62>
1a005a0c:	1c7b      	adds	r3, r7, #1
1a005a0e:	011b      	lsls	r3, r3, #4
1a005a10:	f012 0f0c 	tst.w	r2, #12
1a005a14:	4419      	add	r1, r3
1a005a16:	f002 050f 	and.w	r5, r2, #15
1a005a1a:	4403      	add	r3, r0
1a005a1c:	d015      	beq.n	1a005a4a <memmove+0xca>
1a005a1e:	3d04      	subs	r5, #4
1a005a20:	08ad      	lsrs	r5, r5, #2
1a005a22:	eb03 0c85 	add.w	ip, r3, r5, lsl #2
1a005a26:	1f1c      	subs	r4, r3, #4
1a005a28:	460e      	mov	r6, r1
1a005a2a:	f856 7b04 	ldr.w	r7, [r6], #4
1a005a2e:	f844 7f04 	str.w	r7, [r4, #4]!
1a005a32:	4564      	cmp	r4, ip
1a005a34:	d1f9      	bne.n	1a005a2a <memmove+0xaa>
1a005a36:	3501      	adds	r5, #1
1a005a38:	00ad      	lsls	r5, r5, #2
1a005a3a:	442b      	add	r3, r5
1a005a3c:	4429      	add	r1, r5
1a005a3e:	f002 0203 	and.w	r2, r2, #3
1a005a42:	e7b1      	b.n	1a0059a8 <memmove+0x28>
1a005a44:	1e54      	subs	r4, r2, #1
1a005a46:	4603      	mov	r3, r0
1a005a48:	e7b1      	b.n	1a0059ae <memmove+0x2e>
1a005a4a:	462a      	mov	r2, r5
1a005a4c:	e7ac      	b.n	1a0059a8 <memmove+0x28>
1a005a4e:	bf00      	nop

1a005a50 <_Balloc>:
1a005a50:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
1a005a52:	b570      	push	{r4, r5, r6, lr}
1a005a54:	4605      	mov	r5, r0
1a005a56:	460c      	mov	r4, r1
1a005a58:	b14b      	cbz	r3, 1a005a6e <_Balloc+0x1e>
1a005a5a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
1a005a5e:	b180      	cbz	r0, 1a005a82 <_Balloc+0x32>
1a005a60:	6802      	ldr	r2, [r0, #0]
1a005a62:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
1a005a66:	2300      	movs	r3, #0
1a005a68:	e9c0 3303 	strd	r3, r3, [r0, #12]
1a005a6c:	bd70      	pop	{r4, r5, r6, pc}
1a005a6e:	2221      	movs	r2, #33	; 0x21
1a005a70:	2104      	movs	r1, #4
1a005a72:	f000 fd99 	bl	1a0065a8 <_calloc_r>
1a005a76:	4603      	mov	r3, r0
1a005a78:	64e8      	str	r0, [r5, #76]	; 0x4c
1a005a7a:	2800      	cmp	r0, #0
1a005a7c:	d1ed      	bne.n	1a005a5a <_Balloc+0xa>
1a005a7e:	2000      	movs	r0, #0
1a005a80:	bd70      	pop	{r4, r5, r6, pc}
1a005a82:	2101      	movs	r1, #1
1a005a84:	fa01 f604 	lsl.w	r6, r1, r4
1a005a88:	1d72      	adds	r2, r6, #5
1a005a8a:	4628      	mov	r0, r5
1a005a8c:	0092      	lsls	r2, r2, #2
1a005a8e:	f000 fd8b 	bl	1a0065a8 <_calloc_r>
1a005a92:	2800      	cmp	r0, #0
1a005a94:	d0f3      	beq.n	1a005a7e <_Balloc+0x2e>
1a005a96:	e9c0 4601 	strd	r4, r6, [r0, #4]
1a005a9a:	e7e4      	b.n	1a005a66 <_Balloc+0x16>

1a005a9c <_Bfree>:
1a005a9c:	b131      	cbz	r1, 1a005aac <_Bfree+0x10>
1a005a9e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
1a005aa0:	684a      	ldr	r2, [r1, #4]
1a005aa2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
1a005aa6:	6008      	str	r0, [r1, #0]
1a005aa8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
1a005aac:	4770      	bx	lr
1a005aae:	bf00      	nop

1a005ab0 <__multadd>:
1a005ab0:	b5f0      	push	{r4, r5, r6, r7, lr}
1a005ab2:	690c      	ldr	r4, [r1, #16]
1a005ab4:	b083      	sub	sp, #12
1a005ab6:	460d      	mov	r5, r1
1a005ab8:	4606      	mov	r6, r0
1a005aba:	f101 0c14 	add.w	ip, r1, #20
1a005abe:	2700      	movs	r7, #0
1a005ac0:	f8dc 0000 	ldr.w	r0, [ip]
1a005ac4:	b281      	uxth	r1, r0
1a005ac6:	fb02 3301 	mla	r3, r2, r1, r3
1a005aca:	0c19      	lsrs	r1, r3, #16
1a005acc:	0c00      	lsrs	r0, r0, #16
1a005ace:	fb02 1000 	mla	r0, r2, r0, r1
1a005ad2:	b29b      	uxth	r3, r3
1a005ad4:	3701      	adds	r7, #1
1a005ad6:	eb03 4300 	add.w	r3, r3, r0, lsl #16
1a005ada:	42bc      	cmp	r4, r7
1a005adc:	f84c 3b04 	str.w	r3, [ip], #4
1a005ae0:	ea4f 4310 	mov.w	r3, r0, lsr #16
1a005ae4:	dcec      	bgt.n	1a005ac0 <__multadd+0x10>
1a005ae6:	b13b      	cbz	r3, 1a005af8 <__multadd+0x48>
1a005ae8:	68aa      	ldr	r2, [r5, #8]
1a005aea:	42a2      	cmp	r2, r4
1a005aec:	dd07      	ble.n	1a005afe <__multadd+0x4e>
1a005aee:	eb05 0284 	add.w	r2, r5, r4, lsl #2
1a005af2:	3401      	adds	r4, #1
1a005af4:	6153      	str	r3, [r2, #20]
1a005af6:	612c      	str	r4, [r5, #16]
1a005af8:	4628      	mov	r0, r5
1a005afa:	b003      	add	sp, #12
1a005afc:	bdf0      	pop	{r4, r5, r6, r7, pc}
1a005afe:	6869      	ldr	r1, [r5, #4]
1a005b00:	9301      	str	r3, [sp, #4]
1a005b02:	3101      	adds	r1, #1
1a005b04:	4630      	mov	r0, r6
1a005b06:	f7ff ffa3 	bl	1a005a50 <_Balloc>
1a005b0a:	692a      	ldr	r2, [r5, #16]
1a005b0c:	3202      	adds	r2, #2
1a005b0e:	f105 010c 	add.w	r1, r5, #12
1a005b12:	4607      	mov	r7, r0
1a005b14:	0092      	lsls	r2, r2, #2
1a005b16:	300c      	adds	r0, #12
1a005b18:	f7fd f86c 	bl	1a002bf4 <memcpy>
1a005b1c:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
1a005b1e:	6869      	ldr	r1, [r5, #4]
1a005b20:	9b01      	ldr	r3, [sp, #4]
1a005b22:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
1a005b26:	6028      	str	r0, [r5, #0]
1a005b28:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
1a005b2c:	463d      	mov	r5, r7
1a005b2e:	eb05 0284 	add.w	r2, r5, r4, lsl #2
1a005b32:	3401      	adds	r4, #1
1a005b34:	6153      	str	r3, [r2, #20]
1a005b36:	612c      	str	r4, [r5, #16]
1a005b38:	e7de      	b.n	1a005af8 <__multadd+0x48>
1a005b3a:	bf00      	nop

1a005b3c <__hi0bits>:
1a005b3c:	0c02      	lsrs	r2, r0, #16
1a005b3e:	0412      	lsls	r2, r2, #16
1a005b40:	4603      	mov	r3, r0
1a005b42:	b9ca      	cbnz	r2, 1a005b78 <__hi0bits+0x3c>
1a005b44:	0403      	lsls	r3, r0, #16
1a005b46:	2010      	movs	r0, #16
1a005b48:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
1a005b4c:	bf04      	itt	eq
1a005b4e:	021b      	lsleq	r3, r3, #8
1a005b50:	3008      	addeq	r0, #8
1a005b52:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
1a005b56:	bf04      	itt	eq
1a005b58:	011b      	lsleq	r3, r3, #4
1a005b5a:	3004      	addeq	r0, #4
1a005b5c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
1a005b60:	bf04      	itt	eq
1a005b62:	009b      	lsleq	r3, r3, #2
1a005b64:	3002      	addeq	r0, #2
1a005b66:	2b00      	cmp	r3, #0
1a005b68:	db05      	blt.n	1a005b76 <__hi0bits+0x3a>
1a005b6a:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
1a005b6e:	f100 0001 	add.w	r0, r0, #1
1a005b72:	bf08      	it	eq
1a005b74:	2020      	moveq	r0, #32
1a005b76:	4770      	bx	lr
1a005b78:	2000      	movs	r0, #0
1a005b7a:	e7e5      	b.n	1a005b48 <__hi0bits+0xc>

1a005b7c <__lo0bits>:
1a005b7c:	6803      	ldr	r3, [r0, #0]
1a005b7e:	f013 0207 	ands.w	r2, r3, #7
1a005b82:	4601      	mov	r1, r0
1a005b84:	d007      	beq.n	1a005b96 <__lo0bits+0x1a>
1a005b86:	07da      	lsls	r2, r3, #31
1a005b88:	d420      	bmi.n	1a005bcc <__lo0bits+0x50>
1a005b8a:	0798      	lsls	r0, r3, #30
1a005b8c:	d522      	bpl.n	1a005bd4 <__lo0bits+0x58>
1a005b8e:	085b      	lsrs	r3, r3, #1
1a005b90:	600b      	str	r3, [r1, #0]
1a005b92:	2001      	movs	r0, #1
1a005b94:	4770      	bx	lr
1a005b96:	b298      	uxth	r0, r3
1a005b98:	b9b0      	cbnz	r0, 1a005bc8 <__lo0bits+0x4c>
1a005b9a:	0c1b      	lsrs	r3, r3, #16
1a005b9c:	2010      	movs	r0, #16
1a005b9e:	f013 0fff 	tst.w	r3, #255	; 0xff
1a005ba2:	bf04      	itt	eq
1a005ba4:	0a1b      	lsreq	r3, r3, #8
1a005ba6:	3008      	addeq	r0, #8
1a005ba8:	071a      	lsls	r2, r3, #28
1a005baa:	bf04      	itt	eq
1a005bac:	091b      	lsreq	r3, r3, #4
1a005bae:	3004      	addeq	r0, #4
1a005bb0:	079a      	lsls	r2, r3, #30
1a005bb2:	bf04      	itt	eq
1a005bb4:	089b      	lsreq	r3, r3, #2
1a005bb6:	3002      	addeq	r0, #2
1a005bb8:	07da      	lsls	r2, r3, #31
1a005bba:	d403      	bmi.n	1a005bc4 <__lo0bits+0x48>
1a005bbc:	085b      	lsrs	r3, r3, #1
1a005bbe:	f100 0001 	add.w	r0, r0, #1
1a005bc2:	d005      	beq.n	1a005bd0 <__lo0bits+0x54>
1a005bc4:	600b      	str	r3, [r1, #0]
1a005bc6:	4770      	bx	lr
1a005bc8:	4610      	mov	r0, r2
1a005bca:	e7e8      	b.n	1a005b9e <__lo0bits+0x22>
1a005bcc:	2000      	movs	r0, #0
1a005bce:	4770      	bx	lr
1a005bd0:	2020      	movs	r0, #32
1a005bd2:	4770      	bx	lr
1a005bd4:	089b      	lsrs	r3, r3, #2
1a005bd6:	600b      	str	r3, [r1, #0]
1a005bd8:	2002      	movs	r0, #2
1a005bda:	4770      	bx	lr

1a005bdc <__i2b>:
1a005bdc:	b510      	push	{r4, lr}
1a005bde:	460c      	mov	r4, r1
1a005be0:	2101      	movs	r1, #1
1a005be2:	f7ff ff35 	bl	1a005a50 <_Balloc>
1a005be6:	2201      	movs	r2, #1
1a005be8:	e9c0 2404 	strd	r2, r4, [r0, #16]
1a005bec:	bd10      	pop	{r4, pc}
1a005bee:	bf00      	nop

1a005bf0 <__multiply>:
1a005bf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a005bf4:	690e      	ldr	r6, [r1, #16]
1a005bf6:	6917      	ldr	r7, [r2, #16]
1a005bf8:	42be      	cmp	r6, r7
1a005bfa:	b083      	sub	sp, #12
1a005bfc:	460c      	mov	r4, r1
1a005bfe:	4615      	mov	r5, r2
1a005c00:	db05      	blt.n	1a005c0e <__multiply+0x1e>
1a005c02:	463a      	mov	r2, r7
1a005c04:	462b      	mov	r3, r5
1a005c06:	4637      	mov	r7, r6
1a005c08:	460d      	mov	r5, r1
1a005c0a:	4616      	mov	r6, r2
1a005c0c:	461c      	mov	r4, r3
1a005c0e:	e9d5 1301 	ldrd	r1, r3, [r5, #4]
1a005c12:	eb07 0806 	add.w	r8, r7, r6
1a005c16:	4543      	cmp	r3, r8
1a005c18:	bfb8      	it	lt
1a005c1a:	3101      	addlt	r1, #1
1a005c1c:	f7ff ff18 	bl	1a005a50 <_Balloc>
1a005c20:	f100 0a14 	add.w	sl, r0, #20
1a005c24:	eb0a 0988 	add.w	r9, sl, r8, lsl #2
1a005c28:	45ca      	cmp	sl, r9
1a005c2a:	9000      	str	r0, [sp, #0]
1a005c2c:	d205      	bcs.n	1a005c3a <__multiply+0x4a>
1a005c2e:	4653      	mov	r3, sl
1a005c30:	2100      	movs	r1, #0
1a005c32:	f843 1b04 	str.w	r1, [r3], #4
1a005c36:	4599      	cmp	r9, r3
1a005c38:	d8fb      	bhi.n	1a005c32 <__multiply+0x42>
1a005c3a:	f104 0e14 	add.w	lr, r4, #20
1a005c3e:	eb0e 0b86 	add.w	fp, lr, r6, lsl #2
1a005c42:	f105 0314 	add.w	r3, r5, #20
1a005c46:	45de      	cmp	lr, fp
1a005c48:	eb03 0787 	add.w	r7, r3, r7, lsl #2
1a005c4c:	d253      	bcs.n	1a005cf6 <__multiply+0x106>
1a005c4e:	f8cd 8004 	str.w	r8, [sp, #4]
1a005c52:	4698      	mov	r8, r3
1a005c54:	e005      	b.n	1a005c62 <__multiply+0x72>
1a005c56:	0c09      	lsrs	r1, r1, #16
1a005c58:	d128      	bne.n	1a005cac <__multiply+0xbc>
1a005c5a:	45f3      	cmp	fp, lr
1a005c5c:	f10a 0a04 	add.w	sl, sl, #4
1a005c60:	d947      	bls.n	1a005cf2 <__multiply+0x102>
1a005c62:	f85e 1b04 	ldr.w	r1, [lr], #4
1a005c66:	b28e      	uxth	r6, r1
1a005c68:	2e00      	cmp	r6, #0
1a005c6a:	d0f4      	beq.n	1a005c56 <__multiply+0x66>
1a005c6c:	4645      	mov	r5, r8
1a005c6e:	4654      	mov	r4, sl
1a005c70:	2300      	movs	r3, #0
1a005c72:	f855 1b04 	ldr.w	r1, [r5], #4
1a005c76:	6820      	ldr	r0, [r4, #0]
1a005c78:	b28a      	uxth	r2, r1
1a005c7a:	fa1f fc80 	uxth.w	ip, r0
1a005c7e:	fb06 c202 	mla	r2, r6, r2, ip
1a005c82:	0c09      	lsrs	r1, r1, #16
1a005c84:	0c00      	lsrs	r0, r0, #16
1a005c86:	4413      	add	r3, r2
1a005c88:	fb06 0201 	mla	r2, r6, r1, r0
1a005c8c:	eb02 4213 	add.w	r2, r2, r3, lsr #16
1a005c90:	b29b      	uxth	r3, r3
1a005c92:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a005c96:	42af      	cmp	r7, r5
1a005c98:	f844 3b04 	str.w	r3, [r4], #4
1a005c9c:	ea4f 4312 	mov.w	r3, r2, lsr #16
1a005ca0:	d8e7      	bhi.n	1a005c72 <__multiply+0x82>
1a005ca2:	6023      	str	r3, [r4, #0]
1a005ca4:	f85e 1c04 	ldr.w	r1, [lr, #-4]
1a005ca8:	0c09      	lsrs	r1, r1, #16
1a005caa:	d0d6      	beq.n	1a005c5a <__multiply+0x6a>
1a005cac:	f8da 3000 	ldr.w	r3, [sl]
1a005cb0:	4640      	mov	r0, r8
1a005cb2:	461a      	mov	r2, r3
1a005cb4:	4654      	mov	r4, sl
1a005cb6:	f04f 0c00 	mov.w	ip, #0
1a005cba:	8805      	ldrh	r5, [r0, #0]
1a005cbc:	0c12      	lsrs	r2, r2, #16
1a005cbe:	fb01 2205 	mla	r2, r1, r5, r2
1a005cc2:	4494      	add	ip, r2
1a005cc4:	b29b      	uxth	r3, r3
1a005cc6:	ea43 430c 	orr.w	r3, r3, ip, lsl #16
1a005cca:	f844 3b04 	str.w	r3, [r4], #4
1a005cce:	f850 3b04 	ldr.w	r3, [r0], #4
1a005cd2:	6822      	ldr	r2, [r4, #0]
1a005cd4:	0c1b      	lsrs	r3, r3, #16
1a005cd6:	b295      	uxth	r5, r2
1a005cd8:	fb01 5303 	mla	r3, r1, r3, r5
1a005cdc:	eb03 431c 	add.w	r3, r3, ip, lsr #16
1a005ce0:	4287      	cmp	r7, r0
1a005ce2:	ea4f 4c13 	mov.w	ip, r3, lsr #16
1a005ce6:	d8e8      	bhi.n	1a005cba <__multiply+0xca>
1a005ce8:	45f3      	cmp	fp, lr
1a005cea:	6023      	str	r3, [r4, #0]
1a005cec:	f10a 0a04 	add.w	sl, sl, #4
1a005cf0:	d8b7      	bhi.n	1a005c62 <__multiply+0x72>
1a005cf2:	f8dd 8004 	ldr.w	r8, [sp, #4]
1a005cf6:	f1b8 0f00 	cmp.w	r8, #0
1a005cfa:	dd0b      	ble.n	1a005d14 <__multiply+0x124>
1a005cfc:	f859 3c04 	ldr.w	r3, [r9, #-4]
1a005d00:	f1a9 0904 	sub.w	r9, r9, #4
1a005d04:	b11b      	cbz	r3, 1a005d0e <__multiply+0x11e>
1a005d06:	e005      	b.n	1a005d14 <__multiply+0x124>
1a005d08:	f859 3d04 	ldr.w	r3, [r9, #-4]!
1a005d0c:	b913      	cbnz	r3, 1a005d14 <__multiply+0x124>
1a005d0e:	f1b8 0801 	subs.w	r8, r8, #1
1a005d12:	d1f9      	bne.n	1a005d08 <__multiply+0x118>
1a005d14:	9800      	ldr	r0, [sp, #0]
1a005d16:	f8c0 8010 	str.w	r8, [r0, #16]
1a005d1a:	b003      	add	sp, #12
1a005d1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

1a005d20 <__pow5mult>:
1a005d20:	f012 0303 	ands.w	r3, r2, #3
1a005d24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1a005d28:	4614      	mov	r4, r2
1a005d2a:	4607      	mov	r7, r0
1a005d2c:	d12e      	bne.n	1a005d8c <__pow5mult+0x6c>
1a005d2e:	460d      	mov	r5, r1
1a005d30:	10a4      	asrs	r4, r4, #2
1a005d32:	d01c      	beq.n	1a005d6e <__pow5mult+0x4e>
1a005d34:	6cbe      	ldr	r6, [r7, #72]	; 0x48
1a005d36:	b396      	cbz	r6, 1a005d9e <__pow5mult+0x7e>
1a005d38:	07e3      	lsls	r3, r4, #31
1a005d3a:	f04f 0800 	mov.w	r8, #0
1a005d3e:	d406      	bmi.n	1a005d4e <__pow5mult+0x2e>
1a005d40:	1064      	asrs	r4, r4, #1
1a005d42:	d014      	beq.n	1a005d6e <__pow5mult+0x4e>
1a005d44:	6830      	ldr	r0, [r6, #0]
1a005d46:	b1a8      	cbz	r0, 1a005d74 <__pow5mult+0x54>
1a005d48:	4606      	mov	r6, r0
1a005d4a:	07e3      	lsls	r3, r4, #31
1a005d4c:	d5f8      	bpl.n	1a005d40 <__pow5mult+0x20>
1a005d4e:	4632      	mov	r2, r6
1a005d50:	4629      	mov	r1, r5
1a005d52:	4638      	mov	r0, r7
1a005d54:	f7ff ff4c 	bl	1a005bf0 <__multiply>
1a005d58:	b1b5      	cbz	r5, 1a005d88 <__pow5mult+0x68>
1a005d5a:	686a      	ldr	r2, [r5, #4]
1a005d5c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
1a005d5e:	1064      	asrs	r4, r4, #1
1a005d60:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1a005d64:	6029      	str	r1, [r5, #0]
1a005d66:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
1a005d6a:	4605      	mov	r5, r0
1a005d6c:	d1ea      	bne.n	1a005d44 <__pow5mult+0x24>
1a005d6e:	4628      	mov	r0, r5
1a005d70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1a005d74:	4632      	mov	r2, r6
1a005d76:	4631      	mov	r1, r6
1a005d78:	4638      	mov	r0, r7
1a005d7a:	f7ff ff39 	bl	1a005bf0 <__multiply>
1a005d7e:	6030      	str	r0, [r6, #0]
1a005d80:	f8c0 8000 	str.w	r8, [r0]
1a005d84:	4606      	mov	r6, r0
1a005d86:	e7e0      	b.n	1a005d4a <__pow5mult+0x2a>
1a005d88:	4605      	mov	r5, r0
1a005d8a:	e7d9      	b.n	1a005d40 <__pow5mult+0x20>
1a005d8c:	3b01      	subs	r3, #1
1a005d8e:	4a0b      	ldr	r2, [pc, #44]	; (1a005dbc <__pow5mult+0x9c>)
1a005d90:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
1a005d94:	2300      	movs	r3, #0
1a005d96:	f7ff fe8b 	bl	1a005ab0 <__multadd>
1a005d9a:	4605      	mov	r5, r0
1a005d9c:	e7c8      	b.n	1a005d30 <__pow5mult+0x10>
1a005d9e:	2101      	movs	r1, #1
1a005da0:	4638      	mov	r0, r7
1a005da2:	f7ff fe55 	bl	1a005a50 <_Balloc>
1a005da6:	f240 2371 	movw	r3, #625	; 0x271
1a005daa:	6143      	str	r3, [r0, #20]
1a005dac:	2201      	movs	r2, #1
1a005dae:	2300      	movs	r3, #0
1a005db0:	6102      	str	r2, [r0, #16]
1a005db2:	4606      	mov	r6, r0
1a005db4:	64b8      	str	r0, [r7, #72]	; 0x48
1a005db6:	6003      	str	r3, [r0, #0]
1a005db8:	e7be      	b.n	1a005d38 <__pow5mult+0x18>
1a005dba:	bf00      	nop
1a005dbc:	1a006b70 	.word	0x1a006b70

1a005dc0 <__lshift>:
1a005dc0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1a005dc4:	690e      	ldr	r6, [r1, #16]
1a005dc6:	460d      	mov	r5, r1
1a005dc8:	ea4f 1962 	mov.w	r9, r2, asr #5
1a005dcc:	e9d1 1301 	ldrd	r1, r3, [r1, #4]
1a005dd0:	444e      	add	r6, r9
1a005dd2:	1c74      	adds	r4, r6, #1
1a005dd4:	429c      	cmp	r4, r3
1a005dd6:	4690      	mov	r8, r2
1a005dd8:	4607      	mov	r7, r0
1a005dda:	dd04      	ble.n	1a005de6 <__lshift+0x26>
1a005ddc:	005b      	lsls	r3, r3, #1
1a005dde:	429c      	cmp	r4, r3
1a005de0:	f101 0101 	add.w	r1, r1, #1
1a005de4:	dcfa      	bgt.n	1a005ddc <__lshift+0x1c>
1a005de6:	4638      	mov	r0, r7
1a005de8:	f7ff fe32 	bl	1a005a50 <_Balloc>
1a005dec:	f1b9 0f00 	cmp.w	r9, #0
1a005df0:	f100 0c14 	add.w	ip, r0, #20
1a005df4:	dd0e      	ble.n	1a005e14 <__lshift+0x54>
1a005df6:	f109 0905 	add.w	r9, r9, #5
1a005dfa:	ea4f 0989 	mov.w	r9, r9, lsl #2
1a005dfe:	eb00 0109 	add.w	r1, r0, r9
1a005e02:	4663      	mov	r3, ip
1a005e04:	2200      	movs	r2, #0
1a005e06:	f843 2b04 	str.w	r2, [r3], #4
1a005e0a:	428b      	cmp	r3, r1
1a005e0c:	d1fb      	bne.n	1a005e06 <__lshift+0x46>
1a005e0e:	f1a9 0914 	sub.w	r9, r9, #20
1a005e12:	44cc      	add	ip, r9
1a005e14:	6929      	ldr	r1, [r5, #16]
1a005e16:	f105 0314 	add.w	r3, r5, #20
1a005e1a:	f018 081f 	ands.w	r8, r8, #31
1a005e1e:	eb03 0e81 	add.w	lr, r3, r1, lsl #2
1a005e22:	d01d      	beq.n	1a005e60 <__lshift+0xa0>
1a005e24:	f1c8 0920 	rsb	r9, r8, #32
1a005e28:	2200      	movs	r2, #0
1a005e2a:	6819      	ldr	r1, [r3, #0]
1a005e2c:	fa01 f108 	lsl.w	r1, r1, r8
1a005e30:	4311      	orrs	r1, r2
1a005e32:	f84c 1b04 	str.w	r1, [ip], #4
1a005e36:	f853 2b04 	ldr.w	r2, [r3], #4
1a005e3a:	4573      	cmp	r3, lr
1a005e3c:	fa22 f209 	lsr.w	r2, r2, r9
1a005e40:	d3f3      	bcc.n	1a005e2a <__lshift+0x6a>
1a005e42:	f8cc 2000 	str.w	r2, [ip]
1a005e46:	2a00      	cmp	r2, #0
1a005e48:	bf18      	it	ne
1a005e4a:	4626      	movne	r6, r4
1a005e4c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
1a005e4e:	686a      	ldr	r2, [r5, #4]
1a005e50:	6106      	str	r6, [r0, #16]
1a005e52:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1a005e56:	6029      	str	r1, [r5, #0]
1a005e58:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
1a005e5c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a005e60:	f1ac 0c04 	sub.w	ip, ip, #4
1a005e64:	f853 2b04 	ldr.w	r2, [r3], #4
1a005e68:	f84c 2f04 	str.w	r2, [ip, #4]!
1a005e6c:	459e      	cmp	lr, r3
1a005e6e:	d8f9      	bhi.n	1a005e64 <__lshift+0xa4>
1a005e70:	e7ec      	b.n	1a005e4c <__lshift+0x8c>
1a005e72:	bf00      	nop

1a005e74 <__mcmp>:
1a005e74:	b430      	push	{r4, r5}
1a005e76:	690b      	ldr	r3, [r1, #16]
1a005e78:	4605      	mov	r5, r0
1a005e7a:	6900      	ldr	r0, [r0, #16]
1a005e7c:	1ac0      	subs	r0, r0, r3
1a005e7e:	d110      	bne.n	1a005ea2 <__mcmp+0x2e>
1a005e80:	009b      	lsls	r3, r3, #2
1a005e82:	3514      	adds	r5, #20
1a005e84:	3114      	adds	r1, #20
1a005e86:	4419      	add	r1, r3
1a005e88:	442b      	add	r3, r5
1a005e8a:	e001      	b.n	1a005e90 <__mcmp+0x1c>
1a005e8c:	429d      	cmp	r5, r3
1a005e8e:	d208      	bcs.n	1a005ea2 <__mcmp+0x2e>
1a005e90:	f853 4d04 	ldr.w	r4, [r3, #-4]!
1a005e94:	f851 2d04 	ldr.w	r2, [r1, #-4]!
1a005e98:	4294      	cmp	r4, r2
1a005e9a:	d0f7      	beq.n	1a005e8c <__mcmp+0x18>
1a005e9c:	d203      	bcs.n	1a005ea6 <__mcmp+0x32>
1a005e9e:	f04f 30ff 	mov.w	r0, #4294967295
1a005ea2:	bc30      	pop	{r4, r5}
1a005ea4:	4770      	bx	lr
1a005ea6:	2001      	movs	r0, #1
1a005ea8:	bc30      	pop	{r4, r5}
1a005eaa:	4770      	bx	lr

1a005eac <__mdiff>:
1a005eac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1a005eb0:	460f      	mov	r7, r1
1a005eb2:	690d      	ldr	r5, [r1, #16]
1a005eb4:	6911      	ldr	r1, [r2, #16]
1a005eb6:	1a6d      	subs	r5, r5, r1
1a005eb8:	2d00      	cmp	r5, #0
1a005eba:	4690      	mov	r8, r2
1a005ebc:	4684      	mov	ip, r0
1a005ebe:	f107 0414 	add.w	r4, r7, #20
1a005ec2:	f102 0614 	add.w	r6, r2, #20
1a005ec6:	d114      	bne.n	1a005ef2 <__mdiff+0x46>
1a005ec8:	0089      	lsls	r1, r1, #2
1a005eca:	1863      	adds	r3, r4, r1
1a005ecc:	4431      	add	r1, r6
1a005ece:	e001      	b.n	1a005ed4 <__mdiff+0x28>
1a005ed0:	42a3      	cmp	r3, r4
1a005ed2:	d95d      	bls.n	1a005f90 <__mdiff+0xe4>
1a005ed4:	f853 0d04 	ldr.w	r0, [r3, #-4]!
1a005ed8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
1a005edc:	4290      	cmp	r0, r2
1a005ede:	d0f7      	beq.n	1a005ed0 <__mdiff+0x24>
1a005ee0:	d209      	bcs.n	1a005ef6 <__mdiff+0x4a>
1a005ee2:	4622      	mov	r2, r4
1a005ee4:	463b      	mov	r3, r7
1a005ee6:	4634      	mov	r4, r6
1a005ee8:	4647      	mov	r7, r8
1a005eea:	4616      	mov	r6, r2
1a005eec:	4698      	mov	r8, r3
1a005eee:	2501      	movs	r5, #1
1a005ef0:	e001      	b.n	1a005ef6 <__mdiff+0x4a>
1a005ef2:	dbf6      	blt.n	1a005ee2 <__mdiff+0x36>
1a005ef4:	2500      	movs	r5, #0
1a005ef6:	4660      	mov	r0, ip
1a005ef8:	6879      	ldr	r1, [r7, #4]
1a005efa:	f7ff fda9 	bl	1a005a50 <_Balloc>
1a005efe:	693f      	ldr	r7, [r7, #16]
1a005f00:	f8d8 3010 	ldr.w	r3, [r8, #16]
1a005f04:	60c5      	str	r5, [r0, #12]
1a005f06:	eb06 0e83 	add.w	lr, r6, r3, lsl #2
1a005f0a:	eb04 0c87 	add.w	ip, r4, r7, lsl #2
1a005f0e:	f100 0514 	add.w	r5, r0, #20
1a005f12:	2200      	movs	r2, #0
1a005f14:	e000      	b.n	1a005f18 <__mdiff+0x6c>
1a005f16:	460d      	mov	r5, r1
1a005f18:	f856 1b04 	ldr.w	r1, [r6], #4
1a005f1c:	f854 8b04 	ldr.w	r8, [r4], #4
1a005f20:	fa1f f981 	uxth.w	r9, r1
1a005f24:	fa12 f388 	uxtah	r3, r2, r8
1a005f28:	0c0a      	lsrs	r2, r1, #16
1a005f2a:	eba3 0309 	sub.w	r3, r3, r9
1a005f2e:	ebc2 4218 	rsb	r2, r2, r8, lsr #16
1a005f32:	eb02 4223 	add.w	r2, r2, r3, asr #16
1a005f36:	4629      	mov	r1, r5
1a005f38:	b29b      	uxth	r3, r3
1a005f3a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a005f3e:	45b6      	cmp	lr, r6
1a005f40:	ea4f 4222 	mov.w	r2, r2, asr #16
1a005f44:	f841 3b04 	str.w	r3, [r1], #4
1a005f48:	46a0      	mov	r8, r4
1a005f4a:	d8e4      	bhi.n	1a005f16 <__mdiff+0x6a>
1a005f4c:	45a4      	cmp	ip, r4
1a005f4e:	d916      	bls.n	1a005f7e <__mdiff+0xd2>
1a005f50:	460e      	mov	r6, r1
1a005f52:	f858 5b04 	ldr.w	r5, [r8], #4
1a005f56:	fa12 f385 	uxtah	r3, r2, r5
1a005f5a:	141a      	asrs	r2, r3, #16
1a005f5c:	eb02 4215 	add.w	r2, r2, r5, lsr #16
1a005f60:	b29b      	uxth	r3, r3
1a005f62:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1a005f66:	45c4      	cmp	ip, r8
1a005f68:	f846 3b04 	str.w	r3, [r6], #4
1a005f6c:	ea4f 4222 	mov.w	r2, r2, asr #16
1a005f70:	d8ef      	bhi.n	1a005f52 <__mdiff+0xa6>
1a005f72:	f10c 35ff 	add.w	r5, ip, #4294967295
1a005f76:	1b2d      	subs	r5, r5, r4
1a005f78:	f025 0503 	bic.w	r5, r5, #3
1a005f7c:	440d      	add	r5, r1
1a005f7e:	b923      	cbnz	r3, 1a005f8a <__mdiff+0xde>
1a005f80:	f855 3d04 	ldr.w	r3, [r5, #-4]!
1a005f84:	3f01      	subs	r7, #1
1a005f86:	2b00      	cmp	r3, #0
1a005f88:	d0fa      	beq.n	1a005f80 <__mdiff+0xd4>
1a005f8a:	6107      	str	r7, [r0, #16]
1a005f8c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1a005f90:	4660      	mov	r0, ip
1a005f92:	2100      	movs	r1, #0
1a005f94:	f7ff fd5c 	bl	1a005a50 <_Balloc>
1a005f98:	2201      	movs	r2, #1
1a005f9a:	2300      	movs	r3, #0
1a005f9c:	e9c0 2304 	strd	r2, r3, [r0, #16]
1a005fa0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

1a005fa4 <__d2b>:
1a005fa4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
1a005fa8:	460f      	mov	r7, r1
1a005faa:	b083      	sub	sp, #12
1a005fac:	2101      	movs	r1, #1
1a005fae:	ec55 4b10 	vmov	r4, r5, d0
1a005fb2:	4616      	mov	r6, r2
1a005fb4:	f7ff fd4c 	bl	1a005a50 <_Balloc>
1a005fb8:	f3c5 580a 	ubfx	r8, r5, #20, #11
1a005fbc:	4681      	mov	r9, r0
1a005fbe:	f3c5 0313 	ubfx	r3, r5, #0, #20
1a005fc2:	f1b8 0f00 	cmp.w	r8, #0
1a005fc6:	d001      	beq.n	1a005fcc <__d2b+0x28>
1a005fc8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
1a005fcc:	2c00      	cmp	r4, #0
1a005fce:	9301      	str	r3, [sp, #4]
1a005fd0:	d02b      	beq.n	1a00602a <__d2b+0x86>
1a005fd2:	4668      	mov	r0, sp
1a005fd4:	9400      	str	r4, [sp, #0]
1a005fd6:	f7ff fdd1 	bl	1a005b7c <__lo0bits>
1a005fda:	b9d0      	cbnz	r0, 1a006012 <__d2b+0x6e>
1a005fdc:	e9dd 2300 	ldrd	r2, r3, [sp]
1a005fe0:	f8c9 2014 	str.w	r2, [r9, #20]
1a005fe4:	2b00      	cmp	r3, #0
1a005fe6:	bf14      	ite	ne
1a005fe8:	2102      	movne	r1, #2
1a005fea:	2101      	moveq	r1, #1
1a005fec:	f8c9 3018 	str.w	r3, [r9, #24]
1a005ff0:	f8c9 1010 	str.w	r1, [r9, #16]
1a005ff4:	f1b8 0f00 	cmp.w	r8, #0
1a005ff8:	d024      	beq.n	1a006044 <__d2b+0xa0>
1a005ffa:	f2a8 4833 	subw	r8, r8, #1075	; 0x433
1a005ffe:	eb08 0300 	add.w	r3, r8, r0
1a006002:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
1a006006:	603b      	str	r3, [r7, #0]
1a006008:	6030      	str	r0, [r6, #0]
1a00600a:	4648      	mov	r0, r9
1a00600c:	b003      	add	sp, #12
1a00600e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1a006012:	e9dd 1300 	ldrd	r1, r3, [sp]
1a006016:	f1c0 0220 	rsb	r2, r0, #32
1a00601a:	fa03 f202 	lsl.w	r2, r3, r2
1a00601e:	430a      	orrs	r2, r1
1a006020:	40c3      	lsrs	r3, r0
1a006022:	9301      	str	r3, [sp, #4]
1a006024:	f8c9 2014 	str.w	r2, [r9, #20]
1a006028:	e7dc      	b.n	1a005fe4 <__d2b+0x40>
1a00602a:	a801      	add	r0, sp, #4
1a00602c:	f7ff fda6 	bl	1a005b7c <__lo0bits>
1a006030:	9b01      	ldr	r3, [sp, #4]
1a006032:	f8c9 3014 	str.w	r3, [r9, #20]
1a006036:	2101      	movs	r1, #1
1a006038:	3020      	adds	r0, #32
1a00603a:	f8c9 1010 	str.w	r1, [r9, #16]
1a00603e:	f1b8 0f00 	cmp.w	r8, #0
1a006042:	d1da      	bne.n	1a005ffa <__d2b+0x56>
1a006044:	eb09 0381 	add.w	r3, r9, r1, lsl #2
1a006048:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
1a00604c:	6038      	str	r0, [r7, #0]
1a00604e:	6918      	ldr	r0, [r3, #16]
1a006050:	f7ff fd74 	bl	1a005b3c <__hi0bits>
1a006054:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
1a006058:	6030      	str	r0, [r6, #0]
1a00605a:	4648      	mov	r0, r9
1a00605c:	b003      	add	sp, #12
1a00605e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1a006062:	bf00      	nop

1a006064 <_realloc_r>:
1a006064:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a006068:	4617      	mov	r7, r2
1a00606a:	2900      	cmp	r1, #0
1a00606c:	f000 80bb 	beq.w	1a0061e6 <_realloc_r+0x182>
1a006070:	f107 040b 	add.w	r4, r7, #11
1a006074:	4681      	mov	r9, r0
1a006076:	460d      	mov	r5, r1
1a006078:	f7fc fea6 	bl	1a002dc8 <__malloc_lock>
1a00607c:	2c16      	cmp	r4, #22
1a00607e:	d85e      	bhi.n	1a00613e <_realloc_r+0xda>
1a006080:	2410      	movs	r4, #16
1a006082:	4622      	mov	r2, r4
1a006084:	42a7      	cmp	r7, r4
1a006086:	d85f      	bhi.n	1a006148 <_realloc_r+0xe4>
1a006088:	f855 ec04 	ldr.w	lr, [r5, #-4]
1a00608c:	f02e 0603 	bic.w	r6, lr, #3
1a006090:	f1a5 0808 	sub.w	r8, r5, #8
1a006094:	4296      	cmp	r6, r2
1a006096:	eb08 0a06 	add.w	sl, r8, r6
1a00609a:	f280 8081 	bge.w	1a0061a0 <_realloc_r+0x13c>
1a00609e:	4bcb      	ldr	r3, [pc, #812]	; (1a0063cc <_realloc_r+0x368>)
1a0060a0:	f8da 0004 	ldr.w	r0, [sl, #4]
1a0060a4:	6899      	ldr	r1, [r3, #8]
1a0060a6:	4551      	cmp	r1, sl
1a0060a8:	f000 80b5 	beq.w	1a006216 <_realloc_r+0x1b2>
1a0060ac:	f020 0301 	bic.w	r3, r0, #1
1a0060b0:	4453      	add	r3, sl
1a0060b2:	685b      	ldr	r3, [r3, #4]
1a0060b4:	07db      	lsls	r3, r3, #31
1a0060b6:	f100 808a 	bmi.w	1a0061ce <_realloc_r+0x16a>
1a0060ba:	f020 0003 	bic.w	r0, r0, #3
1a0060be:	1833      	adds	r3, r6, r0
1a0060c0:	4293      	cmp	r3, r2
1a0060c2:	f280 8112 	bge.w	1a0062ea <_realloc_r+0x286>
1a0060c6:	f01e 0f01 	tst.w	lr, #1
1a0060ca:	d10f      	bne.n	1a0060ec <_realloc_r+0x88>
1a0060cc:	f855 3c08 	ldr.w	r3, [r5, #-8]
1a0060d0:	eba8 0b03 	sub.w	fp, r8, r3
1a0060d4:	f8db 1004 	ldr.w	r1, [fp, #4]
1a0060d8:	f021 0103 	bic.w	r1, r1, #3
1a0060dc:	4408      	add	r0, r1
1a0060de:	1983      	adds	r3, r0, r6
1a0060e0:	4293      	cmp	r3, r2
1a0060e2:	f280 8116 	bge.w	1a006312 <_realloc_r+0x2ae>
1a0060e6:	1873      	adds	r3, r6, r1
1a0060e8:	4293      	cmp	r3, r2
1a0060ea:	da34      	bge.n	1a006156 <_realloc_r+0xf2>
1a0060ec:	4639      	mov	r1, r7
1a0060ee:	4648      	mov	r0, r9
1a0060f0:	f7fc fac8 	bl	1a002684 <_malloc_r>
1a0060f4:	4607      	mov	r7, r0
1a0060f6:	b1e0      	cbz	r0, 1a006132 <_realloc_r+0xce>
1a0060f8:	f855 3c04 	ldr.w	r3, [r5, #-4]
1a0060fc:	f023 0301 	bic.w	r3, r3, #1
1a006100:	4443      	add	r3, r8
1a006102:	f1a0 0208 	sub.w	r2, r0, #8
1a006106:	4293      	cmp	r3, r2
1a006108:	f000 80f7 	beq.w	1a0062fa <_realloc_r+0x296>
1a00610c:	1f32      	subs	r2, r6, #4
1a00610e:	2a24      	cmp	r2, #36	; 0x24
1a006110:	f200 80fb 	bhi.w	1a00630a <_realloc_r+0x2a6>
1a006114:	2a13      	cmp	r2, #19
1a006116:	6829      	ldr	r1, [r5, #0]
1a006118:	f200 80c9 	bhi.w	1a0062ae <_realloc_r+0x24a>
1a00611c:	4603      	mov	r3, r0
1a00611e:	462a      	mov	r2, r5
1a006120:	6019      	str	r1, [r3, #0]
1a006122:	6851      	ldr	r1, [r2, #4]
1a006124:	6059      	str	r1, [r3, #4]
1a006126:	6892      	ldr	r2, [r2, #8]
1a006128:	609a      	str	r2, [r3, #8]
1a00612a:	4629      	mov	r1, r5
1a00612c:	4648      	mov	r0, r9
1a00612e:	f7fc f98b 	bl	1a002448 <_free_r>
1a006132:	4648      	mov	r0, r9
1a006134:	f7fc fe4e 	bl	1a002dd4 <__malloc_unlock>
1a006138:	4638      	mov	r0, r7
1a00613a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a00613e:	f024 0407 	bic.w	r4, r4, #7
1a006142:	2c00      	cmp	r4, #0
1a006144:	4622      	mov	r2, r4
1a006146:	da9d      	bge.n	1a006084 <_realloc_r+0x20>
1a006148:	230c      	movs	r3, #12
1a00614a:	f8c9 3000 	str.w	r3, [r9]
1a00614e:	2700      	movs	r7, #0
1a006150:	4638      	mov	r0, r7
1a006152:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a006156:	465f      	mov	r7, fp
1a006158:	f8db 100c 	ldr.w	r1, [fp, #12]
1a00615c:	f857 0f08 	ldr.w	r0, [r7, #8]!
1a006160:	1f32      	subs	r2, r6, #4
1a006162:	2a24      	cmp	r2, #36	; 0x24
1a006164:	60c1      	str	r1, [r0, #12]
1a006166:	eb0b 0a03 	add.w	sl, fp, r3
1a00616a:	6088      	str	r0, [r1, #8]
1a00616c:	f200 80d9 	bhi.w	1a006322 <_realloc_r+0x2be>
1a006170:	2a13      	cmp	r2, #19
1a006172:	6829      	ldr	r1, [r5, #0]
1a006174:	f240 80d3 	bls.w	1a00631e <_realloc_r+0x2ba>
1a006178:	f8cb 1008 	str.w	r1, [fp, #8]
1a00617c:	6869      	ldr	r1, [r5, #4]
1a00617e:	f8cb 100c 	str.w	r1, [fp, #12]
1a006182:	2a1b      	cmp	r2, #27
1a006184:	68a9      	ldr	r1, [r5, #8]
1a006186:	f200 80e0 	bhi.w	1a00634a <_realloc_r+0x2e6>
1a00618a:	f10b 0210 	add.w	r2, fp, #16
1a00618e:	3508      	adds	r5, #8
1a006190:	6011      	str	r1, [r2, #0]
1a006192:	6869      	ldr	r1, [r5, #4]
1a006194:	6051      	str	r1, [r2, #4]
1a006196:	68a9      	ldr	r1, [r5, #8]
1a006198:	6091      	str	r1, [r2, #8]
1a00619a:	461e      	mov	r6, r3
1a00619c:	46d8      	mov	r8, fp
1a00619e:	463d      	mov	r5, r7
1a0061a0:	f8d8 3004 	ldr.w	r3, [r8, #4]
1a0061a4:	1b32      	subs	r2, r6, r4
1a0061a6:	2a0f      	cmp	r2, #15
1a0061a8:	f003 0301 	and.w	r3, r3, #1
1a0061ac:	d820      	bhi.n	1a0061f0 <_realloc_r+0x18c>
1a0061ae:	4333      	orrs	r3, r6
1a0061b0:	f8c8 3004 	str.w	r3, [r8, #4]
1a0061b4:	f8da 3004 	ldr.w	r3, [sl, #4]
1a0061b8:	f043 0301 	orr.w	r3, r3, #1
1a0061bc:	f8ca 3004 	str.w	r3, [sl, #4]
1a0061c0:	4648      	mov	r0, r9
1a0061c2:	462f      	mov	r7, r5
1a0061c4:	f7fc fe06 	bl	1a002dd4 <__malloc_unlock>
1a0061c8:	4638      	mov	r0, r7
1a0061ca:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a0061ce:	f01e 0f01 	tst.w	lr, #1
1a0061d2:	d18b      	bne.n	1a0060ec <_realloc_r+0x88>
1a0061d4:	f855 3c08 	ldr.w	r3, [r5, #-8]
1a0061d8:	eba8 0b03 	sub.w	fp, r8, r3
1a0061dc:	f8db 1004 	ldr.w	r1, [fp, #4]
1a0061e0:	f021 0103 	bic.w	r1, r1, #3
1a0061e4:	e77f      	b.n	1a0060e6 <_realloc_r+0x82>
1a0061e6:	4611      	mov	r1, r2
1a0061e8:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a0061ec:	f7fc ba4a 	b.w	1a002684 <_malloc_r>
1a0061f0:	eb08 0104 	add.w	r1, r8, r4
1a0061f4:	4323      	orrs	r3, r4
1a0061f6:	f042 0201 	orr.w	r2, r2, #1
1a0061fa:	f8c8 3004 	str.w	r3, [r8, #4]
1a0061fe:	604a      	str	r2, [r1, #4]
1a006200:	f8da 3004 	ldr.w	r3, [sl, #4]
1a006204:	f043 0301 	orr.w	r3, r3, #1
1a006208:	3108      	adds	r1, #8
1a00620a:	f8ca 3004 	str.w	r3, [sl, #4]
1a00620e:	4648      	mov	r0, r9
1a006210:	f7fc f91a 	bl	1a002448 <_free_r>
1a006214:	e7d4      	b.n	1a0061c0 <_realloc_r+0x15c>
1a006216:	f020 0003 	bic.w	r0, r0, #3
1a00621a:	1831      	adds	r1, r6, r0
1a00621c:	f104 0c10 	add.w	ip, r4, #16
1a006220:	4561      	cmp	r1, ip
1a006222:	da4f      	bge.n	1a0062c4 <_realloc_r+0x260>
1a006224:	f01e 0f01 	tst.w	lr, #1
1a006228:	f47f af60 	bne.w	1a0060ec <_realloc_r+0x88>
1a00622c:	f855 1c08 	ldr.w	r1, [r5, #-8]
1a006230:	eba8 0b01 	sub.w	fp, r8, r1
1a006234:	f8db 1004 	ldr.w	r1, [fp, #4]
1a006238:	f021 0103 	bic.w	r1, r1, #3
1a00623c:	4408      	add	r0, r1
1a00623e:	eb00 0a06 	add.w	sl, r0, r6
1a006242:	45d4      	cmp	ip, sl
1a006244:	f73f af4f 	bgt.w	1a0060e6 <_realloc_r+0x82>
1a006248:	465f      	mov	r7, fp
1a00624a:	f8db 100c 	ldr.w	r1, [fp, #12]
1a00624e:	f857 0f08 	ldr.w	r0, [r7, #8]!
1a006252:	1f32      	subs	r2, r6, #4
1a006254:	2a24      	cmp	r2, #36	; 0x24
1a006256:	60c1      	str	r1, [r0, #12]
1a006258:	6088      	str	r0, [r1, #8]
1a00625a:	f200 8099 	bhi.w	1a006390 <_realloc_r+0x32c>
1a00625e:	2a13      	cmp	r2, #19
1a006260:	6829      	ldr	r1, [r5, #0]
1a006262:	f240 8093 	bls.w	1a00638c <_realloc_r+0x328>
1a006266:	f8cb 1008 	str.w	r1, [fp, #8]
1a00626a:	6869      	ldr	r1, [r5, #4]
1a00626c:	f8cb 100c 	str.w	r1, [fp, #12]
1a006270:	2a1b      	cmp	r2, #27
1a006272:	68a9      	ldr	r1, [r5, #8]
1a006274:	f200 8092 	bhi.w	1a00639c <_realloc_r+0x338>
1a006278:	f10b 0210 	add.w	r2, fp, #16
1a00627c:	3508      	adds	r5, #8
1a00627e:	6011      	str	r1, [r2, #0]
1a006280:	6869      	ldr	r1, [r5, #4]
1a006282:	6051      	str	r1, [r2, #4]
1a006284:	68a9      	ldr	r1, [r5, #8]
1a006286:	6091      	str	r1, [r2, #8]
1a006288:	eb0b 0104 	add.w	r1, fp, r4
1a00628c:	ebaa 0204 	sub.w	r2, sl, r4
1a006290:	f042 0201 	orr.w	r2, r2, #1
1a006294:	6099      	str	r1, [r3, #8]
1a006296:	604a      	str	r2, [r1, #4]
1a006298:	f8db 3004 	ldr.w	r3, [fp, #4]
1a00629c:	f003 0301 	and.w	r3, r3, #1
1a0062a0:	431c      	orrs	r4, r3
1a0062a2:	4648      	mov	r0, r9
1a0062a4:	f8cb 4004 	str.w	r4, [fp, #4]
1a0062a8:	f7fc fd94 	bl	1a002dd4 <__malloc_unlock>
1a0062ac:	e750      	b.n	1a006150 <_realloc_r+0xec>
1a0062ae:	6001      	str	r1, [r0, #0]
1a0062b0:	686b      	ldr	r3, [r5, #4]
1a0062b2:	6043      	str	r3, [r0, #4]
1a0062b4:	2a1b      	cmp	r2, #27
1a0062b6:	d83c      	bhi.n	1a006332 <_realloc_r+0x2ce>
1a0062b8:	f105 0208 	add.w	r2, r5, #8
1a0062bc:	f100 0308 	add.w	r3, r0, #8
1a0062c0:	68a9      	ldr	r1, [r5, #8]
1a0062c2:	e72d      	b.n	1a006120 <_realloc_r+0xbc>
1a0062c4:	eb08 0004 	add.w	r0, r8, r4
1a0062c8:	1b0a      	subs	r2, r1, r4
1a0062ca:	f042 0201 	orr.w	r2, r2, #1
1a0062ce:	6098      	str	r0, [r3, #8]
1a0062d0:	6042      	str	r2, [r0, #4]
1a0062d2:	f855 3c04 	ldr.w	r3, [r5, #-4]
1a0062d6:	f003 0301 	and.w	r3, r3, #1
1a0062da:	431c      	orrs	r4, r3
1a0062dc:	4648      	mov	r0, r9
1a0062de:	f845 4c04 	str.w	r4, [r5, #-4]
1a0062e2:	f7fc fd77 	bl	1a002dd4 <__malloc_unlock>
1a0062e6:	462f      	mov	r7, r5
1a0062e8:	e732      	b.n	1a006150 <_realloc_r+0xec>
1a0062ea:	e9da 1202 	ldrd	r1, r2, [sl, #8]
1a0062ee:	461e      	mov	r6, r3
1a0062f0:	60ca      	str	r2, [r1, #12]
1a0062f2:	eb08 0a03 	add.w	sl, r8, r3
1a0062f6:	6091      	str	r1, [r2, #8]
1a0062f8:	e752      	b.n	1a0061a0 <_realloc_r+0x13c>
1a0062fa:	f850 3c04 	ldr.w	r3, [r0, #-4]
1a0062fe:	f023 0303 	bic.w	r3, r3, #3
1a006302:	441e      	add	r6, r3
1a006304:	eb08 0a06 	add.w	sl, r8, r6
1a006308:	e74a      	b.n	1a0061a0 <_realloc_r+0x13c>
1a00630a:	4629      	mov	r1, r5
1a00630c:	f7ff fb38 	bl	1a005980 <memmove>
1a006310:	e70b      	b.n	1a00612a <_realloc_r+0xc6>
1a006312:	e9da 1202 	ldrd	r1, r2, [sl, #8]
1a006316:	465f      	mov	r7, fp
1a006318:	60ca      	str	r2, [r1, #12]
1a00631a:	6091      	str	r1, [r2, #8]
1a00631c:	e71c      	b.n	1a006158 <_realloc_r+0xf4>
1a00631e:	463a      	mov	r2, r7
1a006320:	e736      	b.n	1a006190 <_realloc_r+0x12c>
1a006322:	4629      	mov	r1, r5
1a006324:	4638      	mov	r0, r7
1a006326:	461e      	mov	r6, r3
1a006328:	46d8      	mov	r8, fp
1a00632a:	f7ff fb29 	bl	1a005980 <memmove>
1a00632e:	463d      	mov	r5, r7
1a006330:	e736      	b.n	1a0061a0 <_realloc_r+0x13c>
1a006332:	68ab      	ldr	r3, [r5, #8]
1a006334:	6083      	str	r3, [r0, #8]
1a006336:	68eb      	ldr	r3, [r5, #12]
1a006338:	60c3      	str	r3, [r0, #12]
1a00633a:	2a24      	cmp	r2, #36	; 0x24
1a00633c:	d011      	beq.n	1a006362 <_realloc_r+0x2fe>
1a00633e:	f105 0210 	add.w	r2, r5, #16
1a006342:	f100 0310 	add.w	r3, r0, #16
1a006346:	6929      	ldr	r1, [r5, #16]
1a006348:	e6ea      	b.n	1a006120 <_realloc_r+0xbc>
1a00634a:	f8cb 1010 	str.w	r1, [fp, #16]
1a00634e:	68e9      	ldr	r1, [r5, #12]
1a006350:	f8cb 1014 	str.w	r1, [fp, #20]
1a006354:	2a24      	cmp	r2, #36	; 0x24
1a006356:	d00e      	beq.n	1a006376 <_realloc_r+0x312>
1a006358:	6929      	ldr	r1, [r5, #16]
1a00635a:	f10b 0218 	add.w	r2, fp, #24
1a00635e:	3510      	adds	r5, #16
1a006360:	e716      	b.n	1a006190 <_realloc_r+0x12c>
1a006362:	692b      	ldr	r3, [r5, #16]
1a006364:	6103      	str	r3, [r0, #16]
1a006366:	696b      	ldr	r3, [r5, #20]
1a006368:	6143      	str	r3, [r0, #20]
1a00636a:	69a9      	ldr	r1, [r5, #24]
1a00636c:	f105 0218 	add.w	r2, r5, #24
1a006370:	f100 0318 	add.w	r3, r0, #24
1a006374:	e6d4      	b.n	1a006120 <_realloc_r+0xbc>
1a006376:	692a      	ldr	r2, [r5, #16]
1a006378:	f8cb 2018 	str.w	r2, [fp, #24]
1a00637c:	696a      	ldr	r2, [r5, #20]
1a00637e:	f8cb 201c 	str.w	r2, [fp, #28]
1a006382:	69a9      	ldr	r1, [r5, #24]
1a006384:	f10b 0220 	add.w	r2, fp, #32
1a006388:	3518      	adds	r5, #24
1a00638a:	e701      	b.n	1a006190 <_realloc_r+0x12c>
1a00638c:	463a      	mov	r2, r7
1a00638e:	e776      	b.n	1a00627e <_realloc_r+0x21a>
1a006390:	4629      	mov	r1, r5
1a006392:	4638      	mov	r0, r7
1a006394:	f7ff faf4 	bl	1a005980 <memmove>
1a006398:	4b0c      	ldr	r3, [pc, #48]	; (1a0063cc <_realloc_r+0x368>)
1a00639a:	e775      	b.n	1a006288 <_realloc_r+0x224>
1a00639c:	f8cb 1010 	str.w	r1, [fp, #16]
1a0063a0:	68e9      	ldr	r1, [r5, #12]
1a0063a2:	f8cb 1014 	str.w	r1, [fp, #20]
1a0063a6:	2a24      	cmp	r2, #36	; 0x24
1a0063a8:	d004      	beq.n	1a0063b4 <_realloc_r+0x350>
1a0063aa:	6929      	ldr	r1, [r5, #16]
1a0063ac:	f10b 0218 	add.w	r2, fp, #24
1a0063b0:	3510      	adds	r5, #16
1a0063b2:	e764      	b.n	1a00627e <_realloc_r+0x21a>
1a0063b4:	692a      	ldr	r2, [r5, #16]
1a0063b6:	f8cb 2018 	str.w	r2, [fp, #24]
1a0063ba:	696a      	ldr	r2, [r5, #20]
1a0063bc:	f8cb 201c 	str.w	r2, [fp, #28]
1a0063c0:	69a9      	ldr	r1, [r5, #24]
1a0063c2:	f10b 0220 	add.w	r2, fp, #32
1a0063c6:	3518      	adds	r5, #24
1a0063c8:	e759      	b.n	1a00627e <_realloc_r+0x21a>
1a0063ca:	bf00      	nop
1a0063cc:	10000478 	.word	0x10000478

1a0063d0 <frexp>:
1a0063d0:	ec53 2b10 	vmov	r2, r3, d0
1a0063d4:	b570      	push	{r4, r5, r6, lr}
1a0063d6:	4e16      	ldr	r6, [pc, #88]	; (1a006430 <frexp+0x60>)
1a0063d8:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
1a0063dc:	2500      	movs	r5, #0
1a0063de:	42b1      	cmp	r1, r6
1a0063e0:	4604      	mov	r4, r0
1a0063e2:	6005      	str	r5, [r0, #0]
1a0063e4:	dc21      	bgt.n	1a00642a <frexp+0x5a>
1a0063e6:	ee10 6a10 	vmov	r6, s0
1a0063ea:	430e      	orrs	r6, r1
1a0063ec:	d01d      	beq.n	1a00642a <frexp+0x5a>
1a0063ee:	4e11      	ldr	r6, [pc, #68]	; (1a006434 <frexp+0x64>)
1a0063f0:	401e      	ands	r6, r3
1a0063f2:	4618      	mov	r0, r3
1a0063f4:	b966      	cbnz	r6, 1a006410 <frexp+0x40>
1a0063f6:	4619      	mov	r1, r3
1a0063f8:	2200      	movs	r2, #0
1a0063fa:	ee10 0a10 	vmov	r0, s0
1a0063fe:	4b0e      	ldr	r3, [pc, #56]	; (1a006438 <frexp+0x68>)
1a006400:	f7fb fb78 	bl	1a001af4 <__aeabi_dmul>
1a006404:	f06f 0535 	mvn.w	r5, #53	; 0x35
1a006408:	4602      	mov	r2, r0
1a00640a:	4608      	mov	r0, r1
1a00640c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
1a006410:	f020 40ff 	bic.w	r0, r0, #2139095040	; 0x7f800000
1a006414:	1509      	asrs	r1, r1, #20
1a006416:	f420 00e0 	bic.w	r0, r0, #7340032	; 0x700000
1a00641a:	f2a1 31fe 	subw	r1, r1, #1022	; 0x3fe
1a00641e:	f040 537f 	orr.w	r3, r0, #1069547520	; 0x3fc00000
1a006422:	4429      	add	r1, r5
1a006424:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
1a006428:	6021      	str	r1, [r4, #0]
1a00642a:	ec43 2b10 	vmov	d0, r2, r3
1a00642e:	bd70      	pop	{r4, r5, r6, pc}
1a006430:	7fefffff 	.word	0x7fefffff
1a006434:	7ff00000 	.word	0x7ff00000
1a006438:	43500000 	.word	0x43500000

1a00643c <strncpy>:
1a00643c:	b470      	push	{r4, r5, r6}
1a00643e:	ea40 0401 	orr.w	r4, r0, r1
1a006442:	07a3      	lsls	r3, r4, #30
1a006444:	d127      	bne.n	1a006496 <strncpy+0x5a>
1a006446:	2a03      	cmp	r2, #3
1a006448:	d925      	bls.n	1a006496 <strncpy+0x5a>
1a00644a:	460b      	mov	r3, r1
1a00644c:	4606      	mov	r6, r0
1a00644e:	4619      	mov	r1, r3
1a006450:	f853 5b04 	ldr.w	r5, [r3], #4
1a006454:	f1a5 3401 	sub.w	r4, r5, #16843009	; 0x1010101
1a006458:	ea24 0405 	bic.w	r4, r4, r5
1a00645c:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
1a006460:	d106      	bne.n	1a006470 <strncpy+0x34>
1a006462:	3a04      	subs	r2, #4
1a006464:	2a03      	cmp	r2, #3
1a006466:	f846 5b04 	str.w	r5, [r6], #4
1a00646a:	4619      	mov	r1, r3
1a00646c:	d8ef      	bhi.n	1a00644e <strncpy+0x12>
1a00646e:	b182      	cbz	r2, 1a006492 <strncpy+0x56>
1a006470:	4633      	mov	r3, r6
1a006472:	780c      	ldrb	r4, [r1, #0]
1a006474:	f803 4b01 	strb.w	r4, [r3], #1
1a006478:	1e55      	subs	r5, r2, #1
1a00647a:	b174      	cbz	r4, 1a00649a <strncpy+0x5e>
1a00647c:	4432      	add	r2, r6
1a00647e:	442e      	add	r6, r5
1a006480:	e005      	b.n	1a00648e <strncpy+0x52>
1a006482:	f811 4f01 	ldrb.w	r4, [r1, #1]!
1a006486:	1af5      	subs	r5, r6, r3
1a006488:	f803 4b01 	strb.w	r4, [r3], #1
1a00648c:	b12c      	cbz	r4, 1a00649a <strncpy+0x5e>
1a00648e:	429a      	cmp	r2, r3
1a006490:	d1f7      	bne.n	1a006482 <strncpy+0x46>
1a006492:	bc70      	pop	{r4, r5, r6}
1a006494:	4770      	bx	lr
1a006496:	4606      	mov	r6, r0
1a006498:	e7e9      	b.n	1a00646e <strncpy+0x32>
1a00649a:	2d00      	cmp	r5, #0
1a00649c:	d0f9      	beq.n	1a006492 <strncpy+0x56>
1a00649e:	441d      	add	r5, r3
1a0064a0:	2200      	movs	r2, #0
1a0064a2:	f803 2b01 	strb.w	r2, [r3], #1
1a0064a6:	42ab      	cmp	r3, r5
1a0064a8:	d1fb      	bne.n	1a0064a2 <strncpy+0x66>
1a0064aa:	bc70      	pop	{r4, r5, r6}
1a0064ac:	4770      	bx	lr
1a0064ae:	bf00      	nop

1a0064b0 <__ssprint_r>:
1a0064b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1a0064b4:	6893      	ldr	r3, [r2, #8]
1a0064b6:	b083      	sub	sp, #12
1a0064b8:	4690      	mov	r8, r2
1a0064ba:	2b00      	cmp	r3, #0
1a0064bc:	d06d      	beq.n	1a00659a <__ssprint_r+0xea>
1a0064be:	6817      	ldr	r7, [r2, #0]
1a0064c0:	688d      	ldr	r5, [r1, #8]
1a0064c2:	4682      	mov	sl, r0
1a0064c4:	460c      	mov	r4, r1
1a0064c6:	6808      	ldr	r0, [r1, #0]
1a0064c8:	3708      	adds	r7, #8
1a0064ca:	e043      	b.n	1a006554 <__ssprint_r+0xa4>
1a0064cc:	89a3      	ldrh	r3, [r4, #12]
1a0064ce:	f413 6f90 	tst.w	r3, #1152	; 0x480
1a0064d2:	d02e      	beq.n	1a006532 <__ssprint_r+0x82>
1a0064d4:	e9d4 1504 	ldrd	r1, r5, [r4, #16]
1a0064d8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
1a0064dc:	eba0 0b01 	sub.w	fp, r0, r1
1a0064e0:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
1a0064e4:	eb0b 0006 	add.w	r0, fp, r6
1a0064e8:	106d      	asrs	r5, r5, #1
1a0064ea:	3001      	adds	r0, #1
1a0064ec:	42a8      	cmp	r0, r5
1a0064ee:	462a      	mov	r2, r5
1a0064f0:	bf84      	itt	hi
1a0064f2:	4605      	movhi	r5, r0
1a0064f4:	462a      	movhi	r2, r5
1a0064f6:	055b      	lsls	r3, r3, #21
1a0064f8:	d536      	bpl.n	1a006568 <__ssprint_r+0xb8>
1a0064fa:	4611      	mov	r1, r2
1a0064fc:	4650      	mov	r0, sl
1a0064fe:	f7fc f8c1 	bl	1a002684 <_malloc_r>
1a006502:	2800      	cmp	r0, #0
1a006504:	d03a      	beq.n	1a00657c <__ssprint_r+0xcc>
1a006506:	465a      	mov	r2, fp
1a006508:	6921      	ldr	r1, [r4, #16]
1a00650a:	9001      	str	r0, [sp, #4]
1a00650c:	f7fc fb72 	bl	1a002bf4 <memcpy>
1a006510:	89a2      	ldrh	r2, [r4, #12]
1a006512:	9b01      	ldr	r3, [sp, #4]
1a006514:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
1a006518:	f042 0280 	orr.w	r2, r2, #128	; 0x80
1a00651c:	81a2      	strh	r2, [r4, #12]
1a00651e:	eba5 020b 	sub.w	r2, r5, fp
1a006522:	eb03 000b 	add.w	r0, r3, fp
1a006526:	6165      	str	r5, [r4, #20]
1a006528:	6123      	str	r3, [r4, #16]
1a00652a:	6020      	str	r0, [r4, #0]
1a00652c:	60a2      	str	r2, [r4, #8]
1a00652e:	4635      	mov	r5, r6
1a006530:	46b3      	mov	fp, r6
1a006532:	465a      	mov	r2, fp
1a006534:	4649      	mov	r1, r9
1a006536:	f7ff fa23 	bl	1a005980 <memmove>
1a00653a:	f8d8 3008 	ldr.w	r3, [r8, #8]
1a00653e:	68a2      	ldr	r2, [r4, #8]
1a006540:	6820      	ldr	r0, [r4, #0]
1a006542:	1b55      	subs	r5, r2, r5
1a006544:	4458      	add	r0, fp
1a006546:	1b9e      	subs	r6, r3, r6
1a006548:	60a5      	str	r5, [r4, #8]
1a00654a:	6020      	str	r0, [r4, #0]
1a00654c:	f8c8 6008 	str.w	r6, [r8, #8]
1a006550:	b31e      	cbz	r6, 1a00659a <__ssprint_r+0xea>
1a006552:	3708      	adds	r7, #8
1a006554:	e957 9602 	ldrd	r9, r6, [r7, #-8]
1a006558:	46ab      	mov	fp, r5
1a00655a:	2e00      	cmp	r6, #0
1a00655c:	d0f9      	beq.n	1a006552 <__ssprint_r+0xa2>
1a00655e:	42ae      	cmp	r6, r5
1a006560:	d2b4      	bcs.n	1a0064cc <__ssprint_r+0x1c>
1a006562:	4635      	mov	r5, r6
1a006564:	46b3      	mov	fp, r6
1a006566:	e7e4      	b.n	1a006532 <__ssprint_r+0x82>
1a006568:	4650      	mov	r0, sl
1a00656a:	f7ff fd7b 	bl	1a006064 <_realloc_r>
1a00656e:	4603      	mov	r3, r0
1a006570:	2800      	cmp	r0, #0
1a006572:	d1d4      	bne.n	1a00651e <__ssprint_r+0x6e>
1a006574:	6921      	ldr	r1, [r4, #16]
1a006576:	4650      	mov	r0, sl
1a006578:	f7fb ff66 	bl	1a002448 <_free_r>
1a00657c:	230c      	movs	r3, #12
1a00657e:	f8ca 3000 	str.w	r3, [sl]
1a006582:	89a3      	ldrh	r3, [r4, #12]
1a006584:	2200      	movs	r2, #0
1a006586:	f043 0340 	orr.w	r3, r3, #64	; 0x40
1a00658a:	f04f 30ff 	mov.w	r0, #4294967295
1a00658e:	81a3      	strh	r3, [r4, #12]
1a006590:	e9c8 2201 	strd	r2, r2, [r8, #4]
1a006594:	b003      	add	sp, #12
1a006596:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a00659a:	2000      	movs	r0, #0
1a00659c:	f8c8 0004 	str.w	r0, [r8, #4]
1a0065a0:	b003      	add	sp, #12
1a0065a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1a0065a6:	bf00      	nop

1a0065a8 <_calloc_r>:
1a0065a8:	b510      	push	{r4, lr}
1a0065aa:	fb02 f101 	mul.w	r1, r2, r1
1a0065ae:	f7fc f869 	bl	1a002684 <_malloc_r>
1a0065b2:	4604      	mov	r4, r0
1a0065b4:	b168      	cbz	r0, 1a0065d2 <_calloc_r+0x2a>
1a0065b6:	f850 2c04 	ldr.w	r2, [r0, #-4]
1a0065ba:	f022 0203 	bic.w	r2, r2, #3
1a0065be:	3a04      	subs	r2, #4
1a0065c0:	2a24      	cmp	r2, #36	; 0x24
1a0065c2:	d818      	bhi.n	1a0065f6 <_calloc_r+0x4e>
1a0065c4:	2a13      	cmp	r2, #19
1a0065c6:	d806      	bhi.n	1a0065d6 <_calloc_r+0x2e>
1a0065c8:	4602      	mov	r2, r0
1a0065ca:	2300      	movs	r3, #0
1a0065cc:	e9c2 3300 	strd	r3, r3, [r2]
1a0065d0:	6093      	str	r3, [r2, #8]
1a0065d2:	4620      	mov	r0, r4
1a0065d4:	bd10      	pop	{r4, pc}
1a0065d6:	2300      	movs	r3, #0
1a0065d8:	2a1b      	cmp	r2, #27
1a0065da:	e9c0 3300 	strd	r3, r3, [r0]
1a0065de:	d90f      	bls.n	1a006600 <_calloc_r+0x58>
1a0065e0:	2a24      	cmp	r2, #36	; 0x24
1a0065e2:	e9c0 3302 	strd	r3, r3, [r0, #8]
1a0065e6:	bf12      	itee	ne
1a0065e8:	f100 0210 	addne.w	r2, r0, #16
1a0065ec:	e9c0 3304 	strdeq	r3, r3, [r0, #16]
1a0065f0:	f100 0218 	addeq.w	r2, r0, #24
1a0065f4:	e7e9      	b.n	1a0065ca <_calloc_r+0x22>
1a0065f6:	2100      	movs	r1, #0
1a0065f8:	f7fc fb96 	bl	1a002d28 <memset>
1a0065fc:	4620      	mov	r0, r4
1a0065fe:	bd10      	pop	{r4, pc}
1a006600:	f100 0208 	add.w	r2, r0, #8
1a006604:	e7e1      	b.n	1a0065ca <_calloc_r+0x22>
1a006606:	bf00      	nop

1a006608 <__ascii_mbtowc>:
1a006608:	b082      	sub	sp, #8
1a00660a:	b149      	cbz	r1, 1a006620 <__ascii_mbtowc+0x18>
1a00660c:	b15a      	cbz	r2, 1a006626 <__ascii_mbtowc+0x1e>
1a00660e:	b16b      	cbz	r3, 1a00662c <__ascii_mbtowc+0x24>
1a006610:	7813      	ldrb	r3, [r2, #0]
1a006612:	600b      	str	r3, [r1, #0]
1a006614:	7812      	ldrb	r2, [r2, #0]
1a006616:	1c10      	adds	r0, r2, #0
1a006618:	bf18      	it	ne
1a00661a:	2001      	movne	r0, #1
1a00661c:	b002      	add	sp, #8
1a00661e:	4770      	bx	lr
1a006620:	a901      	add	r1, sp, #4
1a006622:	2a00      	cmp	r2, #0
1a006624:	d1f3      	bne.n	1a00660e <__ascii_mbtowc+0x6>
1a006626:	4610      	mov	r0, r2
1a006628:	b002      	add	sp, #8
1a00662a:	4770      	bx	lr
1a00662c:	f06f 0001 	mvn.w	r0, #1
1a006630:	e7f4      	b.n	1a00661c <__ascii_mbtowc+0x14>
1a006632:	bf00      	nop

1a006634 <__ascii_wctomb>:
1a006634:	b149      	cbz	r1, 1a00664a <__ascii_wctomb+0x16>
1a006636:	2aff      	cmp	r2, #255	; 0xff
1a006638:	d802      	bhi.n	1a006640 <__ascii_wctomb+0xc>
1a00663a:	700a      	strb	r2, [r1, #0]
1a00663c:	2001      	movs	r0, #1
1a00663e:	4770      	bx	lr
1a006640:	238a      	movs	r3, #138	; 0x8a
1a006642:	6003      	str	r3, [r0, #0]
1a006644:	f04f 30ff 	mov.w	r0, #4294967295
1a006648:	4770      	bx	lr
1a00664a:	4608      	mov	r0, r1
1a00664c:	4770      	bx	lr
1a00664e:	bf00      	nop
1a006650:	706d6554 	.word	0x706d6554
1a006654:	25203a20 	.word	0x25203a20
1a006658:	66322e35 	.word	0x66322e35
1a00665c:	ffffff00 	.word	0xffffff00

1a006660 <InitClkStates>:
1a006660:	01010f01                                ....

1a006664 <pinmuxing>:
1a006664:	00440002 00440102 00440202 00400a02     ..D...D...D...@.
1a006674:	00400b02 00400c02 00500001 00500101     ..@...@...P...P.
1a006684:	00500201 00500601 00500106 00500406     ..P...P...P...P.
1a006694:	00500506 00540706 00540806 00500906     ..P...T...T...P.
1a0066a4:	00500a06 00500b06 00500c06 00f0040f     ..P...P...P.....
1a0066b4:	00d50301 00d50401 00160107 00560207     ..............V.
1a0066c4:	00520302 00520402 00520509 00570609     ..R...R...R...W.
1a0066d4:	00570206                                ..W.

1a0066d8 <ExtRateIn>:
1a0066d8:	00000000                                ....

1a0066dc <GpioButtons>:
1a0066dc:	08000400 09010900                       ........

1a0066e4 <GpioLeds>:
1a0066e4:	01050005 0e000205 0c010b01              ............

1a0066f0 <GpioPorts>:
1a0066f0:	03030003 0f050403 05031005 07030603     ................
1a006700:	ffff0802                                ....

1a006704 <OscRateIn>:
1a006704:	00b71b00                                ....

1a006708 <InitClkStates>:
1a006708:	00010100 00010909 0001090a 01010701     ................
1a006718:	00010902 00010906 0101090c 0001090d     ................
1a006728:	0001090e 0001090f 00010910 00010911     ................
1a006738:	00010912 00010913 00011114 00011119     ................
1a006748:	0001111a 0001111b 08040201 0f0f0f03     ................
1a006758:	ffff00ff                                ....

1a00675c <periph_to_base>:
1a00675c:	00050000 0020000a 00090024 00400040     ...... .$...@.@.
1a00676c:	00600005 000400a6 00c300c0 00e00002     ..`.............
1a00677c:	000100e0 01000100 01200003 00060120     .......... . ...
1a00678c:	01400140 0142000c 00190142 01620162     @.@...B.B...b.b.
1a00679c:	01820013 00120182 01a201a2 01c20011     ................
1a0067ac:	001001c2 01e201e2 0202000f 000e0202     ................
1a0067bc:	02220222 0223000d 001c0223              "."...#.#...

1a0067c8 <UART_BClock>:
1a0067c8:	01a201c2 01620182                       ......b.

1a0067d0 <UART_PClock>:
1a0067d0:	00820081 00a200a1                       ........

1a0067d8 <gpioPinsInit>:
1a0067d8:	02000104 00050701 05010d03 04080100     ................
1a0067e8:	02020002 02000304 00000403 04070002     ................
1a0067f8:	030c0300 09050402 05040103 04030208     ................
1a006808:	04020305 06040504 0802000c 03000b06     ................
1a006818:	00090607 07060503 060f0504 03030004     ................
1a006828:	02000404 00050404 06040502 04060200     ................
1a006838:	0c050408 05040a04 0003010e 14010a00     ................
1a006848:	010f0000 0d000012 00001101 0010010c     ................
1a006858:	07070300 000f0300 01000001 00000000     ................
1a006868:	000a0600 08060603 06100504 04030005     ................
1a006878:	03000106 04090400 04010d05 010b0000     ................
1a006888:	0200000f 00000001 00010104 02010800     ................
1a006898:	01090000 09010006 05040002 04010200     ................
1a0068a8:	02020105 02020504 0e00000a 01000b02     ................
1a0068b8:	000c020b ffff0c01                       ........

1a0068c0 <lpcUarts>:
1a0068c0:	40081000 06020406 00180205 40081000     ...@...........@
1a0068d0:	09070509 00180706 40082000 00000000     ......... .@....
1a0068e0:	00190000 400c1000 07060107 001a0602     .......@........
1a0068f0:	400c1000 01010f01 001a0110 400c2000     ...@......... .@
1a006900:	02020302 001b0204                       ........

1a006908 <_ctype_>:
1a006908:	20202000 20202020 28282020 20282828     .         ((((( 
1a006918:	20202020 20202020 20202020 20202020                     
1a006928:	10108820 10101010 10101010 10101010      ...............
1a006938:	04040410 04040404 10040404 10101010     ................
1a006948:	41411010 41414141 01010101 01010101     ..AAAAAA........
1a006958:	01010101 01010101 01010101 10101010     ................
1a006968:	42421010 42424242 02020202 02020202     ..BBBBBB........
1a006978:	02020202 02020202 02020202 10101010     ................
1a006988:	00000020 00000000 00000000 00000000      ...............
	...
1a006a08:	ffffff00 00464e49 00666e69 004e414e     ....INF.inf.NAN.
1a006a18:	006e616e 33323130 37363534 62613938     nan.0123456789ab
1a006a28:	66656463 00000000 33323130 37363534     cdef....01234567
1a006a38:	42413938 46454443 00000000 6c756e28     89ABCDEF....(nul
1a006a48:	0000296c ffff0030                       l)..0...

1a006a50 <blanks.8678>:
1a006a50:	20202020 20202020 20202020 20202020                     

1a006a60 <zeroes.8679>:
1a006a60:	30303030 30303030 30303030 30303030     0000000000000000
1a006a70:	004e614e 69666e49 7974696e ffffff00     NaN.Infinity....

1a006a80 <__mprec_bigtens>:
1a006a80:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
1a006a90:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
1a006aa0:	7f73bf3c 75154fdd                       <.s..O.u

1a006aa8 <__mprec_tens>:
1a006aa8:	00000000 3ff00000 00000000 40240000     .......?......$@
1a006ab8:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
1a006ac8:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
1a006ad8:	00000000 412e8480 00000000 416312d0     .......A......cA
1a006ae8:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
1a006af8:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
1a006b08:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
1a006b18:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
1a006b28:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
1a006b38:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
1a006b48:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
1a006b58:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
1a006b68:	79d99db4 44ea7843                       ...yCx.D

1a006b70 <p05.7442>:
1a006b70:	00000005 00000019 0000007d 00000043     ........}...C...
1a006b80:	49534f50 ffff0058 0000002e              POSIX.......
